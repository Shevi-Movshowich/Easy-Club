{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Sidebar\\\\Sidebar.js\";\n// import React, { Component, createRef } from \"react\";\n// import { NavLink, Link } from 'react-router-dom';\n// import {\n//     Button,\n//     Header,\n//     Icon,\n//     Image,\n//     Menu,\n//     Segment,\n//     Sidebar, Sticky, Ref\n// } from \"semantic-ui-react\";\n// import Login from '../Login/Login';\n// import { Route, Switch, Redirect, Router } from 'react-router-dom';\n// import UsersSignUp from '../Users/SignUp/SignUp';\n// import UserApplication from '../Users/Application/Application';\n// import Stores from '../MyStores/MyStores';\n// import Report from '../Users/Report/Report';\n// import UserNewCard from '../Users/NewCard/NewCard';\n// import EnterpApplication from '../Enterprise/Application/Application';\n// import EnterpNewCard from '../Enterprise/NewCard/NewCard';\n// import Update from '../Enterprise/Update/Update';\n// import Cards from '../Users/Cards/Cards';\n// import NewCard from '../Users/NewCard/NewCard';\n// import { withRouter } from 'react-router-dom'\n// import Agreement from '../Enterprise/Agreement/Agreement';\n// import Clearing from '../Clearing/Clearing';\n// import EnterpriseSingUp from '../Enterprise/SignUp//SignUp';\n// import NewPassword from '../NewPassword/NewPassword';\n// import ContactUs from '../ContactUs/ContactUs';\n// import Chat from '../Chat/Chat';\n// import Lotery from '../Enterprise/Lotery/Lotery';\n// // import Home from \"../Home/Home\"\n// import { tsImportEqualsDeclaration } from \"@babel/types\";\n// import SignUp from \"../Enterprise/SignUp//SignUp\";\n// class MySidebar extends Component {\n//     state = {\n//         visible: false,\n//         navlinks: {\n//             1: {\n//                 value: \"Home\",\n//                 path: \"/\",\n//             },\n//             2: {\n//                 value: \"User login\",\n//                 path: \"users/login\"\n//             },\n//             3: {\n//                 value: \"Enterprise login\",\n//                 path: \"enterprises/login\"\n//             },\n//             4: {\n//                 value: \"About\",\n//                 path: \"/about\"\n//             },\n//             5: {\n//                 value: \"Why it's worth me\",\n//                 path: \"/\"\n//             },\n//             6: {\n//                 value: \"Why it's worth my enterprise\",\n//                 path: \"/\"\n//             },\n//             7: {\n//                 value: \"Enterprises\",\n//                 path: \"/\"\n//             },\n//             8: {\n//                 value: \"Contact us\",\n//                 path: \"contect\"\n//             },\n//         }\n//     };\n//     handleHideClick = () => this.setState({ visible: false });\n//     handleShowClick = () => this.setState({ visible: true });\n//     handleSidebarHide = () => this.setState({ visible: false });\n//     render() {\n//         const contextRef = createRef();\n//         const array = [];\n//         for (let x in this.state.navlinks) {\n//             array.push({ id: x, config: this.state.navlinks[x] })\n//         }\n//         const { visible } = this.state;\n//         return (\n//             <div>\n//                 <Ref innerRef={contextRef}>\n//                     <Sidebar.Pushable style={{ transform: \"none\" }}>\n//                         <Sticky context={contextRef}>\n//                             <div style={{ backgroundColor: \"red\", textAlign: \"left\", zIndex: \"50\",height:\"7vh\" }} >\n//                                 <Button id=\"sidebarout\" onClick={this.handleShowClick}>|||</Button></div>\n//                             <Sidebar style={{ backgroundColor: \"#282c34\" }}\n//                                 as={Menu}\n//                                 animation=\"overlay\"\n//                                 icon=\"labeled\"\n//                                 inverted\n//                                 onHide={this.handleSidebarHide}\n//                                 vertical\n//                                 visible={visible}\n//                                 width=\"thin\" >\n//                                 <Button id=\"sidebarin\" onClick={this.handleHideClick}>X</Button>\n//                                 {array.map((x, i) => {\n//                                     return <Menu.Item as='a'><NavLink to={x.config.path}>{x.config.value}</NavLink></Menu.Item>\n//                                 })}\n//                             </Sidebar>\n//                         </Sticky>\n//                         {/* <Sidebar.Pusher> */}\n//                         {/* <Switch>\n//                             <Home></Home>\n//                         </Switch> */}\n//                         {/* </Sidebar.Pusher> */}\n//                     </Sidebar.Pushable>\n//                 </Ref>\n//             </div>\n//         );\n//     }\n// }\n// export default MySidebar\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport Menu from 'react-semantic-ui-accordion-menu';\nimport { Icon } from 'semantic-ui-react';\nconst config = [// Wen no \"content\" or \"section\" are provided provide a NavLink into the title property\n{\n  id: \"section-2\",\n  title: /*#__PURE__*/React.createElement(NavLink, {\n    exact: true,\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 34\n    }\n  }), \"Home\"),\n  content: null\n}, // When sections are provided, subaccordions will be generated\n{\n  id: \"section-1\",\n  title: [/*#__PURE__*/React.createElement(Icon, {\n    key: \"sitemap\",\n    name: \"sitemap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), \"Section 1\"],\n  sections: [{\n    id: \"section-1.1\",\n    title: [/*#__PURE__*/React.createElement(Icon, {\n      key: \"archive\",\n      name: \"archive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }), \"Section 1.1\"],\n    // When a icon is needed in title, pass it as a fragment     \n    content: [/*#__PURE__*/React.createElement(NavLink, {\n      key: \"about\",\n      exact: true,\n      to: \"/about/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"file alternate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 59\n      }\n    }), \"About\"), /*#__PURE__*/React.createElement(NavLink, {\n      key: \"test\",\n      exact: true,\n      to: \"/test/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 106\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"folder open\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 144\n      }\n    }), \"Test\")] // Multiple links in content could be also passed in as frament\n\n  }, {\n    id: \"section-1.2\",\n    title: [/*#__PURE__*/React.createElement(Icon, {\n      key: \"calculator\",\n      name: \"calculator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }), \"Section 1.2\"],\n    // When a icon is needed in title, pass it as a fragment\n    sections: [{\n      id: \"section-1.2.1\",\n      title: [/*#__PURE__*/React.createElement(Icon, {\n        key: \"camera\",\n        name: \"camera\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }), \"Section 1.2.1\"],\n      content: /*#__PURE__*/React.createElement(NavLink, {\n        exact: true,\n        to: \"/users/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 50\n        }\n      }), \"Users\")\n    }]\n  }]\n}];\n\nconst Index = () => /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 21\n  }\n}, \"Home\");\n\nconst About = () => /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 21\n  }\n}, \"About\");\n\nconst Users = () => /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 21\n  }\n}, \"Users\");\n\nconst Test = () => /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 20\n  }\n}, \"Test\");\n\nclass MySidebar extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        paddingLeft: 215\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar\",\n      style: {\n        position: 'fixed',\n        left: 0,\n        top: 0,\n        bottom: 0,\n        width: 200,\n        borderRight: '1px solid #ccc',\n        backgroundColor: '#002657'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      tree: config,\n      submenuBackgroundColor: \"#002657\",\n      submenuFontColor: \"#ffffff\",\n      separatorColor: \"rgba(255,255,255,.1)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/about/\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/users/\",\n      component: Users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/test/\",\n      component: Test,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default MySidebar;","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Sidebar/Sidebar.js"],"names":["React","Component","BrowserRouter","Router","Route","NavLink","Menu","Icon","config","id","title","content","sections","Index","About","Users","Test","MySidebar","render","paddingLeft","position","left","top","bottom","width","borderRight","backgroundColor"],"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","sourcesContent":["// import React, { Component, createRef } from \"react\";\r\n// import { NavLink, Link } from 'react-router-dom';\r\n// import {\r\n//     Button,\r\n//     Header,\r\n//     Icon,\r\n//     Image,\r\n//     Menu,\r\n//     Segment,\r\n//     Sidebar, Sticky, Ref\r\n// } from \"semantic-ui-react\";\r\n// import Login from '../Login/Login';\r\n// import { Route, Switch, Redirect, Router } from 'react-router-dom';\r\n// import UsersSignUp from '../Users/SignUp/SignUp';\r\n// import UserApplication from '../Users/Application/Application';\r\n// import Stores from '../MyStores/MyStores';\r\n// import Report from '../Users/Report/Report';\r\n// import UserNewCard from '../Users/NewCard/NewCard';\r\n// import EnterpApplication from '../Enterprise/Application/Application';\r\n// import EnterpNewCard from '../Enterprise/NewCard/NewCard';\r\n// import Update from '../Enterprise/Update/Update';\r\n// import Cards from '../Users/Cards/Cards';\r\n// import NewCard from '../Users/NewCard/NewCard';\r\n// import { withRouter } from 'react-router-dom'\r\n// import Agreement from '../Enterprise/Agreement/Agreement';\r\n// import Clearing from '../Clearing/Clearing';\r\n// import EnterpriseSingUp from '../Enterprise/SignUp//SignUp';\r\n// import NewPassword from '../NewPassword/NewPassword';\r\n// import ContactUs from '../ContactUs/ContactUs';\r\n// import Chat from '../Chat/Chat';\r\n// import Lotery from '../Enterprise/Lotery/Lotery';\r\n// // import Home from \"../Home/Home\"\r\n// import { tsImportEqualsDeclaration } from \"@babel/types\";\r\n// import SignUp from \"../Enterprise/SignUp//SignUp\";\r\n// class MySidebar extends Component {\r\n//     state = {\r\n//         visible: false,\r\n//         navlinks: {\r\n//             1: {\r\n//                 value: \"Home\",\r\n//                 path: \"/\",\r\n//             },\r\n//             2: {\r\n//                 value: \"User login\",\r\n//                 path: \"users/login\"\r\n//             },\r\n//             3: {\r\n//                 value: \"Enterprise login\",\r\n//                 path: \"enterprises/login\"\r\n//             },\r\n//             4: {\r\n//                 value: \"About\",\r\n//                 path: \"/about\"\r\n//             },\r\n//             5: {\r\n//                 value: \"Why it's worth me\",\r\n//                 path: \"/\"\r\n//             },\r\n//             6: {\r\n//                 value: \"Why it's worth my enterprise\",\r\n//                 path: \"/\"\r\n//             },\r\n//             7: {\r\n//                 value: \"Enterprises\",\r\n//                 path: \"/\"\r\n//             },\r\n\r\n//             8: {\r\n//                 value: \"Contact us\",\r\n//                 path: \"contect\"\r\n//             },\r\n//         }\r\n//     };\r\n//     handleHideClick = () => this.setState({ visible: false });\r\n//     handleShowClick = () => this.setState({ visible: true });\r\n//     handleSidebarHide = () => this.setState({ visible: false });\r\n\r\n//     render() {\r\n//         const contextRef = createRef();\r\n//         const array = [];\r\n//         for (let x in this.state.navlinks) {\r\n//             array.push({ id: x, config: this.state.navlinks[x] })\r\n//         }\r\n//         const { visible } = this.state;\r\n//         return (\r\n//             <div>\r\n//                 <Ref innerRef={contextRef}>\r\n//                     <Sidebar.Pushable style={{ transform: \"none\" }}>\r\n//                         <Sticky context={contextRef}>\r\n//                             <div style={{ backgroundColor: \"red\", textAlign: \"left\", zIndex: \"50\",height:\"7vh\" }} >\r\n//                                 <Button id=\"sidebarout\" onClick={this.handleShowClick}>|||</Button></div>\r\n//                             <Sidebar style={{ backgroundColor: \"#282c34\" }}\r\n//                                 as={Menu}\r\n//                                 animation=\"overlay\"\r\n//                                 icon=\"labeled\"\r\n//                                 inverted\r\n//                                 onHide={this.handleSidebarHide}\r\n//                                 vertical\r\n//                                 visible={visible}\r\n//                                 width=\"thin\" >\r\n//                                 <Button id=\"sidebarin\" onClick={this.handleHideClick}>X</Button>\r\n//                                 {array.map((x, i) => {\r\n//                                     return <Menu.Item as='a'><NavLink to={x.config.path}>{x.config.value}</NavLink></Menu.Item>\r\n//                                 })}\r\n//                             </Sidebar>\r\n//                         </Sticky>\r\n//                         {/* <Sidebar.Pusher> */}\r\n//                         {/* <Switch>\r\n//                             <Home></Home>\r\n//                         </Switch> */}\r\n//                         {/* </Sidebar.Pusher> */}\r\n//                     </Sidebar.Pushable>\r\n//                 </Ref>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default MySidebar\r\nimport React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport Menu from 'react-semantic-ui-accordion-menu';\r\nimport { Icon } from 'semantic-ui-react';\r\n \r\nconst config  = [\r\n  // Wen no \"content\" or \"section\" are provided provide a NavLink into the title property\r\n  {\r\n    id: \"section-2\",\r\n    title: <NavLink exact to=\"/\"><Icon name=\"home\" />Home</NavLink>,\r\n    content: null,\r\n  },\r\n  // When sections are provided, subaccordions will be generated\r\n  {\r\n    id: \"section-1\",\r\n    title: [<Icon key=\"sitemap\" name=\"sitemap\" />,\"Section 1\"],\r\n    sections: [\r\n      { \r\n        id: \"section-1.1\",\r\n        title: [<Icon key=\"archive\" name=\"archive\" />,\"Section 1.1\"],  // When a icon is needed in title, pass it as a fragment     \r\n        content: [<NavLink key=\"about\" exact to=\"/about/\"><Icon name=\"file alternate\" />About</NavLink>, <NavLink key=\"test\" exact to=\"/test/\"><Icon name=\"folder open\" />Test</NavLink>],  // Multiple links in content could be also passed in as frament\r\n      },     \r\n      {\r\n        id: \"section-1.2\",\r\n        title: [<Icon key=\"calculator\" name=\"calculator\" />, \"Section 1.2\"],  // When a icon is needed in title, pass it as a fragment\r\n        sections: [\r\n          {\r\n            id: \"section-1.2.1\",\r\n            title: [<Icon key=\"camera\" name=\"camera\" />, \"Section 1.2.1\"],\r\n            content: <NavLink exact to=\"/users/\"><Icon name=\"users\" />Users</NavLink>,\r\n          }\r\n        ]\r\n      },\r\n    ]\r\n  },\r\n];\r\n \r\nconst Index = () => <h2>Home</h2>;\r\n \r\nconst About = () => <h2>About</h2>;\r\n \r\nconst Users = () => <h2>Users</h2>;\r\n \r\nconst Test = () => <h2>Test</h2>;\r\n \r\nclass MySidebar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\" style={{ paddingLeft: 215 }}>\r\n      <Router>\r\n        <div className=\"sidebar\" style={{ position: 'fixed', left: 0, top: 0, bottom: 0, width: 200, borderRight: '1px solid #ccc', backgroundColor: '#002657' }}>\r\n          <Menu \r\n            tree={config}\r\n            submenuBackgroundColor='#002657'\r\n            submenuFontColor='#ffffff'\r\n            separatorColor='rgba(255,255,255,.1)'\r\n          />\r\n        </div>\r\n          <div className=\"content\">\r\n            <Route path=\"/\" exact component={Index} />\r\n            <Route path=\"/about/\" component={About} />\r\n            <Route path=\"/users/\" component={Users} />\r\n            <Route path=\"/test/\" component={Test} />\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default MySidebar;\r\n"]},"metadata":{},"sourceType":"module"}