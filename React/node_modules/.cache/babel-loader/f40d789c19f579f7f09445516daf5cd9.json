{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\NewCard\\\\NewCard.js\";\nimport React, { Component } from 'react';\nimport Lotery from '../Lotery/Lotery';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Checkbox, Select, Input, Popup } from 'semantic-ui-react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { InputFile } from 'semantic-ui-react-input-file';\nimport { Route, Switch, Redirect, Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { selectCard } from \"../../../Store/actions/EnterpriseAction\";\nimport axios from 'axios'; // import convertImg from \"../../../convertImg\"\n\nclass NewCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        cost: {\n          icon: 'dollar sign',\n          text: 'Card Price',\n          type: 'text',\n          maxLength: 7\n        }\n      },\n      type: \"\",\n      img: null,\n      fileName: \"\"\n    };\n\n    this.hanleSelctOnChange = (event, {\n      value\n    }) => {\n      console.log(value); //להמיר לסטרינג\n\n      console.log(\"ghhj\");\n      this.setState({\n        type: value\n      });\n      console.log(this.state.type);\n    };\n\n    this.click = () => {};\n\n    this.convertImg = event => {\n      const file = event.target.files[0];\n      var name = file.name;\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      console.log(reader);\n\n      reader.onload = () => {\n        this.setState({\n          fileName: name\n        });\n        this.setState({\n          img: String(reader.result)\n        }); // this.setState({fileName:String(reader.fileName)})\n      };\n    };\n  }\n\n  render() {\n    console.log(this.state.fileName);\n    console.log(this.state.img);\n    const array = [];\n\n    for (let x in this.state.form) {\n      array.push({\n        id: x,\n        config: this.state.form[x]\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"1vw\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        width: '30vw',\n        marginLeft: '35vw',\n        marginTop: '5vh',\n        textAlign: 'center',\n        fontSize: '180%',\n        color: 'rgb(40, 44, 52)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"New Card\"), /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \"Card Details\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, array.map((x, i) => {\n      console.log(x.config);\n      return /*#__PURE__*/React.createElement(Form.Input, {\n        label: \"Price For Customer\",\n        labelPosition: \"left\",\n        key: i,\n        iconPosition: \"left\",\n        maxLength: x.config.maxLength,\n        type: x.config.type // onChange={event => this.onChangeHendler(event, x.id)}\n        // className={this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id}\n        ,\n        placeholder: x.config.text + \"*\",\n        icon: x.config.icon,\n        step: x.config.step,\n        checked: x.config.checked // onFocus={(e) => x.config.birthdate===true?e.target.type = 'date':\"text\"} \n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 28\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Form.Group, {\n      inline: true,\n      label: \"Count Points\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      content: \"For example 100 point =3$\",\n      trigger: /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"points\",\n        type: \"Number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }), \"=\", /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"moneys\",\n      icon: \"dollar sign\",\n      type: \"Number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Form.Select, {\n      label: \"Card Type\",\n      placeholder: \"Type\",\n      options: [{\n        key: \"Basic\",\n        text: 'Basic card',\n        value: 'Basic card'\n      }, {\n        key: \"Primium\",\n        text: 'Primium card',\n        value: 'Primium card'\n      }],\n      onChange: this.hanleSelctOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputFile, {\n      class: \".ui.form .field .ui.input\",\n      label: \"Image\",\n      button: {\n        content: this.state.fileName\n      },\n      input: {\n        id: 'input-control-id',\n        onChange: this.convertImg,\n        name: this.state.fileName\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"teal\",\n      style: {\n        fontSize: \"18px\",\n        marginTop: \"9vh\",\n        padding: \"2vh\",\n        width: \"25%\",\n        backgroundColor: \"#282c34\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, \"Next\")));\n  }\n\n} // const mapStateToProps = state => {\n//     return {\n//       enterprise: state.enterprise.enterprise\n//     }\n//   }\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectCard: card => dispatch(selectCard(card))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewCard);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/NewCard/NewCard.js"],"names":["React","Component","Lotery","Button","Form","Grid","Header","Image","Message","Segment","Checkbox","Select","Input","Popup","NavLink","withRouter","InputFile","Route","Switch","Redirect","Router","connect","selectCard","axios","NewCard","state","form","cost","icon","text","type","maxLength","img","fileName","hanleSelctOnChange","event","value","console","log","setState","click","convertImg","file","target","files","name","reader","FileReader","readAsDataURL","onload","String","result","render","array","x","push","id","config","marginLeft","textAlign","width","marginTop","fontSize","color","onSubmitHandler","map","i","step","checked","key","content","onChange","padding","backgroundColor","mapDispatchToProps","dispatch","card"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Lotery from '../Lotery/Lotery';\r\nimport { Button, Form, Grid, Header, Image, Message, Segment, Checkbox, Select, Input, Popup } from 'semantic-ui-react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { InputFile } from 'semantic-ui-react-input-file';\r\nimport { Route, Switch, Redirect, Router } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { selectCard } from \"../../../Store/actions/EnterpriseAction\"\r\nimport axios from 'axios';\r\n// import convertImg from \"../../../convertImg\"\r\nclass NewCard extends Component {\r\n\r\n    state = {\r\n        form: {\r\n            cost: {\r\n                icon: 'dollar sign',\r\n                text: 'Card Price',\r\n                type: 'text',\r\n                maxLength: 7,\r\n            },\r\n        },\r\n        type: \"\",\r\n        img: null,\r\n        fileName: \"\",\r\n    }\r\n    hanleSelctOnChange = (event, { value }) => {\r\n        console.log(value);\r\n        //להמיר לסטרינג\r\n        console.log(\"ghhj\")\r\n        this.setState({ type: value })\r\n        console.log(this.state.type)\r\n\r\n\r\n    }\r\n    click = () => {\r\n    }\r\n    convertImg = (event) => {\r\n        const file = event.target.files[0];\r\n        var name = file.name;\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        console.log(reader)\r\n        reader.onload = () => {\r\n            this.setState({ fileName: name })\r\n            this.setState({ img: String(reader.result) })\r\n            // this.setState({fileName:String(reader.fileName)})\r\n        }\r\n    }\r\n    render() {\r\n        console.log(this.state.fileName)\r\n        console.log(this.state.img)\r\n        const array = [];\r\n        for (let x in this.state.form) {\r\n            array.push({ id: x, config: this.state.form[x] })\r\n        }\r\n        return (<div style={{ marginLeft: \"1vw\", textAlign: \"center\" }}>\r\n            <h1 style={{ width: '30vw', marginLeft: '35vw', marginTop: '5vh', textAlign: 'center', fontSize: '180%', color: 'rgb(40, 44, 52)' }}>New Card</h1>\r\n            {/* <Grid textAlign='center' style={{ height: '75vh', marginTop: '10vh' }} verticalAlign='middle'> */}\r\n            {/* <Grid.Column style={{ maxWidth: 450, boxShadow: '5px 2px 1px -1px rgba(0, 0, 0, 0.2), 5px 5px 5px 5px rgba(0, 0, 0, 0.14), 5px 1px 7px 4px rgba(0, 0, 0, 0.12)', borderRadius: '10%', height: '67%', width: '37vw' }}> */}\r\n            <Header as='h2' color='teal' textAlign='left'>Card Details</Header>\r\n            <Form onSubmit={this.onSubmitHandler}>\r\n                {/* <Segment stacked> */}\r\n                {array.map((x, i) => {\r\n                    console.log(x.config)\r\n                    return <Form.Input\r\n                        label=\"Price For Customer\"\r\n                        labelPosition=\"left\"\r\n                        key={i} iconPosition=\"left\"\r\n                        maxLength={x.config.maxLength}\r\n                        type={x.config.type}\r\n                        // onChange={event => this.onChangeHendler(event, x.id)}\r\n                        // className={this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id}\r\n                        placeholder={x.config.text + \"*\"}\r\n                        icon={x.config.icon}\r\n                        step={x.config.step}\r\n                        checked={x.config.checked}\r\n                    // onFocus={(e) => x.config.birthdate===true?e.target.type = 'date':\"text\"} \r\n                    >\r\n                    </Form.Input>\r\n                })}\r\n                <Form.Group inline label=\"Count Points\">\r\n                    <Popup\r\n                        content=\"For example 100 point =3$\"\r\n                        trigger={\r\n                            <Input placeholder=\"points\" type='Number'></Input>\r\n                        }\r\n                    />\r\n                         =<Input placeholder=\"moneys\" icon=\"dollar sign\" type='Number'></Input></Form.Group>\r\n                <Form.Select\r\n                label=\"Card Type\"\r\n                    placeholder=\"Type\"\r\n                    options={[{ key: \"Basic\", text: 'Basic card', value: 'Basic card' }, { key: \"Primium\", text: 'Primium card', value: 'Primium card' }]}\r\n                    onChange={this.hanleSelctOnChange}\r\n\r\n                ></Form.Select>\r\n                <br></br>\r\n                <InputFile class=\".ui.form .field .ui.input\"\r\n                label=\"Image\"\r\n                    button={{\r\n                        content: this.state.fileName,\r\n                    }}\r\n                    input={{\r\n                        id: 'input-control-id',\r\n                        onChange: this.convertImg,\r\n                        name: this.state.fileName,\r\n                    }}\r\n                />\r\n                <Button type=\"submit\" color='teal' style={{ fontSize: \"18px\", marginTop: \"9vh\", padding: \"2vh\", width: \"25%\", backgroundColor: \"#282c34\" }}>Next</Button>\r\n\r\n                {/* </Segment> */}\r\n            </Form>\r\n            {/* </Grid.Column>\r\n            </Grid> */}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//       enterprise: state.enterprise.enterprise\r\n//     }\r\n//   }\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectCard: (card) => dispatch(selectCard(card)),\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(NewCard);"]},"metadata":{},"sourceType":"module"}