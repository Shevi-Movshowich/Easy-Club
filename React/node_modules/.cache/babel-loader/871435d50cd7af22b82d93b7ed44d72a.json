{"ast":null,"code":"import axios from 'axios';\nexport const getUser = (mail, password) => {\n  return dispatch => {\n    // dispatch({ type: \"LOGIN\" });\n    dispatch({\n      type: \"LOADING\",\n      payload: true\n    });\n    axios.get(`http://localhost:64430/api/Users?password=${password}&email=${mail}`).then(x => {\n      dispatch({\n        type: \"SELECT_USER\",\n        payload: x.data\n      });\n      this.props.history.replace(\"/users/cards\");\n    }).catch(x => {\n      dispatch({\n        type: \"LOADING\",\n        payload: false\n      });\n      dispatch({\n        type: \"ERROR\",\n        payload: x.response.data.Message\n      });\n    });\n  };\n};","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Store/actions/UserAction.js"],"names":["axios","getUser","mail","password","dispatch","type","payload","get","then","x","data","props","history","replace","catch","response","Message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACvC,SAAOC,QAAQ,IAAI;AACf;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,OAAO,EAAE;AAA5B,KAAD,CAAR;AACAN,IAAAA,KAAK,CAACO,GAAN,CAAW,6CAA4CJ,QAAS,UAASD,IAAK,EAA9E,EAAiFM,IAAjF,CAAsFC,CAAC,IAAI;AACvFL,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,OAAO,EAAEG,CAAC,CAACC;AAAlC,OAAD,CAAR;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,OAAnB,CAA2B,cAA3B;AACH,KAHD,EAGGC,KAHH,CAGSL,CAAC,IAAI;AACVL,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,OAAO,EAAE;AAA5B,OAAD,CAAR;AACAF,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAEG,CAAC,CAACM,QAAF,CAAWL,IAAX,CAAgBM;AAA1C,OAAD,CAAR;AACH,KAND;AAOH,GAVD;AAWH,CAZM","sourcesContent":["import axios from 'axios';\r\nexport const getUser = (mail, password) => {\r\n    return dispatch => {\r\n        // dispatch({ type: \"LOGIN\" });\r\n        dispatch({ type: \"LOADING\", payload: true });\r\n        axios.get(`http://localhost:64430/api/Users?password=${password}&email=${mail}`).then(x => {\r\n            dispatch({ type: \"SELECT_USER\", payload: x.data });\r\n            this.props.history.replace(\"/users/cards\");\r\n        }).catch(x => {\r\n            dispatch({ type: \"LOADING\", payload: false });\r\n            dispatch({ type: \"ERROR\", payload: x.response.data.Message });\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}