{"ast":null,"code":"import axios from 'axios';\nexport const getEnterprise = (mail, password) => {\n  return dispatch => {\n    dispatch({\n      type: \"LOADING\",\n      payload: true\n    });\n    axios.get(`http://localhost:64430/api/Enterprises?password=${password}&email=${mail}`).then(x => {\n      dispatch({\n        type: \"LOADING\",\n        payload: false\n      });\n      dispatch({\n        type: \"MESSAGE\",\n        payload: x.data\n      });\n    }).catch(x => {\n      dispatch({\n        type: \"LOADING\",\n        payload: false\n      });\n      dispatch({\n        type: \"ERROR\",\n        payload: x.response.data.Message\n      });\n    });\n  };\n};\nexport const getEnterpriseById = id => {\n  return dispatch => {\n    dispatch({\n      type: \"LOADING\",\n      payload: true\n    });\n    axios.get(`http://localhost:64430/api/Enterprises?enterpId=${id}`).then(x => {\n      dispatch({\n        type: \"LOADING\",\n        payload: false\n      });\n      dispatch({\n        type: \"SELECT_ENTERPRISE\",\n        payload: x.data\n      });\n    }).catch(x => {\n      dispatch({\n        type: \"LOADING\",\n        payload: false\n      });\n      dispatch({\n        type: \"ERROR\",\n        payload: x.response.data.Message\n      });\n    });\n  };\n};\nexport const postNewCard = (card, lotteries, enterpId) => {\n  return dispatch => {\n    dispatch({\n      type: \"LOADING\",\n      payload: true\n    });\n    axios.post(`http://localhost:64430/api/EnterpCards`, {\n      Card: card,\n      Lotteries: lotteries,\n      EnterpId: enterpId\n    }).then(x => {\n      this.props.history.replace('clearing');\n    }).catch(x => {\n      dispatch({\n        type: \"ERROR\",\n        payload: x.response.data.Message\n      });\n    });\n    dispatch({\n      type: \"LOADING\",\n      payload: false\n    });\n  };\n};","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Store/actions/EnterpriseAction.js"],"names":["axios","getEnterprise","mail","password","dispatch","type","payload","get","then","x","data","catch","response","Message","getEnterpriseById","id","postNewCard","card","lotteries","enterpId","post","Card","Lotteries","EnterpId","props","history","replace"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nexport const getEnterprise = (mail, password) => {\r\n    return dispatch => {\r\n        dispatch({ type: \"LOADING\", payload: true })\r\n        axios.get(`http://localhost:64430/api/Enterprises?password=${password}&email=${mail}`).then(x => {\r\n            dispatch({ type: \"LOADING\", payload: false });\r\n            dispatch({ type: \"MESSAGE\", payload: x.data });\r\n        }).catch(x => {\r\n            dispatch({ type: \"LOADING\", payload: false })\r\n            dispatch({ type: \"ERROR\", payload: x.response.data.Message });\r\n        })\r\n    }\r\n}\r\nexport const getEnterpriseById = (id) => {\r\n    return dispatch => {\r\n        dispatch({ type: \"LOADING\", payload: true })\r\n        axios.get(`http://localhost:64430/api/Enterprises?enterpId=${id}`).then(x => {\r\n            dispatch({ type: \"LOADING\", payload: false });\r\n            dispatch({ type: \"SELECT_ENTERPRISE\", payload: x.data });\r\n        }).catch(x => {\r\n            dispatch({ type: \"LOADING\", payload: false })\r\n            dispatch({ type: \"ERROR\", payload: x.response.data.Message });\r\n        })\r\n    }\r\n}\r\nexport const postNewCard = (card, lotteries, enterpId) => {\r\n    return dispatch => {\r\n        dispatch({ type: \"LOADING\", payload: true })\r\n        axios.post(`http://localhost:64430/api/EnterpCards`, { Card: card, Lotteries:lotteries, EnterpId: enterpId }).then(x => {\r\n            this.props.history.replace('clearing');\r\n        }).catch(x => {\r\n            dispatch({ type: \"ERROR\", payload: x.response.data.Message });\r\n        });\r\n        dispatch({ type: \"LOADING\", payload: false })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}