{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Login\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { getEnterprise } from '../../Store/actions/EnterpriseAction';\nimport * as actionName from '../../Store/actionTypes';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Loader, Dimmer } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport '../../App.css';\nimport { NavLink, withRouter, useLocation, Prompt } from 'react-router-dom';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        mail: {\n          icon: \"envelope\",\n          type: \"text\",\n          value: \"\",\n          text: \"Email\",\n          validation: {\n            pattern: /^[0-9a-zA-Z.+*%#!@]+$/,\n            required: true,\n            mail: true\n          }\n        },\n        password: {\n          icon: \"lock\",\n          type: \"password\",\n          value: \"\",\n          text: \"Password\",\n          validation: {\n            pattern: /^[0-9a-zA-Z]+$/,\n            required: true,\n            password: true\n          }\n        }\n      },\n      trySend: \"\",\n      loading: \"\",\n      errorMessage: \"\",\n      permission: true,\n      timeIsHoverError: \"\"\n    };\n\n    this.getUser = () => {\n      axios.get(`http://localhost:64430/api/users?password=${this.state.password}&email=${this.state.mail}`).then(x => {\n        this.props.selectUser(x.data);\n        this.props.history.replace('/users/cards');\n        console.log(this.props.user);\n      }).catch(x => {\n        document.getElementById(\"login_message\").innerHTML = x.response.data.Message;\n      });\n    };\n\n    this.getEnterprise = () => {\n      axios.get(`http://localhost:64430/api/Enterprises?password=${this.state.password}&email=${this.state.mail}`).then(x => {\n        this.props.selectEnterprise(x.data);\n        console.log(this.props.enterprise);\n        this.props.history.replace(\"/enterprises/new\");\n      }).catch(x => document.getElementById(\"login_message\").innerHTML = x.response.data.Message);\n    };\n\n    this.newPassword = () => {\n      if (this.mailValidation() === true) if (this.props.location.pathname === '/users/login') {\n        document.getElementById(\"dimmer\").setAttribute(\"active\", \"true\");\n        axios.get(`http://localhost:64430/api/Users?email=${this.state.mail}`).then(x => {\n          console.log(x.data);\n          this.props.selectUser(x.data);\n          console.log(this.props.user);\n          document.getElementById(\"newPassword\").innerHTML = \"sending email to:  \" + x.data.Email;\n        }).catch(x => document.getElementById(\"newPassword\").innerHTML = x.response.data.Message);\n      } else {\n        const status = false;\n        axios.get(`http://localhost:64430/api/Enterprises?email=${this.state.mail} `).then(x => {\n          console.log(x.data);\n          this.props.selectEnterprise(x.data);\n          document.getElementById(\"newPassword\").innerHTML = \"sending email to:  \" + x.data.Email;\n        }).catch(x => document.getElementById(\"newPassword\").innerHTML = x.response.data.Message);\n      }\n    };\n\n    this.mailValidation = () => {\n      if (this.state.mail === \"\") {\n        document.getElementById(\"login_message\").innerHTML = \"mail is required\";\n        document.getElementsByClassName(\"mail\")[0].classList.add(\"error\");\n        return false;\n      } else if (!this.state.mail.includes(\"@\")) {\n        document.getElementById(\"login_message\").innerHTML = \"mail must includes @\";\n        document.getElementsByClassName(\"mail\")[0].classList.add(\"error\");\n        return false;\n      }\n\n      return true;\n    };\n\n    this.passwordValidation = () => {\n      if (this.state.password === \"\") {\n        document.getElementById(\"login_message\").innerHTML = \"password is required\";\n        document.getElementsByClassName(\"password\")[0].classList.add(\"error\");\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleSubmit = e => {\n      document.getElementById(\"login_message\").innerHTML = \"\";\n\n      if (this.mailValidation() === true && this.passwordValidation() === true) {\n        if (this.props.location.pathname === '/users/login') this.getUser();else this.props.selectEnterprise(this.state.mail, this.state.password);\n      }\n    };\n\n    this.handleOnChangeMail = event => {\n      this.setState({\n        mail: event.target.value\n      });\n      document.getElementsByClassName(\"mail\")[0].classList.remove(\"error\");\n    };\n\n    this.handleOnChangePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n      document.getElementsByClassName(\"password\")[0].classList.remove(\"error\");\n    };\n  }\n\n  render() {\n    const array = [];\n\n    for (let x in this.state.form) {\n      array.push({\n        id: x,\n        config: this.state.form[x]\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: \"/Images/logo.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }), \" Log-in to your account\"), /*#__PURE__*/React.createElement(Form, {\n      size: \"tiny\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      stacked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, array.map((x, i) => {\n      return /*#__PURE__*/React.createElement(Form.Input, {\n        key: i,\n        iconPosition: \"left\",\n        type: x.config.type,\n        onChange: event => this.onChangeHendler(event, x.id),\n        className: this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id,\n        placeholder: x.config.text + \"*\",\n        icon: x.config.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 24\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"login_message\",\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, this.props.error), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"email_message\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, \"sending email\"))), /*#__PURE__*/React.createElement(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, \"New to us?\", /*#__PURE__*/React.createElement(NavLink, {\n      to: this.props.location.pathname === '/users/login' ? '/users/signUp' : '/enterprises/signUp',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }\n    }, \"Sign Up\"), \"\\xA0\"), /*#__PURE__*/React.createElement(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, \"forget your password?\", /*#__PURE__*/React.createElement(\"label\", {\n      onClick: this.newPassword,\n      style: {\n        color: 'blue'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 41\n      }\n    }, \"new password\"))), /*#__PURE__*/React.createElement(Dimmer, {\n      id: \"dimmer\",\n      inverted: \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"newPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    })), this.props.loading ? /*#__PURE__*/React.createElement(\"loading\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 31\n      }\n    }) : null);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.user,\n    enterprise: state.enterprise.enterprise\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectUser: user => dispatch({\n      type: \"SELECT_USER\",\n      payload: user\n    }),\n    selectEnterprise: enterprise => dispatch({\n      type: actionName.selectEnterprise,\n      payload: enterprise\n    }) // selectEnterprise: (email,password) => dispatch(getEnterprise(email,password)),\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Login/Login.js"],"names":["React","Component","getEnterprise","actionName","Button","Form","Grid","Header","Image","Message","Segment","Loader","Dimmer","NavLink","withRouter","useLocation","Prompt","axios","connect","Login","state","form","mail","icon","type","value","text","validation","pattern","required","password","trySend","loading","errorMessage","permission","timeIsHoverError","getUser","get","then","x","props","selectUser","data","history","replace","console","log","user","catch","document","getElementById","innerHTML","response","selectEnterprise","enterprise","newPassword","mailValidation","location","pathname","setAttribute","Email","status","getElementsByClassName","classList","add","includes","passwordValidation","handleSubmit","e","handleOnChangeMail","event","setState","target","remove","handleOnChangePassword","render","array","push","id","config","height","maxWidth","map","i","onChangeHendler","valid","color","error","display","mapStateToProps","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { getEnterprise } from '../../Store/actions/EnterpriseAction'\r\nimport * as actionName from '../../Store/actionTypes'\r\nimport { Button, Form, Grid, Header, Image, Message, Segment, Loader, Dimmer } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport '../../App.css'\r\nimport { NavLink, withRouter, useLocation, Prompt } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nclass Login extends Component {\r\n  state = {\r\n    form: {\r\n      mail: {\r\n        icon:\"envelope\",\r\n        type:\"text\",\r\n        value: \"\",\r\n        text: \"Email\",\r\n        validation: {\r\n          pattern: /^[0-9a-zA-Z.+*%#!@]+$/,\r\n          required: true,\r\n          mail: true,\r\n        }\r\n      },\r\n      password: {\r\n        icon:\"lock\",\r\n        type:\"password\",\r\n        value: \"\",\r\n        text: \"Password\",\r\n        validation: {\r\n          pattern: /^[0-9a-zA-Z]+$/,\r\n          required: true,\r\n          password: true,\r\n        }\r\n      }\r\n    },\r\n    trySend: \"\",\r\n    loading: \"\",\r\n    errorMessage: \"\",\r\n    permission: true,\r\n    timeIsHoverError: \"\",\r\n  }\r\n  getUser = () => {\r\n    axios.get(`http://localhost:64430/api/users?password=${this.state.password}&email=${this.state.mail}`).then(x => {\r\n      this.props.selectUser(x.data);\r\n      this.props.history.replace('/users/cards');\r\n      console.log(this.props.user);\r\n    }\r\n    ).catch(x => { document.getElementById(\"login_message\").innerHTML = x.response.data.Message; }\r\n    );\r\n  }\r\n  getEnterprise = () => {\r\n    axios.get(`http://localhost:64430/api/Enterprises?password=${this.state.password}&email=${this.state.mail}`).then(x => {\r\n      this.props.selectEnterprise(x.data);\r\n      console.log(this.props.enterprise);\r\n      this.props.history.replace(\"/enterprises/new\");\r\n    }).catch(x => document.getElementById(\"login_message\").innerHTML = x.response.data.Message);\r\n  }\r\n  newPassword = () => {\r\n    if (this.mailValidation() === true)\r\n      if (this.props.location.pathname === '/users/login') {\r\n        document.getElementById(\"dimmer\").setAttribute(\"active\", \"true\");\r\n        axios.get(`http://localhost:64430/api/Users?email=${this.state.mail}`).then(x => {\r\n          console.log(x.data);\r\n          this.props.selectUser(x.data)\r\n          console.log(this.props.user);\r\n          document.getElementById(\"newPassword\").innerHTML = \"sending email to:  \" + x.data.Email;\r\n        }).catch(x => document.getElementById(\"newPassword\").innerHTML = x.response.data.Message);\r\n      }\r\n      else {\r\n        const status = false;\r\n        axios.get(`http://localhost:64430/api/Enterprises?email=${this.state.mail} `).then(x => {\r\n          console.log(x.data);\r\n          this.props.selectEnterprise(x.data);\r\n          document.getElementById(\"newPassword\").innerHTML = \"sending email to:  \" + x.data.Email;\r\n        }).catch(x => document.getElementById(\"newPassword\").innerHTML = x.response.data.Message);\r\n      }\r\n  }\r\n  mailValidation = () => {\r\n    if (this.state.mail === \"\") {\r\n      document.getElementById(\"login_message\").innerHTML = \"mail is required\";\r\n      document.getElementsByClassName(\"mail\")[0].classList.add(\"error\");\r\n      return false;\r\n    }\r\n    else\r\n      if (!this.state.mail.includes(\"@\")) {\r\n        document.getElementById(\"login_message\").innerHTML = \"mail must includes @\"\r\n        document.getElementsByClassName(\"mail\")[0].classList.add(\"error\");\r\n        return false\r\n      }\r\n    return true;\r\n  }\r\n  passwordValidation = () => {\r\n    if (this.state.password === \"\") {\r\n      document.getElementById(\"login_message\").innerHTML = \"password is required\";\r\n      document.getElementsByClassName(\"password\")[0].classList.add(\"error\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  handleSubmit = (e) => {\r\n    document.getElementById(\"login_message\").innerHTML = \"\";\r\n    if (this.mailValidation() === true && this.passwordValidation() === true) {\r\n      if (this.props.location.pathname === '/users/login')\r\n        this.getUser();\r\n      else\r\n        this.props.selectEnterprise(this.state.mail, this.state.password);\r\n    }\r\n  }\r\n  handleOnChangeMail = (event) => {\r\n    this.setState({ mail: event.target.value });\r\n    document.getElementsByClassName(\"mail\")[0].classList.remove(\"error\");\r\n  }\r\n  handleOnChangePassword = (event) => {\r\n    this.setState({ password: event.target.value });\r\n    document.getElementsByClassName(\"password\")[0].classList.remove(\"error\");\r\n  }\r\n  render() {\r\n    const array = [];\r\n    for (let x in this.state.form) {\r\n      array.push({ id: x, config: this.state.form[x] })\r\n    }\r\n    return (\r\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as='h2' color='teal' textAlign='center'>\r\n            <Image src='/Images/logo.png' /> Log-in to your account\r\n        </Header>\r\n          <Form size='tiny' onSubmit={this.handleSubmit}>\r\n            <Segment stacked>\r\n              {array.map((x, i) => {\r\n                return <Form.Input\r\n                  key={i} iconPosition=\"left\"\r\n                  type={x.config.type}\r\n                  onChange={event => this.onChangeHendler(event, x.id)}\r\n                  className={this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id}\r\n                  placeholder={x.config.text + \"*\"}\r\n                  icon={x.config.icon}>\r\n                </Form.Input>\r\n              })}\r\n              <div id=\"login_message\" style={{ color: \"red\" }}>{this.props.error}</div>\r\n              <Button type=\"submit\" color='teal' fluid size='large'>\r\n                Login\r\n            </Button>\r\n              <div id=\"email_message\" style={{ display: 'none' }}>sending email</div>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            New to us?<NavLink to={this.props.location.pathname === '/users/login' ? '/users/signUp' : '/enterprises/signUp'} >Sign Up</NavLink>&nbsp;\r\n      </Message>\r\n          <Message>\r\n            <label>forget your password?<label onClick={this.newPassword} style={{ color: 'blue' }}>new password</label></label>\r\n          </Message>\r\n          <Dimmer id='dimmer' inverted='false'>\r\n            <Loader size='mini'>Loading</Loader>\r\n          </Dimmer>\r\n          <div id=\"newPassword\"></div>\r\n        </Grid.Column>\r\n        {this.props.loading ? <loading /> : null}\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user.user,\r\n    enterprise: state.enterprise.enterprise\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    selectUser: (user) => dispatch({ type: \"SELECT_USER\", payload: user }),\r\n    selectEnterprise: (enterprise) => dispatch({ type: actionName.selectEnterprise, payload: enterprise }),\r\n    // selectEnterprise: (email,password) => dispatch(getEnterprise(email,password)),\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}