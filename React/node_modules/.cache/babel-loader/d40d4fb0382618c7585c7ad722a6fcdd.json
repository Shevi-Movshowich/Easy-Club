{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\Main\\\\Main.js\";\nimport React, { Component } from 'react';\nimport { Loader, Dimmer, Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport axios from 'axios';\nimport { getEnterpriseById } from \"../../../Store/actions/EnterpriseAction\";\nimport { connect } from 'react-redux';\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      enterpId: null,\n      permission: false,\n      timeIsHoverError: \"\"\n    };\n  }\n\n  componentDidMount() {\n    var search = this.props.location.search;\n    var params = new URLSearchParams(search);\n    var key = params.get('key');\n    axios.get(`http://localhost:64430/api/SendMail?key=${key}`).then(x => {\n      this.setState({\n        enterpId: x.data,\n        permission: true\n      });\n      this.props.selectEnterprise(x.data);\n      this.props.history.replace(\"/enterprises/enterpCards\");\n    }).catch(x => () => {\n      this.props.setLoading(false);\n      this.setState({\n        timeIsHoverError: x.response.data.Message,\n        permission: false\n      });\n    });\n  }\n\n  render() {\n    console.log(this.props.loading);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, !this.state.permission ? /*#__PURE__*/React.createElement(Message, {\n      size: \"massive\",\n      style: {\n        textAlign: \"center\",\n        position: \"absolute\",\n        top: \"30%\",\n        width: \"80%\",\n        marginLeft: \"10%\",\n        border: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Message.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 161\n      }\n    }, \"Error!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }, this.state.timeIsHoverError)) : null, /*#__PURE__*/React.createElement(Dimmer, {\n      id: \"dimmer\",\n      active: this.props.loading === true,\n      inverted: \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, \"Loading\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.enterprise.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectEnterprise: id => dispatch(getEnterpriseById(id)),\n    setLoading: status => dispatch({\n      type: \"LOADIND\",\n      payload: status\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/Main/Main.js"],"names":["React","Component","Loader","Dimmer","Message","axios","getEnterpriseById","connect","Main","state","enterpId","permission","timeIsHoverError","componentDidMount","search","props","location","params","URLSearchParams","key","get","then","x","setState","data","selectEnterprise","history","replace","catch","setLoading","response","render","console","log","loading","textAlign","position","top","width","marginLeft","border","mapStateToProps","enterprise","mapDispatchToProps","dispatch","id","status","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Loader, Dimmer, Message } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport { getEnterpriseById } from \"../../../Store/actions/EnterpriseAction\";\r\nimport { connect } from 'react-redux'\r\nclass Main extends Component {\r\n    state = {\r\n        enterpId: null,\r\n        permission: false,\r\n        timeIsHoverError: \"\",\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        var search = this.props.location.search;\r\n        var params = new URLSearchParams(search);\r\n        var key = params.get('key');\r\n        axios.get(`http://localhost:64430/api/SendMail?key=${key}`).then(x => {\r\n            this.setState({ enterpId: x.data, permission: true }); \r\n            this.props.selectEnterprise(x.data);\r\n            this.props.history.replace(\"/enterprises/enterpCards\")\r\n        }).catch(x=>()=>{\r\n            this.props.setLoading(false);\r\n            this.setState({ timeIsHoverError: x.response.data.Message, permission: false });\r\n        });\r\n        \r\n    }\r\n    render() {\r\nconsole.log(this.props.loading)\r\n        return (\r\n            <div>\r\n                {!this.state.permission ?\r\n                    <Message size='massive' style={{ textAlign: \"center\", position: \"absolute\", top: \"30%\", width: \"80%\", marginLeft: \"10%\", border: \"none\" }}> <Message.Header>Error!</Message.Header>\r\n                        <p>{this.state.timeIsHoverError}</p>\r\n                    </Message> : null}\r\n                <Dimmer id='dimmer' active={this.props.loading ===true} inverted='false'>\r\n                    <Loader size='large'>Loading</Loader>\r\n                </Dimmer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.enterprise.loading\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectEnterprise: (id) => dispatch(getEnterpriseById(id)),\r\n        setLoading: (status) => dispatch({ type: \"LOADIND\", payload: status })\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n"]},"metadata":{},"sourceType":"module"}