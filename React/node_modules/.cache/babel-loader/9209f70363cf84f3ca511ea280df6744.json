{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Sidebar\\\\Sidebar.js\";\nimport React, { Component, createRef } from \"react\";\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Icon, Button, Menu, Sidebar, Sticky, Ref } from \"semantic-ui-react\";\n\nclass MySidebar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.navlinks = [];\n    this.state = {\n      visible: false,\n      routeIn: false\n    };\n\n    this.handleHideClick = () => this.setState({\n      visible: false\n    });\n\n    this.handleShowClick = () => this.setState({\n      visible: true\n    });\n\n    this.handleSidebarHide = () => this.setState({\n      visible: false\n    });\n  }\n\n  componentDidUpdate() {\n    // switch (this.state.routeIn) {\n    //     case false: {\n    //         if (this.props.history.location.pathname !== \"/\")\n    //             this.setState({ routeIn: true });\n    //         break;\n    //     }\n    //     case true: {\n    //         if (this.props.history.location.pathname === \"/\")\n    //             this.setState({ routeIn: false });\n    //         break;\n    //     }\n    //     default: break;\n    // }\n    // console.log(this.props)\n    // if (this.props.user !== null)\n    //     this.navlinks = [\n    //         { value: \"My Cards\", path: \"/users/cards\" },\n    //         { value: \"New Cards\", path: \"/users/new\" },\n    //         { value: \"Update Profile\", path: \"/users/ProfileUpdate\" },\n    //         { value: \"Discontact\", path: \"\" }\n    //     ]\n    // else\n    //     if (this.props.enterprise !== null) {\n    //         this.navlinks = [\n    //             { value: \"My Cards\", path: \"/enterprises/enterpCards\" },\n    //             { value: \"Update Profile\", path: \"/enterprises/ProfileUpdate\" },\n    //             { value: \"New Card\", path: \"/enterprises/newCard\" },\n    //             { value: \"Agreement and price list\", path: \"/agreement\" },\n    //             { value: \"Discontact\", path: \"\" }]\n    //     }\n    //     else\n    // if (this.props.history.location.pathname === \"/\") {\n    this.navlinks = [{\n      value: \"Home\",\n      path: \"\"\n    }, {\n      value: \"About\",\n      path: \"about\"\n    }, {\n      value: \"Why it's worth me\",\n      path: \"about_user\"\n    }, {\n      value: \"Why it's worth my enterprise\",\n      path: \"about_enterprise\"\n    }, {\n      value: \"Enterprises\",\n      path: \"stores\"\n    }, {\n      value: \"Contact us\",\n      path: \"contact\"\n    }]; // }\n    // else {\n    //     this.navlinks = [{ value: \"Home\", path: \"/\" }]\n    // }\n  }\n\n  render() {\n    const contextRef = createRef();\n    const {\n      visible\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: \"sidebarout\",\n      onClick: this.handleShowClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"|||\"), /*#__PURE__*/React.createElement(Sidebar.Pushable, {\n      style: {\n        transform: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      style: {\n        position: \"fixed\",\n        backgroundColor: \" #3b393a\",\n        top: \"0px\"\n      },\n      as: Menu,\n      animation: \"overlay\",\n      icon: \"labeled\",\n      inverted: true,\n      onHide: this.handleSidebarHide,\n      vertical: true,\n      visible: visible,\n      width: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: \"sidebarin\",\n      onClick: this.handleHideClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, \"X\"), this.navlinks.map((x, i) => {\n      return /*#__PURE__*/React.createElement(Menu.Item, {\n        style: {\n          padding: \"3vh\"\n        },\n        as: \"a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\" + x.path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }\n      }, x.value));\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.user,\n    enterprise: state.enterprise.enterprise\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(MySidebar));","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Sidebar/Sidebar.js"],"names":["React","Component","createRef","NavLink","withRouter","connect","Icon","Button","Menu","Sidebar","Sticky","Ref","MySidebar","navlinks","state","visible","routeIn","handleHideClick","setState","handleShowClick","handleSidebarHide","componentDidUpdate","value","path","render","contextRef","transform","position","backgroundColor","top","map","x","i","padding","mapStateToProps","user","enterprise"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    Icon,\r\n    Button,\r\n    Menu,\r\n    Sidebar, Sticky, Ref\r\n} from \"semantic-ui-react\";\r\nclass MySidebar extends Component {\r\n    navlinks = [];\r\n    state = {\r\n        visible: false,\r\n        routeIn: false\r\n    };\r\n    componentDidUpdate() {\r\n        // switch (this.state.routeIn) {\r\n        //     case false: {\r\n        //         if (this.props.history.location.pathname !== \"/\")\r\n        //             this.setState({ routeIn: true });\r\n        //         break;\r\n        //     }\r\n        //     case true: {\r\n        //         if (this.props.history.location.pathname === \"/\")\r\n        //             this.setState({ routeIn: false });\r\n        //         break;\r\n        //     }\r\n        //     default: break;\r\n        // }\r\n        // console.log(this.props)\r\n        // if (this.props.user !== null)\r\n        //     this.navlinks = [\r\n        //         { value: \"My Cards\", path: \"/users/cards\" },\r\n        //         { value: \"New Cards\", path: \"/users/new\" },\r\n        //         { value: \"Update Profile\", path: \"/users/ProfileUpdate\" },\r\n        //         { value: \"Discontact\", path: \"\" }\r\n        //     ]\r\n        // else\r\n        //     if (this.props.enterprise !== null) {\r\n        //         this.navlinks = [\r\n        //             { value: \"My Cards\", path: \"/enterprises/enterpCards\" },\r\n        //             { value: \"Update Profile\", path: \"/enterprises/ProfileUpdate\" },\r\n        //             { value: \"New Card\", path: \"/enterprises/newCard\" },\r\n        //             { value: \"Agreement and price list\", path: \"/agreement\" },\r\n        //             { value: \"Discontact\", path: \"\" }]\r\n        //     }\r\n        //     else\r\n                // if (this.props.history.location.pathname === \"/\") {\r\n                    this.navlinks = [{ value: \"Home\", path: \"\" },\r\n                    { value: \"About\", path: \"about\" },\r\n                    { value: \"Why it's worth me\", path: \"about_user\" },\r\n                    { value: \"Why it's worth my enterprise\", path: \"about_enterprise\" },\r\n                    { value: \"Enterprises\", path: \"stores\" },\r\n                    { value: \"Contact us\", path: \"contact\" }]\r\n                // }\r\n                // else {\r\n                //     this.navlinks = [{ value: \"Home\", path: \"/\" }]\r\n                // }\r\n    }\r\n    handleHideClick = () => this.setState({ visible: false });\r\n    handleShowClick = () => this.setState({ visible: true });\r\n    handleSidebarHide = () => this.setState({ visible: false });\r\n    render() {\r\n        const contextRef = createRef();\r\n        const { visible } = this.state;\r\n        return (\r\n            <div>\r\n                <Button id=\"sidebarout\" onClick={this.handleShowClick}>|||</Button>\r\n                <Sidebar.Pushable style={{ transform: \"none\" }}>\r\n                    <Sidebar style={{ position: \"fixed\", backgroundColor: \" #3b393a\", top: \"0px\" }}\r\n                        as={Menu}\r\n                        animation=\"overlay\"\r\n                        icon=\"labeled\"\r\n                        inverted\r\n                        onHide={this.handleSidebarHide}\r\n                        vertical\r\n                        visible={visible}\r\n                        width=\"large\" >\r\n                        <Button id=\"sidebarin\" onClick={this.handleHideClick}>X</Button>\r\n                        {this.navlinks.map((x, i) => {\r\n                            return <Menu.Item style={{ padding: \"3vh\" }} as='a'>\r\n                                {/* {this.state.routeIn === false ? */}\r\n                                <a href={\"#\" + x.path}>{x.value}</a> \r\n                                {/* : */}\r\n                                {/* <NavLink style={{ padding: \"3vh\" }} to={x.path}>{x.value}</NavLink> */}\r\n                            {/* } */}\r\n                            </Menu.Item>\r\n                        })}\r\n                    </Sidebar>\r\n                </Sidebar.Pushable>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user.user,\r\n        enterprise: state.enterprise.enterprise,\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, null)(MySidebar));\r\n"]},"metadata":{},"sourceType":"module"}