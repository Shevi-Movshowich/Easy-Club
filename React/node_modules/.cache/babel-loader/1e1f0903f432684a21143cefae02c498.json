{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\MyStores\\\\MyStores.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Store from './MyStore';\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { connect } from 'react-redux';\n;\nimport \"./Store.css\";\n\nclass MyStores extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stores: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.selectAllCards(this.props.enterprise.C_id);\n  }\n\n  render() {\n    const responsive = {\n      desktop: {\n        breakpoint: {\n          max: 3000,\n          min: 1024\n        },\n        items: 3,\n        slidesToSlide: 3 // optional, default to 1.\n\n      },\n      tablet: {\n        breakpoint: {\n          max: 1024,\n          min: 464\n        },\n        items: 2,\n        slidesToSlide: 2 // optional, default to 1.\n\n      },\n      mobile: {\n        breakpoint: {\n          max: 464,\n          min: 0\n        },\n        items: 1,\n        slidesToSlide: 1 // optional, default to 1.\n\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minHeight: \"40vh\",\n        zIndex: \"3\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        color: '#00b5ad',\n        textAlign: \"center\",\n        fontSize: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"| Our Stores |\"), /*#__PURE__*/React.createElement(Carousel // swipeable={false}\n    // draggable={false}\n    , {\n      responsive: responsive,\n      ssr: true // means to render carousel on server-side.\n      ,\n      infinite: true,\n      keyBoardControl: true,\n      customTransition: \"all .5\",\n      transitionDuration: 300,\n      containerClass: \"carousel-container\" // removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\n      ,\n      dotListClass: \"cusom-dot-list-style\",\n      itemClass: \"carousel-item-padding-40-px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, this.state.stores !== null ? this.state.stores.map((x, i) => {\n      return /*#__PURE__*/React.createElement(Store, {\n        name: x.Name,\n        src: x.Img,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 36\n        }\n      });\n    }) : \"No Results\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    allCards: state.enterprise.allCards\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectAllCards: () => dispatch(getAllCards())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyStores);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/MyStores/MyStores.js"],"names":["React","Component","axios","Store","Carousel","connect","MyStores","state","stores","componentDidMount","props","selectAllCards","enterprise","C_id","render","responsive","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","minHeight","zIndex","color","textAlign","fontSize","map","x","i","Name","Img","mapStateToProps","allCards","mapDispatchToProps","dispatch","getAllCards"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Store from './MyStore';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport { connect } from 'react-redux';;\r\nimport \"./Store.css\"\r\nclass MyStores extends Component {\r\n    state = {\r\n        stores: null,\r\n    }\r\n    componentDidMount() {\r\n        this.props.selectAllCards(this.props.enterprise.C_id);\r\n    }\r\n    render() {\r\n        const responsive = {\r\n            desktop: {\r\n                breakpoint: { max: 3000, min: 1024 },\r\n                items: 3,\r\n                slidesToSlide: 3 // optional, default to 1.\r\n            },\r\n            tablet: {\r\n                breakpoint: { max: 1024, min: 464 },\r\n                items: 2,\r\n                slidesToSlide: 2 // optional, default to 1.\r\n            },\r\n            mobile: {\r\n                breakpoint: { max: 464, min: 0 },\r\n                items: 1,\r\n                slidesToSlide: 1 // optional, default to 1.\r\n            }\r\n        };\r\n        return (\r\n            <div style={{ minHeight: \"40vh\", zIndex: \"3\" }}>\r\n                <h1 style={{ color: '#00b5ad', textAlign: \"center\", fontSize: '20px' }}>| Our Stores |</h1>\r\n                <Carousel\r\n                    // swipeable={false}\r\n                    // draggable={false}\r\n                    responsive={responsive}\r\n                    ssr={true} // means to render carousel on server-side.\r\n                    infinite={true}\r\n                    keyBoardControl={true}\r\n                    customTransition=\"all .5\"\r\n                    transitionDuration={300}\r\n                    containerClass=\"carousel-container\"\r\n                    // removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                    dotListClass=\"cusom-dot-list-style\"\r\n                    itemClass=\"carousel-item-padding-40-px\"\r\n                >\r\n                    {this.state.stores !== null ?\r\n                        this.state.stores.map((x, i) => {\r\n                            return <Store name={x.Name} src={x.Img} key={i}></Store>\r\n                        }) : \"No Results\"\r\n                    }\r\n                </Carousel></div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allCards: state.enterprise.allCards,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectAllCards: () => dispatch(getAllCards()),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyStores);\r\n\r\n"]},"metadata":{},"sourceType":"module"}