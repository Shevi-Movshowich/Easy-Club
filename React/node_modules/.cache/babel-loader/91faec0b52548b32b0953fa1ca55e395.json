{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Users\\\\SignUp\\\\SignUp.js\";\nimport React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react';\nimport axios from 'axios';\nimport validForm from '../../Service/ValidStateForm';\nimport { string } from 'prop-types';\nimport { format } from 'date-fns';\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\nimport { reduxForm, Field } from \"redux-form\"; // import \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\n\nclass UsersSignUp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        Name: {\n          type: \"text\",\n          icon: \"user\",\n          text: \"Name *\",\n          value: \"\",\n          maxLength: 40,\n          validation: {\n            required: true,\n            pattern: /^[a-zA-Z&.@ ]*$/\n          },\n          error: \"The name is incorrect\",\n          valid: false\n        },\n        Tz: {\n          type: \"text\",\n          icon: \"tag\",\n          text: \"Identity *\",\n          value: \"\",\n          maxLength: 9,\n          validation: {\n            required: true,\n            pattern: /^[0-9]*$/,\n            tz: true\n          },\n          error: \"The tz is incorrect\",\n          valid: false\n        },\n        Email: {\n          type: \"text\",\n          icon: \"envelope\",\n          text: \"E-mail address *\",\n          value: \"\",\n          maxLength: 50,\n          validation: {\n            required: true,\n            pattern: /^[0-9a-zA-Z.+*%#!@]+$/,\n            mail: true // pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n\n          },\n          error: \"The email is incorrect\",\n          valid: false\n        },\n        Password: {\n          type: \"password\",\n          icon: \"lock\",\n          text: \"Password *\",\n          value: \"\",\n          maxLength: 15,\n          validation: {\n            required: true,\n            pattern: /^[0-9a-zA-Z]+$/,\n            password: true\n          },\n          error: \"The password is incorrect\",\n          valid: false\n        },\n        Phone: {\n          type: \"text\",\n          icon: \"phone\",\n          text: \"Phone *\",\n          value: \"\",\n          maxLength: 10,\n          validation: {\n            required: true,\n            pattern: /^[0-9]*$/,\n            phone: true\n          },\n          error: \"The phone is incorrect\",\n          valid: false\n        },\n        BirthDate: {\n          birthdate: true,\n          type: \"text\",\n          icon: \"birthday cake\",\n          text: \"BirthDate *\",\n          value: \"\",\n          maxLength: 10,\n          validation: {\n            required: true,\n            pattern: /^/\n          },\n          error: \"The birthday is incorrect\",\n          valid: false\n        }\n      },\n      sDate: Date.now(),\n      validForm: false,\n      errorForm: \"\",\n      trySend: false\n    };\n\n    this.onChangeHendler = (e, id) => {\n      this.setState({\n        trySend: false\n      });\n      const form = { ...this.state.form\n      };\n      const inputChanged = { ...form[id]\n      };\n      const value = inputChanged.value;\n\n      if (!inputChanged.validation[\"pattern\"].test(e.target.value)) {\n        console.log(inputChanged.value);\n        e.target.value = inputChanged.value;\n      } else inputChanged.value = e.target.value;\n\n      console.log(inputChanged);\n      form[id] = inputChanged;\n      this.setState({\n        form: form\n      });\n    };\n\n    this.SignUp = () => {\n      const form = { ...this.state.form\n      };\n      var obj = validForm(form);\n\n      for (let x in form) {\n        const inputError = { ...form[x]\n        };\n        inputError.valid = true;\n        form[x] = inputError;\n      }\n\n      if (obj !== null) {\n        console.log(obj);\n        const inputError = { ...form[obj.id]\n        };\n        inputError.valid = false;\n        form[obj.id] = inputError;\n        document.getElementById(\"message\").innerHTML = obj.error;\n        this.setState({\n          form: form,\n          trySend: true\n        });\n      } else {\n        const data = {};\n\n        for (let x in this.state.form) {\n          data[x] = this.state.form[x].value;\n        }\n\n        console.log(data);\n        axios.post(`http://localhost:64430/api/Users`, data).then(x => {\n          this.props.history.replace('/users/login');\n          console.log(x);\n        }).catch(x => {\n          document.getElementById(\"message\").innerHTML = x.response.data.Message;\n        });\n      }\n    };\n\n    this.date = new Date().calendars;\n  }\n\n  //     flat: true,\n  //     date: '2008-07-31',\n  //     current: '2008-07-31',\n  //     calendars: 1,\n  //     starts: 1\n  // });\n  render() {\n    const array = [];\n\n    for (let x in this.state.form) {\n      array.push({\n        id: x,\n        config: this.state.form[x]\n      });\n    }\n\n    console.log(array);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: \"/Images/logo.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }), \" Sign-Up to your account\"), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.SignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      stacked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, array.map((x, i) => {\n      console.log(x.config);\n      return /*#__PURE__*/React.createElement(Form.Input, {\n        key: i,\n        iconPosition: \"left\",\n        maxLength: x.config.maxLength,\n        type: x.config.type,\n        onChange: event => this.onChangeHendler(event, x.id),\n        className: this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id,\n        placeholder: x.config.text,\n        icon: x.config.icon,\n        onFocus: e => x.config.birthdate === true ? e.target.type = 'date' : \"text\" // min={new Date().toISOString().split('T')[0]}\n        // min={format(new Date().getFullYear()-18,\"yyyy-mm-dd\")}\n        // onChange={e => this.setState({ sDate: e.target.value })}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 40\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"message\",\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 29\n      }\n    }, \"Sign-Up\"))), /*#__PURE__*/React.createElement(SemanticDatepicker, {\n      flat: true,\n      date: \"2008-07-31\" // current='2008-07-31'\n      ,\n      calendars: 1,\n      starts: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default UsersSignUp;","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Users/SignUp/SignUp.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Segment","axios","validForm","string","format","SemanticDatepicker","reduxForm","Field","UsersSignUp","state","form","Name","type","icon","text","value","maxLength","validation","required","pattern","error","valid","Tz","tz","Email","mail","Password","password","Phone","phone","BirthDate","birthdate","sDate","Date","now","errorForm","trySend","onChangeHendler","e","id","setState","inputChanged","test","target","console","log","SignUp","obj","x","inputError","document","getElementById","innerHTML","data","post","then","props","history","replace","catch","response","Message","date","calendars","render","array","push","config","height","maxWidth","map","i","event","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport validForm from '../../Service/ValidStateForm'\r\nimport { string } from 'prop-types';\r\nimport { format } from 'date-fns';\r\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\n// import \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\r\nclass UsersSignUp extends Component {\r\n    state = {\r\n        form: {\r\n            Name: {\r\n                type: \"text\",\r\n                icon: \"user\",\r\n                text: \"Name *\",\r\n                value: \"\",\r\n                maxLength: 40,\r\n                validation: {\r\n                    required: true,\r\n                    pattern: /^[a-zA-Z&.@ ]*$/,\r\n                },\r\n                error: \"The name is incorrect\",\r\n                valid: false,\r\n            },\r\n            Tz: {\r\n                type: \"text\",\r\n                icon: \"tag\",\r\n                text: \"Identity *\",\r\n                value: \"\",\r\n                maxLength: 9,\r\n                validation: {\r\n                    required: true,\r\n                    pattern: /^[0-9]*$/,\r\n                    tz: true\r\n                },\r\n                error: \"The tz is incorrect\",\r\n                valid: false,\r\n            },\r\n            Email: {\r\n                type: \"text\",\r\n                icon: \"envelope\",\r\n                text: \"E-mail address *\",\r\n                value: \"\",\r\n                maxLength: 50,\r\n                validation: {\r\n                    required: true,\r\n                    pattern: /^[0-9a-zA-Z.+*%#!@]+$/,\r\n                    mail: true\r\n                    // pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                },\r\n                error: \"The email is incorrect\",\r\n                valid: false,\r\n            },\r\n            Password: {\r\n                type: \"password\",\r\n                icon: \"lock\",\r\n                text: \"Password *\",\r\n                value: \"\",\r\n                maxLength: 15,\r\n                validation: {\r\n                    required: true,\r\n                    pattern: /^[0-9a-zA-Z]+$/,\r\n                    password: true\r\n                },\r\n                error: \"The password is incorrect\",\r\n                valid: false,\r\n            },\r\n            Phone: {\r\n                type: \"text\",\r\n                icon: \"phone\",\r\n                text: \"Phone *\",\r\n                value: \"\",\r\n                maxLength: 10,\r\n                validation: {\r\n                    required: true,\r\n                    pattern: /^[0-9]*$/,\r\n                    phone: true\r\n                },\r\n                error: \"The phone is incorrect\",\r\n                valid: false,\r\n            },\r\n            BirthDate: {\r\n                birthdate: true,\r\n                type: \"text\",\r\n                icon: \"birthday cake\",\r\n                text: \"BirthDate *\",\r\n                value: \"\",\r\n                maxLength: 10,\r\n                validation: {\r\n                    required: true,\r\n                    pattern: /^/\r\n                },\r\n                error: \"The birthday is incorrect\",\r\n                valid: false,\r\n            },\r\n        },\r\n        sDate: Date.now(),\r\n        validForm: false,\r\n        errorForm: \"\",\r\n        trySend: false\r\n    }\r\n    onChangeHendler = (e, id) => {\r\n        this.setState({ trySend: false })\r\n        const form = { ...this.state.form };\r\n        const inputChanged = { ...form[id] };\r\n        const value = inputChanged.value;\r\n        if (!inputChanged.validation[\"pattern\"].test(e.target.value)) {\r\n            console.log(inputChanged.value)\r\n            e.target.value = inputChanged.value\r\n        }\r\n        else\r\n            inputChanged.value = e.target.value;\r\n        console.log(inputChanged)\r\n        form[id] = inputChanged;\r\n        this.setState({ form: form })\r\n    }\r\n    SignUp = () => {\r\n        const form = { ...this.state.form };\r\n        var obj = validForm(form);\r\n        for (let x in form) {\r\n            const inputError = { ...form[x] };\r\n            inputError.valid = true;\r\n            form[x] = inputError;\r\n        }\r\n        if (obj !== null) {\r\n            console.log(obj)\r\n            const inputError = { ...form[obj.id] };\r\n            inputError.valid = false;\r\n            form[obj.id] = inputError;\r\n            document.getElementById(\"message\").innerHTML = obj.error;\r\n            this.setState({ form: form, trySend: true })\r\n        }\r\n        else {\r\n            const data = {};\r\n            for (let x in this.state.form) {\r\n                data[x] = this.state.form[x].value;\r\n            }\r\n            console.log(data);\r\n            axios.post(`http://localhost:64430/api/Users`, data\r\n            ).then(x => {\r\n                this.props.history.replace('/users/login');\r\n                console.log(x);\r\n            }\r\n            ).catch(x => {\r\n                document.getElementById(\"message\").innerHTML = x.response.data.Message;\r\n            });\r\n        }\r\n    }\r\n    date = new Date().calendars\r\n    //     flat: true,\r\n    //     date: '2008-07-31',\r\n    //     current: '2008-07-31',\r\n    //     calendars: 1,\r\n    //     starts: 1\r\n    // });\r\n    render() {\r\n        const array = [];\r\n        for (let x in this.state.form) {\r\n            array.push({ id: x, config: this.state.form[x] })\r\n        }\r\n        console.log(array)\r\n        return (<div>\r\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Header as='h2' color='teal' textAlign='center'>\r\n                        <Image src='/Images/logo.png' /> Sign-Up to your account\r\n                  </Header>\r\n                    <Form size='large' onSubmit={this.SignUp}>\r\n                        <Segment stacked>\r\n                            {array.map((x, i) => {\r\n                                console.log(x.config)\r\n                                return <Form.Input\r\n                                    key={i} iconPosition=\"left\"\r\n                                    maxLength={x.config.maxLength}\r\n                                    type={x.config.type}\r\n                                    onChange={event => this.onChangeHendler(event, x.id)}\r\n                                    className={this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id}\r\n                                    placeholder={x.config.text}\r\n                                    icon={x.config.icon}\r\n                                    onFocus={(e) => x.config.birthdate === true ? e.target.type = 'date' : \"text\"}\r\n                                // min={new Date().toISOString().split('T')[0]}\r\n                                // min={format(new Date().getFullYear()-18,\"yyyy-mm-dd\")}\r\n                                // onChange={e => this.setState({ sDate: e.target.value })}\r\n                                >\r\n                                </Form.Input>\r\n                            })}\r\n                            <div id=\"message\" style={{ color: \"red\" }}></div>\r\n                            <Button type=\"submit\" color='teal' fluid size='large'>\r\n                                Sign-Up\r\n                            </Button>\r\n                        </Segment>\r\n                    </Form>\r\n                    <SemanticDatepicker\r\n                        flat={true}\r\n                        date='2008-07-31'\r\n                        // current='2008-07-31'\r\n                        calendars={1}\r\n                        starts={1}\r\n                    >\r\n                    </SemanticDatepicker>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </div >\r\n        )\r\n\r\n    }\r\n}\r\nexport default UsersSignUp;"]},"metadata":{},"sourceType":"module"}