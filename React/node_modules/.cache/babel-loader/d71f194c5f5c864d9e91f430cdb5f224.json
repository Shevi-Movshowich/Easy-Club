{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\Lotery\\\\Lotery.js\";\nimport React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Input, Select, Form, Dropdown, Grid, Segment, Radio, Header, Image, TextArea, Popup, Button, Icon, Label } from 'semantic-ui-react';\nimport \"../../Public.css\";\n\nclass Lotery extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loteryTypes: [{\n        key: 'Discount',\n        text: 'Discount',\n        value: 'Discount'\n      }, {\n        key: \"Plus Free\",\n        text: \"Plus Free\",\n        value: \"Plus Free\"\n      }, {\n        key: \"X in Y\",\n        text: \"X in Y\",\n        value: \"X in Y\"\n      }],\n      sumTypes: [{\n        key: '%',\n        text: '%',\n        value: '%'\n      }, {\n        key: '$',\n        text: '$',\n        value: '$'\n      }],\n      form: {\n        loteryType: \"Discount\",\n        sum: \"\",\n        sumType: \"$\",\n        num1: \"\",\n        num2: \"\",\n        addition: \"\",\n        expireDate: \"\"\n      }\n    };\n\n    this.OnChangeSelect = value => {\n      console.log(value);\n      const form = { ...this.state.form\n      };\n\n      for (let x in form) {\n        form[x] = \"\";\n      }\n\n      form.loteryType = value;\n      form.sumType = \"$\";\n      this.setState({\n        form: form\n      });\n    };\n\n    this.onChange = (value, id) => {\n      console.log(value, id);\n      const form = { ...this.state.form\n      };\n      form[id] = value;\n      this.setState({\n        form: form\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.form);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      style: {\n        marginLeft: \"9%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        width: 950\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Select, {\n      label: \"Lottery Types\",\n      options: this.state.loteryTypes,\n      defaultValue: this.state.form.loteryType,\n      onChange: event => this.OnChangeSelect(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }\n    }), this.state.form.loteryType === \"Discount\" ? /*#__PURE__*/React.createElement(Popup, {\n      content: \"for example:30% or 30$\",\n      trigger: /*#__PURE__*/React.createElement(Form.Input, {\n        onChange: e => this.onChange(e.target.value, \"sum\"),\n        value: this.state.form.sum,\n        min: 1,\n        label: \"Details\",\n        type: \"number\",\n        labelPosition: \"right\",\n        action: /*#__PURE__*/React.createElement(Dropdown, {\n          style: {\n            backgroundColor: \"black !important\"\n          },\n          button: true,\n          basic: true,\n          floating: true,\n          options: this.state.sumTypes,\n          defaultValue: this.state.form.sumType,\n          onChange: e => this.onChange(e.target.value, \"sumType\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 53\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 54\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 41\n      }\n    }) : this.state.form.loteryType === \"Plus Free\" ? /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"Details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      content: \"for example:1+1\",\n      trigger: /*#__PURE__*/React.createElement(Input, {\n        type: \"number\",\n        min: 1,\n        max: 10,\n        value: this.state.form.num1,\n        onChange: e => this.onChange(e.target.value, \"num1\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 49\n      }\n    }), \"+\", /*#__PURE__*/React.createElement(Popup, {\n      content: \"for example:1+1\",\n      trigger: /*#__PURE__*/React.createElement(Input, {\n        type: \"number\",\n        min: 1,\n        max: 10,\n        value: this.state.form.num2,\n        onChange: e => this.onChange(e.target.value, \"num2\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 90\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 48\n      }\n    })) : /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"Details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      content: \"for example:3 In 100$\",\n      trigger: /*#__PURE__*/React.createElement(Input, {\n        type: \"number\",\n        min: 1,\n        max: 10,\n        value: this.state.form.num1,\n        onChange: e => this.onChange(e.target.value, \"num1\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 97\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 49\n      }\n    }), \"In\", /*#__PURE__*/React.createElement(Popup, {\n      content: \"for example:3 In 100$\",\n      trigger: /*#__PURE__*/React.createElement(Input, {\n        type: \"number\",\n        min: 1,\n        max: 1000000,\n        value: this.state.form.num2,\n        onChange: e => this.onChange(e.target.value, \"num2\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 93\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Form.Input, {\n      type: \"date\",\n      label: \"Expire Date\",\n      value: this.state.form.expireDate,\n      onChange: e => this.onChange(e.target.value, \"expireDate\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.TextArea, {\n      label: \"Addition\",\n      type: \"text\",\n      placeholder: \"Addition\",\n      maxLength: 50,\n      value: this.state.form.addition,\n      onChange: e => this.onChange(e.target.value, \"addition\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nexport default Lotery;","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/Lotery/Lotery.js"],"names":["React","Component","Input","Select","Form","Dropdown","Grid","Segment","Radio","Header","Image","TextArea","Popup","Button","Icon","Label","Lotery","state","loteryTypes","key","text","value","sumTypes","form","loteryType","sum","sumType","num1","num2","addition","expireDate","OnChangeSelect","console","log","x","setState","onChange","id","render","textAlign","marginLeft","width","event","target","e","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kCAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,QAA9B,EAAwCC,IAAxC,EAA8CC,OAA9C,EAAuDC,KAAvD,EAA8DC,MAA9D,EAAsEC,KAAtE,EAA6EC,QAA7E,EAAuFC,KAAvF,EAA8FC,MAA9F,EAAsGC,IAAtG,EAA4GC,KAA5G,QAAyH,mBAAzH;AACA,OAAO,kBAAP;;AACA,MAAMC,MAAN,SAAqBf,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BgB,KAD2B,GACnB;AACJC,MAAAA,WAAW,EAAE,CACT;AAAEC,QAAAA,GAAG,EAAE,UAAP;AAAmBC,QAAAA,IAAI,EAAE,UAAzB;AAAqCC,QAAAA,KAAK,EAAE;AAA5C,OADS,EAET;AAAEF,QAAAA,GAAG,EAAE,WAAP;AAAoBC,QAAAA,IAAI,EAAE,WAA1B;AAAuCC,QAAAA,KAAK,EAAE;AAA9C,OAFS,EAGT;AAAEF,QAAAA,GAAG,EAAE,QAAP;AAAiBC,QAAAA,IAAI,EAAE,QAAvB;AAAiCC,QAAAA,KAAK,EAAE;AAAxC,OAHS,CADT;AAKJC,MAAAA,QAAQ,EAAE,CACN;AAAEH,QAAAA,GAAG,EAAE,GAAP;AAAYC,QAAAA,IAAI,EAAE,GAAlB;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OADM,EAEN;AAAEF,QAAAA,GAAG,EAAE,GAAP;AAAYC,QAAAA,IAAI,EAAE,GAAlB;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OAFM,CALN;AASJE,MAAAA,IAAI,EAAE;AACFC,QAAAA,UAAU,EAAE,UADV;AAEFC,QAAAA,GAAG,EAAE,EAFH;AAGFC,QAAAA,OAAO,EAAE,GAHP;AAIFC,QAAAA,IAAI,EAAE,EAJJ;AAKFC,QAAAA,IAAI,EAAE,EALJ;AAMFC,QAAAA,QAAQ,EAAE,EANR;AAOFC,QAAAA,UAAU,EAAE;AAPV;AATF,KADmB;;AAAA,SAqB3BC,cArB2B,GAqBTV,KAAD,IAAW;AACxBW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACA,YAAME,IAAI,GAAG,EAAE,GAAG,KAAKN,KAAL,CAAWM;AAAhB,OAAb;;AACA,WAAK,IAAIW,CAAT,IAAcX,IAAd,EAAoB;AAChBA,QAAAA,IAAI,CAACW,CAAD,CAAJ,GAAQ,EAAR;AACH;;AACDX,MAAAA,IAAI,CAACC,UAAL,GAAkBH,KAAlB;AACAE,MAAAA,IAAI,CAACG,OAAL,GAAa,GAAb;AACA,WAAKS,QAAL,CAAc;AAAEZ,QAAAA,IAAI,EAAEA;AAAR,OAAd;AACH,KA9B0B;;AAAA,SA+B3Ba,QA/B2B,GA+BlB,CAACf,KAAD,EAAOgB,EAAP,KAAY;AACjBL,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ,EAAkBgB,EAAlB;AACA,YAAMd,IAAI,GAAG,EAAE,GAAG,KAAKN,KAAL,CAAWM;AAAhB,OAAb;AACAA,MAAAA,IAAI,CAACc,EAAD,CAAJ,GAAShB,KAAT;AACA,WAAKc,QAAL,CAAc;AAAEZ,QAAAA,IAAI,EAAEA;AAAR,OAAd;AAEH,KArC0B;AAAA;;AAsC3Be,EAAAA,MAAM,GAAG;AACLN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWM,IAAvB;AACA,wBACI;AAAK,MAAA,KAAK,EAAE;AAAEgB,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAC,eAAnB;AAAmC,MAAA,OAAO,EAAE,KAAKxB,KAAL,CAAWC,WAAvD;AACI,MAAA,YAAY,EAAE,KAAKD,KAAL,CAAWM,IAAX,CAAgBC,UADlC;AAGI,MAAA,QAAQ,EAAGkB,KAAD,IAAW,KAAKX,cAAL,CAAoBW,KAAK,CAACC,MAAN,CAAatB,KAAjC,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKK,KAAKJ,KAAL,CAAWM,IAAX,CAAgBC,UAAhB,KAA+B,UAA/B,gBACG,oBAAC,KAAD;AACI,MAAA,OAAO,EAAC,wBADZ;AAEI,MAAA,OAAO,eAAE,oBAAC,IAAD,CAAM,KAAN;AACT,QAAA,QAAQ,EAAGoB,CAAD,IAAK,KAAKR,QAAL,CAAcQ,CAAC,CAACD,MAAF,CAAStB,KAAvB,EAA6B,KAA7B,CADN;AAET,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWM,IAAX,CAAgBE,GAFd;AAGL,QAAA,GAAG,EAAE,CAHA;AAIL,QAAA,KAAK,EAAC,SAJD;AAKL,QAAA,IAAI,EAAC,QALA;AAML,QAAA,aAAa,EAAC,OANT;AAOL,QAAA,MAAM,eACF,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAE;AAACoB,YAAAA,eAAe,EAAC;AAAjB,WAAjB;AAAuD,UAAA,MAAM,MAA7D;AAA8D,UAAA,KAAK,MAAnE;AAAoE,UAAA,QAAQ,MAA5E;AAA6E,UAAA,OAAO,EAAE,KAAK5B,KAAL,CAAWK,QAAjG;AAA4G,UAAA,YAAY,EAAE,KAAKL,KAAL,CAAWM,IAAX,CAAgBG,OAA1I;AAAoJ,UAAA,QAAQ,EAAGkB,CAAD,IAAK,KAAKR,QAAL,CAAcQ,CAAC,CAACD,MAAF,CAAStB,KAAvB,EAA6B,SAA7B,CAAnK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAYsC,KAAKJ,KAAL,CAAWM,IAAX,CAAgBC,UAAhB,KAA+B,WAA/B,gBAC/B,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,iBAAf;AAAiC,MAAA,OAAO,eAAE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,GAAG,EAAE,CAA1B;AAA6B,QAAA,GAAG,EAAE,EAAlC;AAAsC,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWM,IAAX,CAAgBI,IAA7D;AAAmE,QAAA,QAAQ,EAAGiB,CAAD,IAAK,KAAKR,QAAL,CAAcQ,CAAC,CAACD,MAAF,CAAStB,KAAvB,EAA6B,MAA7B,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,oBAGG,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,iBAAf;AAAiC,MAAA,OAAO,eAAE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,GAAG,EAAE,CAA1B;AAA6B,QAAA,GAAG,EAAE,EAAlC;AAAsC,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWM,IAAX,CAAgBK,IAA7D;AAAmE,QAAA,QAAQ,EAAGgB,CAAD,IAAK,KAAKR,QAAL,CAAcQ,CAAC,CAACD,MAAF,CAAStB,KAAvB,EAA6B,MAA7B,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CAD+B,gBAK/B,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,uBAAf;AAAuC,MAAA,OAAO,eAAE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,GAAG,EAAE,CAA1B;AAA6B,QAAA,GAAG,EAAE,EAAlC;AAAsC,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWM,IAAX,CAAgBI,IAA7D;AAAmE,QAAA,QAAQ,EAAGiB,CAAD,IAAK,KAAKR,QAAL,CAAcQ,CAAC,CAACD,MAAF,CAAStB,KAAvB,EAA6B,MAA7B,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,qBAGA,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,uBAAf;AAAuC,MAAA,OAAO,eAAE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,GAAG,EAAE,CAA1B;AAA6B,QAAA,GAAG,EAAE,OAAlC;AAA2C,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWM,IAAX,CAAgBK,IAAlE;AAAwE,QAAA,QAAQ,EAAGgB,CAAD,IAAK,KAAKR,QAAL,CAAcQ,CAAC,CAACD,MAAF,CAAStB,KAAvB,EAA6B,MAA7B,CAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CAtBZ,eA0BI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,IAAI,EAAC,MAAjB;AAAwB,MAAA,KAAK,EAAC,aAA9B;AAA4C,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWM,IAAX,CAAgBO,UAAnE;AAA+E,MAAA,QAAQ,EAAGc,CAAD,IAAK,KAAKR,QAAL,CAAcQ,CAAC,CAACD,MAAF,CAAStB,KAAvB,EAA6B,YAA7B,CAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BJ,CADJ,CADJ,eAgCI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,QAAN;AAAe,MAAA,KAAK,EAAC,UAArB;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,WAAW,EAAC,UAAxD;AAAmE,MAAA,SAAS,EAAE,EAA9E;AAAkF,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWM,IAAX,CAAgBM,QAAzG;AAAmH,MAAA,QAAQ,EAAGe,CAAD,IAAK,KAAKR,QAAL,CAAcQ,CAAC,CAACD,MAAF,CAAStB,KAAvB,EAA6B,UAA7B,CAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAhCJ,CADJ,CADJ,CADJ,CADJ;AA0CH;;AAlF0B;;AAqF/B,eAAeL,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Input, Select, Form, Dropdown, Grid, Segment, Radio, Header, Image, TextArea, Popup, Button, Icon, Label } from 'semantic-ui-react';\r\nimport \"../../Public.css\";\r\nclass Lotery extends Component {\r\n    state = {\r\n        loteryTypes: [\r\n            { key: 'Discount', text: 'Discount', value: 'Discount' },\r\n            { key: \"Plus Free\", text: \"Plus Free\", value: \"Plus Free\" },\r\n            { key: \"X in Y\", text: \"X in Y\", value: \"X in Y\" }],\r\n        sumTypes: [\r\n            { key: '%', text: '%', value: '%' },\r\n            { key: '$', text: '$', value: '$' }\r\n        ],\r\n        form: {\r\n            loteryType: \"Discount\",\r\n            sum: \"\",\r\n            sumType: \"$\",\r\n            num1: \"\",\r\n            num2: \"\",\r\n            addition: \"\",\r\n            expireDate: \"\",\r\n        },\r\n\r\n    }\r\n    OnChangeSelect = (value) => {\r\n        console.log(value)\r\n        const form = { ...this.state.form }\r\n        for (let x in form) {\r\n            form[x]=\"\";\r\n        }\r\n        form.loteryType = value;\r\n        form.sumType=\"$\"\r\n        this.setState({ form: form });\r\n    }\r\n    onChange=(value,id)=>{\r\n        console.log(value,id)\r\n        const form = { ...this.state.form }\r\n        form[id]=value;\r\n        this.setState({ form: form });\r\n       \r\n    }\r\n    render() {\r\n        console.log(this.state.form)\r\n        return (\r\n            <div style={{ textAlign: \"left\" }}>\r\n                <Form style={{ marginLeft: \"9%\" }}>\r\n                    <Grid >\r\n                        <Grid.Column style={{ width: 950 }}>\r\n                            <Grid.Row>\r\n                                <Form.Group widths=\"equal\">\r\n                                    <Form.Select label=\"Lottery Types\" options={this.state.loteryTypes}\r\n                                        defaultValue={this.state.form.loteryType}\r\n                                       \r\n                                        onChange={(event) => this.OnChangeSelect(event.target.value)}></Form.Select>\r\n                                    {this.state.form.loteryType === \"Discount\" ?\r\n                                        <Popup\r\n                                            content=\"for example:30% or 30$\"\r\n                                            trigger={<Form.Input\r\n                                            onChange={(e)=>this.onChange(e.target.value,\"sum\")}\r\n                                            value={this.state.form.sum}\r\n                                                min={1}\r\n                                                label=\"Details\"\r\n                                                type=\"number\"\r\n                                                labelPosition='right'\r\n                                                action={\r\n                                                    <Dropdown style={{backgroundColor:\"black !important\"}} button basic floating options={this.state.sumTypes}  defaultValue={this.state.form.sumType}  onChange={(e)=>this.onChange(e.target.value,\"sumType\")}\r\n                                                   />}></Form.Input>} /> : this.state.form.loteryType === \"Plus Free\" ?\r\n                                            <Form.Input label=\"Details\">\r\n                                                <Popup content=\"for example:1+1\" trigger={<Input type=\"number\" min={1} max={10} value={this.state.form.num1} onChange={(e)=>this.onChange(e.target.value,\"num1\")}></Input>} /> \r\n                                             +\r\n                                               <Popup content=\"for example:1+1\" trigger={<Input type=\"number\" min={1} max={10} value={this.state.form.num2} onChange={(e)=>this.onChange(e.target.value,\"num2\")}></Input>} /></Form.Input> :\r\n                                            <Form.Input label=\"Details\">\r\n                                                <Popup content=\"for example:3 In 100$\" trigger={<Input type=\"number\" min={1} max={10} value={this.state.form.num1} onChange={(e)=>this.onChange(e.target.value,\"num1\")}></Input>} /> \r\n                                                In\r\n                                            <Popup content=\"for example:3 In 100$\" trigger={<Input type=\"number\" min={1} max={1000000} value={this.state.form.num2} onChange={(e)=>this.onChange(e.target.value,\"num2\")}></Input>} /></Form.Input>}\r\n                                    <Form.Input type=\"date\" label=\"Expire Date\" value={this.state.form.expireDate} onChange={(e)=>this.onChange(e.target.value,\"expireDate\")}>\r\n                                    </Form.Input>\r\n                                </Form.Group>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                <Form.TextArea label=\"Addition\" type=\"text\" placeholder=\"Addition\" maxLength={50} value={this.state.form.addition} onChange={(e)=>this.onChange(e.target.value,\"addition\")}></Form.TextArea></Grid.Row></Grid.Column></Grid>\r\n                </Form>\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Lotery;\r\n"]},"metadata":{},"sourceType":"module"}