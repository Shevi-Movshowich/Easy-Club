{"ast":null,"code":"import validator from 'validator';\n\nconst newPassword = mail => {\n  var obj;\n\n  if (mail.value === \"\") {\n    obj = {\n      id: \"Email\",\n      error: \"mail is requried\"\n    };\n  }\n\n  if (!validator.isEmail(mail.value)) obj = {\n    id: \"Email\",\n    error: \"mail is not valid\"\n  };\n\n  for (let x in form) {\n    const inputError = { ...form[x]\n    };\n    inputError.valid = true;\n    form[x] = inputError;\n  }\n\n  if (obj !== null) {\n    const inputError = { ...form[obj.id]\n    };\n    inputError.valid = false;\n    form[obj.id] = inputError;\n    return obj;\n  }\n\n  return null;\n  return null;\n};\n\nexport default newPassword;","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Service/newPassword.js"],"names":["validator","newPassword","mail","obj","value","id","error","isEmail","x","form","inputError","valid"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;;AACA,MAAMC,WAAW,GAAIC,IAAD,IAAU;AAC1B,MAAIC,GAAJ;;AACA,MAAID,IAAI,CAACE,KAAL,KAAe,EAAnB,EAAuB;AACnBD,IAAAA,GAAG,GAAC;AAAEE,MAAAA,EAAE,EAAE,OAAN;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAAJ;AACH;;AACD,MAAI,CAACN,SAAS,CAACO,OAAV,CAAkBL,IAAI,CAACE,KAAvB,CAAL,EACID,GAAG,GAAC;AAAEE,IAAAA,EAAE,EAAE,OAAN;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAAJ;;AACJ,OAAK,IAAIE,CAAT,IAAcC,IAAd,EAAoB;AAChB,UAAMC,UAAU,GAAG,EAAE,GAAGD,IAAI,CAACD,CAAD;AAAT,KAAnB;AACAE,IAAAA,UAAU,CAACC,KAAX,GAAmB,IAAnB;AACAF,IAAAA,IAAI,CAACD,CAAD,CAAJ,GAAUE,UAAV;AACH;;AACD,MAAIP,GAAG,KAAK,IAAZ,EAAkB;AACd,UAAMO,UAAU,GAAG,EAAE,GAAGD,IAAI,CAACN,GAAG,CAACE,EAAL;AAAT,KAAnB;AACAK,IAAAA,UAAU,CAACC,KAAX,GAAmB,KAAnB;AACAF,IAAAA,IAAI,CAACN,GAAG,CAACE,EAAL,CAAJ,GAAeK,UAAf;AACA,WAAOP,GAAP;AACH;;AACD,SAAO,IAAP;AACA,SAAO,IAAP;AACH,CApBD;;AAqBA,eAAeF,WAAf","sourcesContent":["import validator from 'validator';\r\nconst newPassword = (mail) => {\r\n    var obj;\r\n    if (mail.value === \"\") {\r\n        obj={ id: \"Email\", error: \"mail is requried\" };\r\n    }\r\n    if (!validator.isEmail(mail.value))\r\n        obj={ id: \"Email\", error: \"mail is not valid\" };\r\n    for (let x in form) {\r\n        const inputError = { ...form[x] };\r\n        inputError.valid = true;\r\n        form[x] = inputError;\r\n    }\r\n    if (obj !== null) {\r\n        const inputError = { ...form[obj.id] };\r\n        inputError.valid = false;\r\n        form[obj.id] = inputError;\r\n        return obj;\r\n    }\r\n    return null;\r\n    return null;\r\n}\r\nexport default newPassword;"]},"metadata":{},"sourceType":"module"}