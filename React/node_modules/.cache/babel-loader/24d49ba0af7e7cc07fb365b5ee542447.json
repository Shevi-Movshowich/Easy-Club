{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Sidebar\\\\Sidebar.js\";\nimport React, { Component, createRef } from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Icon, Button, Menu, Sidebar, Sticky, Ref } from \"semantic-ui-react\";\nimport { white } from \"color-name\";\n\nclass MySidebar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.navlinks = [{\n      value: \"Home\",\n      path: \"home\"\n    }, {\n      value: \"About\",\n      path: \"about\"\n    }, {\n      value: \"Why it's worth me\",\n      path: \"/\"\n    }, {\n      value: \"Why it's worth my enterprise\",\n      path: \"/\"\n    }, {\n      value: \"Enterprises\",\n      path: \"stores\"\n    }, {\n      value: \"Contact us\",\n      path: \"contact\"\n    }];\n    this.state = {\n      visible: false\n    };\n\n    this.handleHideClick = () => this.setState({\n      visible: false\n    });\n\n    this.handleShowClick = () => this.setState({\n      visible: true\n    });\n\n    this.handleSidebarHide = () => this.setState({\n      visible: false\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.props.user !== null) this.navlinks = [{\n      value: \"Home\",\n      path: \"home\"\n    }, {\n      value: \"About\",\n      path: \"about\"\n    }, {\n      value: \"Why it's worth me\",\n      path: \"/\"\n    }, {\n      value: \"Why it's worth my enterprise\",\n      path: \"/\"\n    }, {\n      value: \"Enterprises\",\n      path: \"stores\"\n    }, {\n      value: \"Contact us\",\n      path: \"contact\"\n    }];else if (this.props.enterprise !== null) {\n      this.navlinks = [{\n        value: \"Home\",\n        path: \"home\"\n      }, {\n        value: \"About\",\n        path: \"about\"\n      }, {\n        value: \"Why it's worth me\",\n        path: \"/\"\n      }, {\n        value: \"Why it's worth my enterprise\",\n        path: \"/\"\n      }, {\n        value: \"Enterprises\",\n        path: \"stores\"\n      }, {\n        value: \"Contact us\",\n        path: \"contact\"\n      }];\n    } else if (this.props.location.pathname === \"users/login\") {\n      this.navlinks = [{\n        value: \"Home\",\n        path: \"home\"\n      }, {\n        value: \"About\",\n        path: \"about\"\n      }];\n    }\n  }\n\n  render() {\n    const contextRef = createRef(); // const array = [];\n    // for (let x in this.state.navlinks) {\n    //     array.push({ id: x, config: this.state.navlinks[x] })\n    // }\n\n    const {\n      visible\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Ref, {\n      innerRef: contextRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar.Pushable, {\n      style: {\n        transform: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Sticky, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#282c34\",\n        textAlign: \"left\",\n        zIndex: \"50\",\n        height: \"7vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: \"sidebarout\",\n      onClick: this.handleShowClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }, \"|||\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        display: \"inline-block\",\n        color: \"white\",\n        fontSize: \"12px\",\n        marginLeft: \"2vw\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 125\n      }\n    }), \"CONTACT US : 052-7689412\")), /*#__PURE__*/React.createElement(Sidebar, {\n      style: {\n        backgroundColor: \"#282c34\"\n      },\n      as: Menu,\n      animation: \"overlay\",\n      icon: \"labeled\",\n      inverted: true,\n      onHide: this.handleSidebarHide,\n      vertical: true,\n      visible: visible,\n      width: \"thin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: \"sidebarin\",\n      onClick: this.handleHideClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, \"X\"), this.navlinks.map((x, i) => {\n      return /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 44\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\" + x.path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 45\n        }\n      }, x.value));\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.user,\n    enterprise: state.enterprise.enterprise\n  };\n};\n\nexport default connect(mapStateToProps, null)(MySidebar);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Sidebar/Sidebar.js"],"names":["React","Component","createRef","NavLink","connect","Icon","Button","Menu","Sidebar","Sticky","Ref","white","MySidebar","navlinks","value","path","state","visible","handleHideClick","setState","handleShowClick","handleSidebarHide","componentDidUpdate","props","user","enterprise","location","pathname","render","contextRef","transform","backgroundColor","textAlign","zIndex","height","display","color","fontSize","marginLeft","map","x","i","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    Icon,\r\n    Button,\r\n    Menu,\r\n    Sidebar, Sticky, Ref\r\n} from \"semantic-ui-react\";\r\nimport { white } from \"color-name\";\r\nclass MySidebar extends Component {\r\n    navlinks = [{ value: \"Home\", path: \"home\" },\r\n    { value: \"About\", path: \"about\" },\r\n    { value: \"Why it's worth me\", path: \"/\" },\r\n    { value: \"Why it's worth my enterprise\", path: \"/\" },\r\n    { value: \"Enterprises\", path: \"stores\" },\r\n    { value: \"Contact us\", path: \"contact\" }]\r\n    //     if(this.props.user!== null) {\r\n    //     // list = [{ value: \"Home\", path: \"home\" },\r\n    //     // { value: \"About\", path: \"about\" },\r\n    //     // { value: \"Why it's worth me\", path: \"/\" },\r\n    //     // { value: \"Why it's worth my enterprise\", path: \"/\" },\r\n    //     // { value: \"Enterprises\", path: \"stores\" },\r\n    //     // { value: \"Contact us\", path: \"contact\" }]\r\n    // }\r\n    //     else {\r\n\r\n    // }\r\n    // if(enterprise)\r\n    state = {\r\n        visible: false,\r\n    };\r\n    componentDidUpdate() {\r\n        if (this.props.user !== null)\r\n           this.navlinks = [{ value: \"Home\", path: \"home\" },\r\n            { value: \"About\", path: \"about\" },\r\n            { value: \"Why it's worth me\", path: \"/\" },\r\n            { value: \"Why it's worth my enterprise\", path: \"/\" },\r\n            { value: \"Enterprises\", path: \"stores\" },\r\n            { value: \"Contact us\", path: \"contact\" }]\r\n        else\r\n            if (this.props.enterprise !== null) {\r\n                this.navlinks = [{ value: \"Home\", path: \"home\" },\r\n                { value: \"About\", path: \"about\" },\r\n                { value: \"Why it's worth me\", path: \"/\" },\r\n                { value: \"Why it's worth my enterprise\", path: \"/\" },\r\n                { value: \"Enterprises\", path: \"stores\" },\r\n                { value: \"Contact us\", path: \"contact\" }]\r\n            }\r\n            else\r\n            if(this.props.location.pathname===\"users/login\"){\r\n                this.navlinks = [{ value: \"Home\", path: \"home\" },\r\n                { value: \"About\", path: \"about\" }]\r\n            }\r\n    }\r\n\r\n\r\n\r\n    handleHideClick = () => this.setState({ visible: false });\r\n    handleShowClick = () => this.setState({ visible: true });\r\n    handleSidebarHide = () => this.setState({ visible: false });\r\n    render() {\r\n        const contextRef = createRef();\r\n        // const array = [];\r\n        // for (let x in this.state.navlinks) {\r\n        //     array.push({ id: x, config: this.state.navlinks[x] })\r\n        // }\r\n        const { visible } = this.state;\r\n        return (\r\n            <div>\r\n                <Ref innerRef={contextRef}>\r\n                    <Sidebar.Pushable style={{ transform: \"none\" }}>\r\n                        <Sticky>\r\n                            <div style={{ backgroundColor: \"#282c34\", textAlign: \"left\", zIndex: \"50\", height: \"7vh\" }} >\r\n                                <Button id=\"sidebarout\" onClick={this.handleShowClick}>|||</Button>\r\n                                <p style={{ display: \"inline-block\", color: \"white\", fontSize: \"12px\", marginLeft: \"2vw\" }}><Icon name=\"phone\"></Icon>CONTACT US : 052-7689412</p>\r\n                            </div>\r\n                            <Sidebar style={{ backgroundColor: \"#282c34\" }}\r\n                                as={Menu}\r\n                                animation=\"overlay\"\r\n                                icon=\"labeled\"\r\n                                inverted\r\n                                onHide={this.handleSidebarHide}\r\n                                vertical\r\n                                visible={visible}\r\n                                width=\"thin\" >\r\n                                <Button id=\"sidebarin\" onClick={this.handleHideClick}>X</Button>\r\n                                {this.navlinks.map((x, i) => {\r\n                                    return <Menu.Item as='a'>\r\n                                            <a href={\"#\" + x.path}>{x.value}</a>\r\n                                            {/* <NavLink to={x.path}>{x.value}</NavLink></Menu.Item>  */}\r\n                                    </Menu.Item>\r\n                                })}\r\n                            </Sidebar>\r\n                        </Sticky>\r\n                    </Sidebar.Pushable>\r\n                </Ref>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user.user,\r\n        enterprise: state.enterprise.enterprise,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(MySidebar);\r\n"]},"metadata":{},"sourceType":"module"}