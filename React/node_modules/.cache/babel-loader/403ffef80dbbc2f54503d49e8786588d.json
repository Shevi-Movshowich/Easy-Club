{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\NewCard\\\\CardDetails.js\";\nimport React, { Component } from 'react';\nimport { Form, Grid, Header, Input, Popup, Divider } from 'semantic-ui-react';\nimport { InputFile } from 'semantic-ui-react-input-file';\nimport { connect } from 'react-redux';\nimport { selectCard } from \"../../../Store/actions/EnterpriseAction\";\nimport axios from 'axios';\n\nclass CardDetails extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.hanleSelectOnChange = (event, {\n      value\n    }) => {\n      const form = { ...this.state.form\n      };\n      const input = { ...form[\"Type\"]\n      };\n      input.value = value;\n      form[\"Type\"] = input;\n      this.setState({\n        form: form\n      });\n    };\n\n    this.convertImg = event => {\n      const file = event.target.files[0];\n\n      if (file) {\n        var name = file.name;\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        console.log(reader);\n\n        reader.onload = () => {\n          this.onChangeHandler(String(reader.result), \"Img\");\n          this.setState({\n            fileName: name\n          });\n        };\n      }\n    };\n\n    this.onChangeHandler = (value, id) => {\n      const form = { ...this.state.form\n      };\n      const input = { ...form[id]\n      };\n\n      if (input.type === \"number\") {\n        input.value = parseInt(value);\n      } else {\n        input.value = value;\n      }\n\n      form[id] = input;\n      this.setState({\n        form: form\n      });\n      const card = {};\n\n      for (let x in this.state.form) {\n        card[x] = this.state.form[x].value;\n      }\n\n      this.props.changed(card);\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.submit && this.props.card === null) {\n      const data = {};\n\n      for (let x in this.state.form) {\n        data[x] = this.state.form[x].value;\n      }\n\n      this.props.selectCard(data);\n    }\n  }\n\n  render() {\n    console.log(this.props.cards);\n    const form = this.props.form;\n    const array = [];\n\n    for (let x in form) {\n      array.push({\n        id: x,\n        config: form[x]\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"1vw\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Card Details\"), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      label: form.Cost.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      label: form.Cost.icon,\n      min: 0,\n      labelPosition: \"right\",\n      type: form.Cost.type,\n      onChange: event => this.onChangeHandler(event.target.value, \"Cost\"),\n      value: form.Cost.value // className={this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id} \n      ,\n      placeholder: form.Cost.text,\n      step: form.Cost.step,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Input, {\n      label: form.CountPoints.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      content: \"for example : 5 point =1$\",\n      trigger: /*#__PURE__*/React.createElement(Input, {\n        min: 1,\n        onChange: event => this.onChangeHandler(event.target.value, \"CountPoints\"),\n        value: form.CountPoints.value,\n        type: form.CountPoints.type,\n        label: form.CountPoints.icon,\n        labelPosition: \"right\",\n        placeholder: form.CountPoints.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 116\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 64\n      }\n    })), /*#__PURE__*/React.createElement(Form.Select, {\n      label: form.Type.label,\n      placeholder: form.Type.text,\n      options: form.Type.options,\n      onChange: this.hanleSelectOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      label: form.Img.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputFile, {\n      button: {\n        labelPosition: \"left\",\n        label: /*#__PURE__*/React.createElement(Input, {\n          placeholder: form.Img.text,\n          value: this.state.fileName !== \"\" ? this.state.fileName : \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 40\n          }\n        })\n      },\n      input: {\n        onChange: this.convertImg\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    card: state.enterprise.card,\n    cards: state.enterprise.cards\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {// selectCard: (card) => dispatch(selectCard(card)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardDetails);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/NewCard/CardDetails.js"],"names":["React","Component","Form","Grid","Header","Input","Popup","Divider","InputFile","connect","selectCard","axios","CardDetails","hanleSelectOnChange","event","value","form","state","input","setState","convertImg","file","target","files","name","reader","FileReader","readAsDataURL","console","log","onload","onChangeHandler","String","result","fileName","id","type","parseInt","card","x","props","changed","componentDidUpdate","submit","data","render","cards","array","push","config","marginLeft","Cost","label","icon","text","step","CountPoints","Type","options","Img","labelPosition","onChange","mapStateToProps","enterprise","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Grid, Header, Input, Popup, Divider } from 'semantic-ui-react';\r\nimport { InputFile } from 'semantic-ui-react-input-file';\r\nimport { connect } from 'react-redux'\r\nimport { selectCard } from \"../../../Store/actions/EnterpriseAction\"\r\nimport axios from 'axios';\r\nclass CardDetails extends Component {\r\n    // state = {\r\n      \r\n    // }\r\n    hanleSelectOnChange = (event, { value }) => {\r\n        const form = { ...this.state.form }\r\n        const input = { ...form[\"Type\"] }\r\n        input.value = value;\r\n        form[\"Type\"] = input\r\n        this.setState({ form: form })\r\n    }\r\n    convertImg = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            var name = file.name;\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            console.log(reader)\r\n            reader.onload = () => {\r\n                this.onChangeHandler(String(reader.result), \"Img\")\r\n                this.setState({ fileName: name })\r\n            }\r\n        }\r\n    }\r\n    onChangeHandler = (value, id) => {\r\n        const form = { ...this.state.form }\r\n        const input = { ...form[id] }\r\n        if (input.type === \"number\") {\r\n            input.value = parseInt(value);\r\n        }\r\n        else {\r\n            input.value = value;\r\n        }\r\n        form[id] = input\r\n        this.setState({ form: form })\r\n        const card = {}\r\n        for (let x in this.state.form) {\r\n            card[x] = this.state.form[x].value;\r\n        }\r\n        this.props.changed(card);\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.props.submit && this.props.card === null) {\r\n            const data = {};\r\n            for (let x in this.state.form) {\r\n                data[x] = this.state.form[x].value;\r\n            }\r\n            this.props.selectCard(data)\r\n        }\r\n    }\r\n    render() {\r\n        console.log(this.props.cards)\r\n        const form = this.props.form;\r\n        const array = [];\r\n        for (let x in form) {\r\n            array.push({ id: x, config: form[x] })\r\n        }\r\n        return (<div style={{ marginLeft: \"1vw\" }}>\r\n            <Header as='h2' color='teal' textAlign='left'>Card Details</Header>\r\n            <Divider></Divider>\r\n            <Form>\r\n                <Grid><Grid.Column><Form.Group>\r\n                    <Form.Input label={form.Cost.label}>\r\n                        <Input label={form.Cost.icon} min={0} labelPosition=\"right\" type={form.Cost.type} onChange={event => this.onChangeHandler(event.target.value, \"Cost\")} value={form.Cost.value}\r\n                            // className={this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id} \r\n                            placeholder={form.Cost.text}\r\n                            step={form.Cost.step}\r\n                        /></Form.Input>\r\n                    <Form.Input label={form.CountPoints.label}><Popup content=\"for example : 5 point =1$\" trigger={<Input min={1} onChange={event => this.onChangeHandler(event.target.value, \"CountPoints\")} value={form.CountPoints.value} type={form.CountPoints.type} label={form.CountPoints.icon} labelPosition=\"right\" placeholder={form.CountPoints.text} />}\r\n                    />\r\n                    </Form.Input>\r\n                    <Form.Select label={form.Type.label} placeholder={form.Type.text} options={form.Type.options} onChange={this.hanleSelectOnChange} ></Form.Select>\r\n                    <Form.Input label={form.Img.label}>\r\n                        <InputFile\r\n                            button={{\r\n                                labelPosition: \"left\",\r\n                                label: <Input placeholder={form.Img.text} value={this.state.fileName !== \"\" ? this.state.fileName : \"\"}></Input>\r\n                            }}\r\n                            input={{\r\n                                onChange: this.convertImg,\r\n                            }} /></Form.Input>\r\n                </Form.Group></Grid.Column></Grid></Form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        card: state.enterprise.card,\r\n        cards: state.enterprise.cards,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // selectCard: (card) => dispatch(selectCard(card)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardDetails);"]},"metadata":{},"sourceType":"module"}