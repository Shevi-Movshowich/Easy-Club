{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\ContactUs\\\\ContactUs.js\";\nimport React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Button, Form, Grid, Header, Image, Segment, FormInput, Input, TextArea, Label, Divider } from 'semantic-ui-react';\n\nclass ContactUs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        name: {\n          type: \"text\",\n          icon: \"user\",\n          text: \"Name\",\n          value: \"\",\n          maxLength: 40,\n          validition: {\n            required: true,\n            pattern: /^[a-zA-Z ]*$/\n          },\n          error: \"The name is incorrect\",\n          valid: false,\n          toched: false\n        },\n        mail: {\n          type: \"text\",\n          icon: \"envelope\",\n          text: \"E-mail address\",\n          value: \"\",\n          maxLength: 50,\n          validition: {\n            required: true,\n            pattern: /^/ // pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n\n          },\n          error: \"The email is incorrect\",\n          valid: false,\n          toched: false\n        },\n        //     <Form.Input\n        //     className='Phone' icon=\"phone\" iconPosition=\"left\" placeholder='Phone' type=\"text\" maxLength={10} value={this.state.phone} onChange={this.handleChangePhone}>\n        // </Form.Input>\n        phone: {\n          type: \"text\",\n          icon: \"phone\",\n          text: \"Phone\",\n          value: \"\",\n          maxLength: 10,\n          validition: {\n            required: true,\n            pattern: /^[0-9]*$/\n          },\n          error: \"The phone is incorrect\",\n          valid: false,\n          toched: false\n        }\n      },\n      validForm: false\n    };\n  }\n\n  render() {\n    const array = [];\n\n    for (let x in this.state.form) {\n      array.push({\n        id: x,\n        config: this.state.form[x]\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      size: \"xx-large\",\n      onSubmit: this.SignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, array.map((x, i) => {\n      return /*#__PURE__*/React.createElement(Form.Input, {\n        key: i,\n        iconPosition: \"left\",\n        width: 12,\n        maxLength: x.config.maxLength,\n        type: x.config.type // onChange={event => this.onChangeHendler(event, x.id)}\n        ,\n        className: !x.config.valid ? x.id : \"error\",\n        placeholder: x.config.text,\n        icon: x.config.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 36\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Form.TextArea, {\n      placeholder: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"message\",\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"Contuct me\")))), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"First name\",\n      placeholder: \"First Name\",\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"Email\",\n      placeholder: \"Middle Name\",\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"Phone\",\n      placeholder: \"Last Name\",\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.TextArea, {\n      placeholder: \"Description\",\n      width: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      value: \"8 Wide\",\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"vxv\"), /*#__PURE__*/React.createElement(Label, {\n      value: \"6 Wide\",\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      placeholder: \"2 Wide\",\n      width: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default ContactUs;","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/ContactUs/ContactUs.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Segment","FormInput","Input","TextArea","Label","Divider","ContactUs","state","form","name","type","icon","text","value","maxLength","validition","required","pattern","error","valid","toched","mail","phone","validForm","render","array","x","push","id","config","height","maxWidth","SignUp","map","i","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Button, Form, Grid, Header, Image, Segment, FormInput, Input, TextArea, Label, Divider } from 'semantic-ui-react';\r\nclass ContactUs extends Component {\r\n    state = {\r\n        form: {\r\n            name: {\r\n                type: \"text\",\r\n                icon: \"user\",\r\n                text: \"Name\",\r\n                value: \"\",\r\n                maxLength: 40,\r\n                validition: {\r\n                    required: true,\r\n                    pattern: /^[a-zA-Z ]*$/\r\n                },\r\n                error: \"The name is incorrect\",\r\n                valid: false,\r\n                toched: false\r\n            },\r\n            mail: {\r\n                type: \"text\",\r\n                icon: \"envelope\",\r\n                text: \"E-mail address\",\r\n                value: \"\",\r\n                maxLength: 50,\r\n                validition: {\r\n                    required: true,\r\n                    pattern: /^/\r\n                    // pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                },\r\n                error: \"The email is incorrect\",\r\n                valid: false,\r\n                toched: false\r\n            },\r\n            //     <Form.Input\r\n            //     className='Phone' icon=\"phone\" iconPosition=\"left\" placeholder='Phone' type=\"text\" maxLength={10} value={this.state.phone} onChange={this.handleChangePhone}>\r\n            // </Form.Input>\r\n            phone: {\r\n                type: \"text\",\r\n                icon: \"phone\",\r\n                text: \"Phone\",\r\n                value: \"\",\r\n                maxLength: 10,\r\n                validition: {\r\n                    required: true,\r\n                    pattern: /^[0-9]*$/\r\n                },\r\n                error: \"The phone is incorrect\",\r\n                valid: false,\r\n                toched: false\r\n            },\r\n        },\r\n        validForm: false,\r\n    }\r\n    render() {\r\n        const array = [];\r\n        for (let x in this.state.form) {\r\n            array.push({ id: x, config: this.state.form[x] })\r\n        }\r\n        return (<div>\r\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Form size='xx-large' onSubmit={this.SignUp}>\r\n                        {/* <Segment stacked> */}\r\n                        {array.map((x, i) => {\r\n                            return <Form.Input key={i} iconPosition=\"left\" width={12}\r\n                                maxLength={x.config.maxLength} type={x.config.type}\r\n                                // onChange={event => this.onChangeHendler(event, x.id)}\r\n                                className={(!x.config.valid ? x.id : \"error\")}\r\n                                placeholder={x.config.text} icon={x.config.icon}>\r\n                            </Form.Input>\r\n                        })}\r\n                        <Form.TextArea placeholder=\"Description\"></Form.TextArea>\r\n                        <div id=\"message\" style={{ color: \"red\" }}></div>\r\n                        <Button type=\"submit\" color='teal' fluid size='large'>\r\n                            Contuct me\r\n                                </Button>\r\n                        {/* </Segment> */}\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n            {/* <Grid.Column verticalAlign='middle' style={{width:\"30%\",maxWidth: 450 }} >\r\n                    <Label style={{display:\"block\"}}>Email:easyclub100@gmail.com</Label>\r\n                    <Label style={{display:\"block\"}}>Fax:03-9258478</Label>\r\n                    <Label style={{display:\"block\"}}>Phone:0527689412</Label>\r\n                </Grid.Column> */}\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Input label='First name' placeholder='First Name' width={6} />\r\n                    <Form.Input label='Email' placeholder='Middle Name' width={4} />\r\n                    <Form.Input label='Phone' placeholder='Last Name' width={6} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                <Form.TextArea placeholder=\"Description\" width={16}></Form.TextArea>\r\n                    {/* <Form.Input placeholder='2 Wide' width={2} />\r\n                    <Form.Input placeholder='12 Wide' width={12} />\r\n                    <Form.Input placeholder='2 Wide' width={2} /> */}\r\n                </Form.Group>\r\n            </Form>\r\n            <Form.Group>\r\n                <Label value='8 Wide' width={8}>vxv</Label>\r\n                <Label value='6 Wide' width={6} />\r\n                <Label placeholder='2 Wide' width={2} />\r\n            </Form.Group>\r\n\r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default ContactUs\r\n"]},"metadata":{},"sourceType":"module"}