{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\NewCard\\\\Lotery.js\";\nimport React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { connect } from 'react-redux';\nimport { Input, Form, Dropdown, Grid, Popup, Button } from 'semantic-ui-react';\n\nclass Lotery extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      LoteryTypes: [{\n        key: 'Discount',\n        text: 'Discount',\n        value: 'Discount'\n      }, {\n        key: \"Plus Free\",\n        text: \"Plus Free\",\n        value: \"Plus Free\"\n      }, {\n        key: \"X in Y\",\n        text: \"X in Y\",\n        value: \"X in Y\"\n      }],\n      SumTypes: [{\n        key: '%',\n        text: '%',\n        value: '%'\n      }, {\n        key: '$',\n        text: '$',\n        value: '$'\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      style: {\n        marginLeft: \"9%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Select, {\n      label: \"Lottery Types\",\n      options: this.state.LoteryTypes,\n      defaultValue: this.props.form.LoteryType,\n      onChange: this.OnChangeSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 37\n      }\n    }), this.props.form.LoteryType === \"Discount\" ? /*#__PURE__*/React.createElement(Popup, {\n      content: \"for example:30% or 30$\",\n      trigger: /*#__PURE__*/React.createElement(Form.Input, {\n        onChange: e => this.props.onChange(e.target.value, \"Sum\", this.props.index),\n        value: this.props.state.form.Sum,\n        min: 1,\n        label: \"Details\",\n        type: \"number\",\n        labelPosition: \"right\",\n        action: /*#__PURE__*/React.createElement(Dropdown, {\n          id: \"sumType\",\n          button: true,\n          basic: true,\n          floating: true,\n          options: this.state.SumTypes,\n          defaultValue: this.state.form.SumType,\n          onChange: this.props.onSelect,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 53\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 54\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 41\n      }\n    }) : \"\", \"    \")) //                          this.state.form.LoteryType === \"Plus Free\" ?\n    //                 <Form.Input label=\"Details\">\n    //                     <Popup content=\"for example:1+1\" trigger={<Input type=\"number\" min={1} max={10} value={this.state.form.Num1} onChange={(e) => this.onChange(e.target.value, \"Num1\")}></Input>} />\n    //                     <Button style={{ borderRadius: \"100px\" }} onClick={event => event.preventDefault()}>+</Button>\n    //                     <Popup content=\"for example:1+1\" trigger={<Input type=\"number\" min={1} max={10} value={this.state.form.Num2} onChange={(e) => this.onChange(e.target.value, \"Num2\")}></Input>} /></Form.Input> :\n    //                 <Form.Input label=\"Details\">\n    //                     <Popup content=\"for example:3 In 100$\" trigger={<Input type=\"number\" min={1} max={10} value={this.state.form.Num1} onChange={(e) => this.onChange(e.target.value, \"Num1\")}></Input>} />\n    //                     <Button style={{ borderRadius: \"100px\" }} onClick={event => event.preventDefault()}>In</Button>\n    //                     <Popup content=\"for example:3 In 100$\" trigger={<Input type=\"number\" min={1} max={1000000} value={this.state.form.Num2} onChange={(e) => this.onChange(e.target.value, \"Num2\")}></Input>} /></Form.Input>}\n    //         <Form.Input type=\"date\" label=\"Expire Date\" value={this.state.form.ExpireDate} onChange={(e) => this.onChange(e.target.value, \"ExpireDate\")}>\n    //         </Form.Input>\n    //     </Form.Group>\n    // </Grid.Row>\n    // <Grid.Row>\n    //     <Form.TextArea label=\"Addition\" type=\"text\" placeholder=\"Addition\" maxLength={50} value={this.state.form.Addition} onChange={(e) => this.onChange(e.target.value, \"Addition\")}></Form.TextArea></Grid.Row></Grid.Column></Grid>\n    ;\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lottery: state.enterprise.lottery\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectLottery: lottery => dispatch({\n      type: \"SELECT_LOTTERY\",\n      payload: lottery\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lotery);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/NewCard/Lotery.js"],"names":["React","Component","connect","Input","Form","Dropdown","Grid","Popup","Button","Lotery","state","LoteryTypes","key","text","value","SumTypes","render","textAlign","marginLeft","props","form","LoteryType","OnChangeSelect","e","onChange","target","index","Sum","SumType","onSelect","mapStateToProps","lottery","enterprise","mapDispatchToProps","dispatch","selectLottery","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { connect } from 'react-redux'\r\nimport { Input, Form, Dropdown, Grid, Popup, Button } from 'semantic-ui-react';\r\nclass Lotery extends Component {\r\n    state = {\r\n        LoteryTypes: [\r\n            { key: 'Discount', text: 'Discount', value: 'Discount' },\r\n            { key: \"Plus Free\", text: \"Plus Free\", value: \"Plus Free\" },\r\n            { key: \"X in Y\", text: \"X in Y\", value: \"X in Y\" }],\r\n        SumTypes: [\r\n            { key: '%', text: '%', value: '%' },\r\n            { key: '$', text: '$', value: '$' }\r\n        ]\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ textAlign: \"left\" }}>\r\n                <Form style={{ marginLeft: \"9%\" }}>\r\n                    {/* <Grid >\r\n                        <Grid.Column style={{ width: 950 }}>\r\n                            <Grid.Row>\r\n                                <Form.Group widths=\"equal\"> */}\r\n                                    <Form.Select label=\"Lottery Types\" options={this.state.LoteryTypes}\r\n                                        defaultValue={this.props.form.LoteryType}\r\n                                        onChange={this.OnChangeSelect}></Form.Select>\r\n                                    {this.props.form.LoteryType === \"Discount\" ?\r\n                                        <Popup\r\n                                            content=\"for example:30% or 30$\"\r\n                                            trigger={<Form.Input\r\n                                                onChange={(e) => this.props.onChange(e.target.value, \"Sum\",this.props.index)}\r\n                                                value={this.props.state.form.Sum}\r\n                                                min={1}\r\n                                                label=\"Details\"\r\n                                                type=\"number\"\r\n                                                labelPosition='right'\r\n                                                action={\r\n                                                    <Dropdown id=\"sumType\" button basic floating options={this.state.SumTypes} defaultValue={this.state.form.SumType} onChange={this.props.onSelect}\r\n                                                    />}></Form.Input>} /> :\"\"  }    </Form>\r\n            </div >\r\n                            //                          this.state.form.LoteryType === \"Plus Free\" ?\r\n                            //                 <Form.Input label=\"Details\">\r\n                            //                     <Popup content=\"for example:1+1\" trigger={<Input type=\"number\" min={1} max={10} value={this.state.form.Num1} onChange={(e) => this.onChange(e.target.value, \"Num1\")}></Input>} />\r\n                            //                     <Button style={{ borderRadius: \"100px\" }} onClick={event => event.preventDefault()}>+</Button>\r\n                            //                     <Popup content=\"for example:1+1\" trigger={<Input type=\"number\" min={1} max={10} value={this.state.form.Num2} onChange={(e) => this.onChange(e.target.value, \"Num2\")}></Input>} /></Form.Input> :\r\n                            //                 <Form.Input label=\"Details\">\r\n                            //                     <Popup content=\"for example:3 In 100$\" trigger={<Input type=\"number\" min={1} max={10} value={this.state.form.Num1} onChange={(e) => this.onChange(e.target.value, \"Num1\")}></Input>} />\r\n                            //                     <Button style={{ borderRadius: \"100px\" }} onClick={event => event.preventDefault()}>In</Button>\r\n                            //                     <Popup content=\"for example:3 In 100$\" trigger={<Input type=\"number\" min={1} max={1000000} value={this.state.form.Num2} onChange={(e) => this.onChange(e.target.value, \"Num2\")}></Input>} /></Form.Input>}\r\n                            //         <Form.Input type=\"date\" label=\"Expire Date\" value={this.state.form.ExpireDate} onChange={(e) => this.onChange(e.target.value, \"ExpireDate\")}>\r\n                            //         </Form.Input>\r\n                            //     </Form.Group>\r\n                            // </Grid.Row>\r\n                            // <Grid.Row>\r\n                            //     <Form.TextArea label=\"Addition\" type=\"text\" placeholder=\"Addition\" maxLength={50} value={this.state.form.Addition} onChange={(e) => this.onChange(e.target.value, \"Addition\")}></Form.TextArea></Grid.Row></Grid.Column></Grid>\r\n          \r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lottery: state.enterprise.lottery,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectLottery: (lottery) => dispatch({ type: \"SELECT_LOTTERY\", payload: lottery }),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Lotery);\r\n"]},"metadata":{},"sourceType":"module"}