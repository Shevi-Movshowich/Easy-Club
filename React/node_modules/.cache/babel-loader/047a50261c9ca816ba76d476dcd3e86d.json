{"ast":null,"code":"import validValue from '../Service/ValidValue';\n\nconst validForm = form => {\n  console.log(form);\n\n  for (let x in form) {\n    if (form[x].validation.required) {\n      if (form[x].value === \"\") {\n        return {\n          id: x,\n          error: form[x].text + \" is requried\"\n        };\n      }\n    }\n\n    const valid = validValue(form[x].value, form[x].validation, x, form[x].text);\n    if (valid !== null) return valid;else if (form[x].validation.confirm_password) {\n      if (form[\"password\"].value !== form[x].value) return {\n        id: \"confirm_password\",\n        error: form[\"confirm_password\"].text + \" is incorrect\"\n      };\n    }\n  }\n\n  ;\n  return null;\n};\n\nexport default validForm;","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Service/ValidStateForm.js"],"names":["validValue","validForm","form","console","log","x","validation","required","value","id","error","text","valid","confirm_password"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,uBAAvB;;AACA,MAAMC,SAAS,GAAIC,IAAD,IAAU;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,OAAK,IAAIG,CAAT,IAAcH,IAAd,EAAoB;AAChB,QAAIA,IAAI,CAACG,CAAD,CAAJ,CAAQC,UAAR,CAAmBC,QAAvB,EAAiC;AAC7B,UAAIL,IAAI,CAACG,CAAD,CAAJ,CAAQG,KAAR,KAAkB,EAAtB,EAA0B;AACtB,eAAO;AAAEC,UAAAA,EAAE,EAAEJ,CAAN;AAASK,UAAAA,KAAK,EAAER,IAAI,CAACG,CAAD,CAAJ,CAAQM,IAAR,GAAe;AAA/B,SAAP;AACH;AACJ;;AACD,UAAMC,KAAK,GAAGZ,UAAU,CAACE,IAAI,CAACG,CAAD,CAAJ,CAAQG,KAAT,EAAgBN,IAAI,CAACG,CAAD,CAAJ,CAAQC,UAAxB,EAAoCD,CAApC,EAAuCH,IAAI,CAACG,CAAD,CAAJ,CAAQM,IAA/C,CAAxB;AACA,QAAIC,KAAK,KAAK,IAAd,EACI,OAAOA,KAAP,CADJ,KAGI,IAAIV,IAAI,CAACG,CAAD,CAAJ,CAAQC,UAAR,CAAmBO,gBAAvB,EAAyC;AACrC,UAAIX,IAAI,CAAC,UAAD,CAAJ,CAAiBM,KAAjB,KAA2BN,IAAI,CAACG,CAAD,CAAJ,CAAQG,KAAvC,EACI,OAAO;AAAEC,QAAAA,EAAE,EAAE,kBAAN;AAA0BC,QAAAA,KAAK,EAAER,IAAI,CAAC,kBAAD,CAAJ,CAAyBS,IAAzB,GAAgC;AAAjE,OAAP;AACP;AACR;;AAAA;AACD,SAAO,IAAP;AACH,CAlBD;;AAmBA,eAAeV,SAAf","sourcesContent":["import validValue from '../Service/ValidValue';\r\nconst validForm = (form) => {\r\n    console.log(form)\r\n    for (let x in form) {\r\n        if (form[x].validation.required) {\r\n            if (form[x].value === \"\") {\r\n                return { id: x, error: form[x].text + \" is requried\" };\r\n            }\r\n        }\r\n        const valid = validValue(form[x].value, form[x].validation, x, form[x].text);\r\n        if (valid !== null)\r\n            return valid;\r\n        else\r\n            if (form[x].validation.confirm_password) {\r\n                if (form[\"password\"].value !== form[x].value)\r\n                    return { id: \"confirm_password\", error: form[\"confirm_password\"].text + \" is incorrect\" }\r\n            }\r\n    };\r\n    return null;\r\n}\r\nexport default validForm;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}