{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Users\\\\NewCard\\\\NewCard.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { NavLink } from 'react-router-dom';\nimport { getAllCards } from \"../../../Store/actions/EnterpriseAction\";\nimport { connect } from 'react-redux';\nimport { Input, Icon, Dimmer, Loader, Transition, Button, Segment, Card, Image } from 'semantic-ui-react';\nimport ReactCardFlip from 'react-card-flip';\n\nclass NewCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      stores: [],\n      isFlipped: false,\n      index: -1,\n      value: '',\n      data: null\n    };\n\n    this.onclick = (e, card) => {\n      this.setState({\n        loading: true\n      });\n      var today = new Date();\n      var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      console.log(this.props.user);\n      const data = {};\n      data['UserId'] = this.props.user['C_id'];\n      data['EnterpCardId'] = card.CardId;\n      data['BuyDate'] = date;\n      data['ExpireDate'] = today.getFullYear() + card['Duration'] + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      console.log(data);\n      axios.post(`http://localhost:64430/api/ClubCards`, data).then(x => {\n        this.props.history.replace('/users/clearing');\n      }).catch(x => {\n        this.setState({\n          loading: false,\n          errorMessage: x.response.data.Message\n        });\n      });\n    };\n\n    this.search = () => {\n      this.setState({\n        loading: true\n      });\n      const data = [];\n      this.props.allCards.map((x, i) => {\n        if (x.Name == this.state.value) data[i] = x;else console.log(x);\n        console.log(data);\n        this.setState({\n          data: data,\n          value: ''\n        }); // alert(x)\n      }); // alert(x)\n\n      this.setState({\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.selectAllCards();\n  }\n\n  render() {\n    console.log(this.state.value);\n    console.log(this.state.data);\n    console.log(this.props.allCards);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        color: '#00b5ad',\n        textAlign: \"center\",\n        fontSize: '20px',\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"| New Card |\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Search...\",\n      style: {\n        marginLeft: '10VW'\n      },\n      value: this.state.value,\n      onChange: e => this.setState({\n        value: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 48\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      icon: \"search\",\n      onClick: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 194\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"8vw\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, this.props.allCards !== null ? this.props.allCards.map((x, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"flip-box\",\n        style: {\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"flip-box-inner\",\n        style: {\n          width: \"12vw\",\n          height: \"15vh\",\n          marginLeft: \"2vw\",\n          marginTop: \"10vh\"\n        },\n        onClick: e => this.onclick(e, x),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"flip-box-front\",\n        style: {\n          backgroundImage: `url(${x.Img})`,\n          backgroundSize: \"100%\",\n          backgroundRepeat: \"no-repeat\",\n          width: \"100%\",\n          height: \"100%\",\n          borderRadius: \"20px\",\n          boxShadow: \" 5px 10px 18px #888888\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"flip-box-back\",\n        style: {\n          backgroundColor: \"rgb(40, 44, 52)\",\n          color: \"white\",\n          width: \"100%\",\n          height: \"100%\",\n          borderRadius: \"20px\",\n          boxShadow: \" 5px 10px 18px #888888\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 41\n        }\n      }, x.Name), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"white\",\n          width: \"100%\",\n          height: \"1vh\",\n          marginTop: '0.5vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 41\n        }\n      }, x.Type), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 41\n        }\n      }, x.Cost + \"$\"))));\n    }) : \"No Results\"), /*#__PURE__*/React.createElement(Dimmer, {\n      active: this.state.loading,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"Loading\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    allCards: state.enterprise.allCards,\n    user: state.user.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectAllCards: () => dispatch(getAllCards())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCard);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Users/NewCard/NewCard.js"],"names":["React","Component","axios","NavLink","getAllCards","connect","Input","Icon","Dimmer","Loader","Transition","Button","Segment","Card","Image","ReactCardFlip","NewCard","state","loading","stores","isFlipped","index","value","data","onclick","e","card","setState","today","Date","date","getFullYear","getMonth","getDate","console","log","props","user","CardId","post","then","x","history","replace","catch","errorMessage","response","Message","search","allCards","map","i","Name","componentDidMount","selectAllCards","render","color","textAlign","fontSize","border","width","marginLeft","target","cursor","height","marginTop","backgroundImage","Img","backgroundSize","backgroundRepeat","borderRadius","boxShadow","backgroundColor","Type","Cost","mapStateToProps","enterprise","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getAllCards } from \"../../../Store/actions/EnterpriseAction\";\r\nimport { connect } from 'react-redux';\r\nimport { Input, Icon, Dimmer, Loader, Transition, Button, Segment, Card, Image } from 'semantic-ui-react';\r\nimport ReactCardFlip from 'react-card-flip';\r\nclass NewCard extends Component {\r\n    state = {\r\n        loading: false,\r\n        stores: [],\r\n        isFlipped: false,\r\n        index: -1,\r\n        value: '',\r\n        data: null,\r\n    }\r\n    componentDidMount() {\r\n        this.props.selectAllCards();\r\n    }\r\n\r\n    onclick = (e, card) => {\r\n        this.setState({ loading: true });\r\n        var today = new Date();\r\n        var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n        console.log(this.props.user)\r\n        const data = {};\r\n        data['UserId'] = this.props.user['C_id']\r\n        data['EnterpCardId'] = card.CardId;\r\n        data['BuyDate'] = date;\r\n        data['ExpireDate'] = today.getFullYear() + card['Duration'] + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n        console.log(data)\r\n        axios.post(`http://localhost:64430/api/ClubCards`, data\r\n        ).then(x => {\r\n            this.props.history.replace('/users/clearing')\r\n        }\r\n        ).catch(x => {\r\n            this.setState({ loading: false, errorMessage: x.response.data.Message });\r\n        });\r\n    }\r\n    search = () => {\r\n        this.setState({ loading: true });\r\n        const data = [];\r\n        this.props.allCards.map((x, i) => {\r\n            if (x.Name == this.state.value)\r\n                data[i] = x;\r\n            else\r\n                console.log(x)\r\n            console.log(data)\r\n\r\n            this.setState({ data: data, value: '' })\r\n            // alert(x)\r\n        })\r\n        // alert(x)\r\n\r\n        this.setState({ loading: false });\r\n    }\r\n    render() {\r\n        console.log(this.state.value)\r\n        console.log(this.state.data)\r\n        console.log(this.props.allCards)\r\n\r\n        return (\r\n            <div >\r\n                <h1 style={{ color: '#00b5ad', textAlign: \"center\", fontSize: '20px', border: 'none' }}>| New Card |</h1>\r\n                <div style={{ width: \"100%\" }}><Input placeholder='Search...' style={{ marginLeft: '10VW' }} value={this.state.value} onChange={e => this.setState({ value: e.target.value })} /><Button icon='search' onClick={this.search}></Button></div>\r\n                <div style={{ marginLeft: \"8vw\" }}>\r\n                    {this.props.allCards !== null ?\r\n                        this.props.allCards.map((x, i) => {\r\n\r\n                            return <div class=\"flip-box\" style={{cursor:\"pointer\"}} >\r\n                                <div class=\"flip-box-inner\" style={{ width: \"12vw\", height: \"15vh\", marginLeft: \"2vw\", marginTop: \"10vh\" }} onClick={e => this.onclick(e, x)}>\r\n                                    <div class=\"flip-box-front\" style={{ backgroundImage: `url(${x.Img})`, backgroundSize: \"100%\", backgroundRepeat: \"no-repeat\", width: \"100%\", height: \"100%\", borderRadius: \"20px\", boxShadow: \" 5px 10px 18px #888888\" }}>\r\n                                        {/* <Image src={x.Img} style={{width:\"60%\",height:\"60%\"}}></Image> */}\r\n                                    </div>\r\n                                    <div class=\"flip-box-back\" style={{ backgroundColor: \"rgb(40, 44, 52)\", color: \"white\", width: \"100%\", height: \"100%\", borderRadius: \"20px\", boxShadow: \" 5px 10px 18px #888888\" }}>\r\n                                        <h2>{x.Name}</h2>\r\n                                        <div style={{ backgroundColor: \"white\", width: \"100%\", height: \"1vh\", marginTop: '0.5vh' }}></div>\r\n                                        <p>{x.Type}</p>\r\n                                        <p>{x.Cost + \"$\"}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        })\r\n                        : \"No Results\"\r\n                    }\r\n                </div>\r\n                <Dimmer active={this.state.loading} inverted>\r\n                    <Loader size='large'>Loading</Loader>\r\n                </Dimmer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allCards: state.enterprise.allCards,\r\n        user: state.user.user,\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectAllCards: () => dispatch(getAllCards()),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCard);"]},"metadata":{},"sourceType":"module"}