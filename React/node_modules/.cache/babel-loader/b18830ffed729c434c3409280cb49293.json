{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Users\\\\SignUp\\\\SignUp.js\";\nimport React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Button, Form, Grid, Header, Image, Segment, FormInput, Input } from 'semantic-ui-react';\nimport axios from 'axios';\nimport validForm from '../../Service/ValidStateForm';\nimport { string } from 'prop-types';\n\nclass UsersSignUp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        name: {\n          type: \"text\",\n          icon: \"user\",\n          text: \"Name\",\n          value: \"\",\n          maxLength: 40,\n          validation: {\n            required: true,\n            pattern: /^[a-zA-Z&.@ ]*$/\n          },\n          error: \"The name is incorrect\",\n          valid: false\n        },\n        tz: {\n          type: \"text\",\n          icon: \"tag\",\n          text: \"Identity\",\n          value: \"\",\n          maxLength: 9,\n          validation: {\n            required: true,\n            pattern: /^[0-9]*$/,\n            tz: true\n          },\n          error: \"The tz is incorrect\",\n          valid: false\n        },\n        mail: {\n          type: \"text\",\n          icon: \"envelope\",\n          text: \"E-mail address\",\n          value: \"\",\n          maxLength: 50,\n          validation: {\n            required: true,\n            pattern: /^[0-9a-zA-Z.+*%#!@]+$/,\n            mail: true // pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n\n          },\n          error: \"The email is incorrect\",\n          valid: false\n        },\n        password: {\n          type: \"password\",\n          icon: \"lock\",\n          text: \"Password\",\n          value: \"\",\n          maxLength: 15,\n          validation: {\n            required: true,\n            pattern: /^[0-9a-zA-Z]+$/,\n            password: true\n          },\n          error: \"The password is incorrect\",\n          valid: false\n        },\n        phone: {\n          type: \"text\",\n          icon: \"phone\",\n          text: \"Phone\",\n          value: \"\",\n          maxLength: 10,\n          validation: {\n            required: true,\n            pattern: /^[0-9]*$/,\n            phone: true\n          },\n          error: \"The phone is incorrect\",\n          valid: false\n        },\n        birthdate: {\n          type: \"date\",\n          icon: \"birthday cake\",\n          text: \"BirthDate\",\n          value: \"\",\n          maxLength: 10,\n          validation: {\n            required: true,\n            pattern: /^/\n          },\n          error: \"The birthday is incorrect\",\n          valid: false\n        }\n      },\n      validForm: false,\n      errorForm: \"\",\n      trySend: false\n    };\n\n    this.onChangeHendler = (e, id) => {\n      const form = { ...this.state.form\n      };\n      const inputChanged = { ...form[id]\n      };\n      const value = inputChanged.value;\n\n      if (!inputChanged.validation[\"pattern\"].test(e.target.value)) {\n        console.log(inputChanged.value);\n        e.target.value = inputChanged.value;\n      } else inputChanged.value = e.target.value;\n\n      console.log(inputChanged); // this.setState({ errorForm: validForm(form) });\n      // console.log(form.errorForm)\n      // if (this.state.errorForm === \"\") {\n      //     inputChanged.valid = true;\n      //     this.setState({ validForm: true });\n      // }\n      // else\n      //     inputChanged.valid = false;\n      // const valid = validValue(value, inputChange.validition)\n      // form[id].valid=valid;\n      //     const validForm = validForm(form);\n\n      form[id] = inputChanged; //     this.setState({ form: form, validForm: validForm })\n\n      this.setState({\n        form: form\n      }); //     // //if form valid?\n      // }\n    };\n\n    this.validForm = form => {\n      const array = [];\n\n      for (let x in form) {\n        array.push({\n          id: x,\n          config: form[x]\n        });\n      }\n\n      array.map((element, i) => {\n        const name = element.id;\n        console.log(name);\n        console.log(element.config.validation);\n\n        if (element.config.validation.required) {\n          console.log(element.config.validation.required);\n\n          if (element.config.value === \"\") {\n            console.log(element.id);\n            return {\n              id: element.id,\n              error: \"this \" + name + \" is requried\"\n            };\n          }\n        } else return validValue(element.config.value, element.config.validation, element.id);\n      });\n    };\n\n    this.SignUp = () => {\n      const form = { ...this.state.form\n      }; // form.errorForm = validForm(form, id);\n      // console.log(form.errorForm)\n      // if (form.errorForm === \"\")\n      //     form[id].valid = true;\n      // else\n      //     form[id].valid = false;\n      // form.trySend = true\n      // this.setState({ form: form })\n\n      this.setState({\n        trySend: true\n      });\n      var obj = this.validForm(form);\n\n      if (obj !== null) {\n        console.log(obj);\n        const inputError = { ...form[obj.id]\n        }; // inputError.valid = false;\n\n        inputError.valid = false;\n        document.getElementById(\"message\").innerHTML = obj.error;\n        form[obj.id] = inputError;\n        this.setState({\n          form: form\n        }); // this.setState({ validForm: false });\n      } else {\n        // inputError.valid = true;\n        // console.log(this.state.validForm)\n        axios.post(`http://localhost:64430/api/Users`, {\n          Name: this.state.form[\"name\"].value,\n          Tz: this.state.form[\"tz\"].value,\n          Email: this.state.form[\"mail\"].value,\n          Password: this.state.form[\"password\"].value,\n          Phone: this.state.form[\"phone\"].value,\n          BirthDate: this.state.form[\"birthdate\"].value\n        }).then(x => {\n          this.props.history.replace('/users/login');\n          console.log(x);\n        }).catch(x => {\n          document.getElementById(\"message\").innerHTML = x.response.data.Message;\n        });\n      }\n    };\n\n    this._onFocus = e => {\n      e.currentTarget.type = \"date\";\n    };\n  }\n\n  render() {\n    const array = [];\n\n    for (let x in this.state.form) {\n      array.push({\n        id: x,\n        config: this.state.form[x]\n      });\n    }\n\n    console.log(array);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: \"/Images/logo.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }), \" Sign-Up to your account\"), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.SignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      stacked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }, array.map((x, i) => {\n      console.log(x.config);\n      return /*#__PURE__*/React.createElement(Form.Input, {\n        key: i,\n        iconPosition: \"left\",\n        maxLength: x.config.maxLength,\n        type: x.config.type,\n        onChange: event => this.onChangeHendler(event, x.id),\n        className: this.state.form.trySend && !this.state.form[x.id].valid ? \"error\" : x.id // error={this.state.trySend && !x.config.valid ? x.config.error : null}\n        ,\n        placeholder: x.config.text,\n        icon: x.config.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 40\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"message\",\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 29\n      }\n    }, \"Sign-Up\"))))));\n  }\n\n}\n\nexport default UsersSignUp;","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Users/SignUp/SignUp.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Segment","FormInput","Input","axios","validForm","string","UsersSignUp","state","form","name","type","icon","text","value","maxLength","validation","required","pattern","error","valid","tz","mail","password","phone","birthdate","errorForm","trySend","onChangeHendler","e","id","inputChanged","test","target","console","log","setState","array","x","push","config","map","element","i","validValue","SignUp","obj","inputError","document","getElementById","innerHTML","post","Name","Tz","Email","Password","Phone","BirthDate","then","props","history","replace","catch","response","data","Message","_onFocus","currentTarget","render","height","maxWidth","event","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Button, Form, Grid, Header, Image, Segment, FormInput, Input } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport validForm from '../../Service/ValidStateForm'\r\nimport { string } from 'prop-types';\r\nclass UsersSignUp extends Component {\r\n    state = {\r\n        form: {\r\n            name: {\r\n                type: \"text\",\r\n                icon: \"user\",\r\n                text: \"Name\",\r\n                value: \"\",\r\n                maxLength: 40,\r\n                validation: {\r\n                    required: true,\r\n                    pattern: /^[a-zA-Z&.@ ]*$/,\r\n                },\r\n                error: \"The name is incorrect\",\r\n                valid: false,\r\n            },\r\n            tz: {\r\n                type: \"text\",\r\n                icon: \"tag\",\r\n                text: \"Identity\",\r\n                value: \"\",\r\n                maxLength: 9,\r\n                validation: {\r\n                    required: true,\r\n                    pattern: /^[0-9]*$/,\r\n                    tz: true\r\n                },\r\n                error: \"The tz is incorrect\",\r\n                valid: false,\r\n            },\r\n            mail: {\r\n                type: \"text\",\r\n                icon: \"envelope\",\r\n                text: \"E-mail address\",\r\n                value: \"\",\r\n                maxLength: 50,\r\n                validation: {\r\n                    required: true,\r\n                    pattern: /^[0-9a-zA-Z.+*%#!@]+$/,\r\n                    mail: true\r\n                    // pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                },\r\n                error: \"The email is incorrect\",\r\n                valid: false,\r\n            },\r\n            password: {\r\n                type: \"password\",\r\n                icon: \"lock\",\r\n                text: \"Password\",\r\n                value: \"\",\r\n                maxLength: 15,\r\n                validation: {\r\n                    required: true,\r\n                    pattern: /^[0-9a-zA-Z]+$/,\r\n                    password: true\r\n                },\r\n                error: \"The password is incorrect\",\r\n                valid: false,\r\n            },\r\n            phone: {\r\n                type: \"text\",\r\n                icon: \"phone\",\r\n                text: \"Phone\",\r\n                value: \"\",\r\n                maxLength: 10,\r\n                validation: {\r\n                    required: true,\r\n                    pattern: /^[0-9]*$/,\r\n                    phone: true\r\n                },\r\n                error: \"The phone is incorrect\",\r\n                valid: false,\r\n            },\r\n            birthdate: {\r\n                type: \"date\",\r\n                icon: \"birthday cake\",\r\n                text: \"BirthDate\",\r\n                value: \"\",\r\n                maxLength: 10,\r\n                validation: {\r\n                    required: true,\r\n                    pattern: /^/\r\n                },\r\n                error: \"The birthday is incorrect\",\r\n                valid: false,\r\n            },\r\n        },\r\n        validForm: false,\r\n        errorForm: \"\",\r\n        trySend: false\r\n    }\r\n    onChangeHendler = (e, id) => {\r\n        const form = { ...this.state.form };\r\n        const inputChanged = { ...form[id] };\r\n        const value = inputChanged.value;\r\n        if (!inputChanged.validation[\"pattern\"].test(e.target.value)) {\r\n            console.log(inputChanged.value)\r\n            e.target.value = inputChanged.value\r\n        }\r\n        else\r\n            inputChanged.value = e.target.value;\r\n        console.log(inputChanged)\r\n        // this.setState({ errorForm: validForm(form) });\r\n        // console.log(form.errorForm)\r\n        // if (this.state.errorForm === \"\") {\r\n        //     inputChanged.valid = true;\r\n        //     this.setState({ validForm: true });\r\n        // }\r\n        // else\r\n        //     inputChanged.valid = false;\r\n        // const valid = validValue(value, inputChange.validition)\r\n        // form[id].valid=valid;\r\n        //     const validForm = validForm(form);\r\n        form[id] = inputChanged;\r\n        //     this.setState({ form: form, validForm: validForm })\r\n        this.setState({ form: form })\r\n        //     // //if form valid?\r\n        // }\r\n    }\r\n    validForm = (form) => {\r\n        const array = [];\r\n        for (let x in form) {\r\n            array.push({ id: x, config: form[x] })\r\n        }\r\n        array.map((element, i) => {\r\n            const name = element.id;\r\n            console.log(name)\r\n            console.log(element.config.validation)\r\n            if (element.config.validation.required) {\r\n                console.log(element.config.validation.required)\r\n                if (element.config.value === \"\") {\r\n                    console.log(element.id)\r\n                    return { id: element.id, error: \"this \" + name + \" is requried\" };\r\n                }\r\n            }\r\n            else\r\n                return validValue(element.config.value, element.config.validation, element.id);\r\n        });\r\n    }\r\n    SignUp = () => {\r\n        const form = { ...this.state.form };\r\n        // form.errorForm = validForm(form, id);\r\n        // console.log(form.errorForm)\r\n        // if (form.errorForm === \"\")\r\n        //     form[id].valid = true;\r\n        // else\r\n        //     form[id].valid = false;\r\n        // form.trySend = true\r\n        // this.setState({ form: form })\r\n        this.setState({ trySend: true })\r\n        var obj = this.validForm(form)\r\n        if (obj !== null) {\r\n            console.log(obj)\r\n            const inputError = { ...form[obj.id] };\r\n            // inputError.valid = false;\r\n            inputError.valid = false;\r\n            document.getElementById(\"message\").innerHTML = obj.error;\r\n            form[obj.id] = inputError;\r\n            this.setState({ form: form })\r\n            // this.setState({ validForm: false });\r\n        }\r\n        else {\r\n            // inputError.valid = true;\r\n            // console.log(this.state.validForm)\r\n            axios.post(`http://localhost:64430/api/Users`, {\r\n                Name: this.state.form[\"name\"].value,\r\n                Tz: this.state.form[\"tz\"].value,\r\n                Email: this.state.form[\"mail\"].value,\r\n                Password: this.state.form[\"password\"].value,\r\n                Phone: this.state.form[\"phone\"].value,\r\n                BirthDate: this.state.form[\"birthdate\"].value,\r\n            }).then(x => {\r\n                this.props.history.replace('/users/login');\r\n                console.log(x);\r\n            }\r\n            ).catch(x => {\r\n                document.getElementById(\"message\").innerHTML = x.response.data.Message;\r\n            });\r\n        }\r\n    }\r\n    _onFocus = (e) => {\r\n        e.currentTarget.type = \"date\";\r\n    }\r\n    render() {\r\n        const array = [];\r\n        for (let x in this.state.form) {\r\n            array.push({ id: x, config: this.state.form[x] })\r\n        }\r\n        console.log(array)\r\n        return (<div>\r\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Header as='h2' color='teal' textAlign='center'>\r\n                        <Image src='/Images/logo.png' /> Sign-Up to your account\r\n                  </Header>\r\n                    <Form size='large' onSubmit={this.SignUp}>\r\n                        <Segment stacked>\r\n                            {array.map((x, i) => {\r\n                                console.log(x.config)\r\n                                return <Form.Input\r\n                                    key={i} iconPosition=\"left\"\r\n                                    maxLength={x.config.maxLength}\r\n                                    type={x.config.type}\r\n                                    onChange={event => this.onChangeHendler(event, x.id)}\r\n                                    className={this.state.form.trySend && !this.state.form[x.id].valid ? \"error\" : x.id}\r\n                                    // error={this.state.trySend && !x.config.valid ? x.config.error : null}\r\n                                    placeholder={x.config.text}\r\n                                    icon={x.config.icon}\r\n                                >\r\n                                </Form.Input>\r\n                            })}\r\n                            <div id=\"message\" style={{ color: \"red\" }}></div>\r\n                            <Button type=\"submit\" color='teal' fluid size='large'>\r\n                                Sign-Up\r\n                            </Button>\r\n                        </Segment>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default UsersSignUp;"]},"metadata":{},"sourceType":"module"}