{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Users\\\\NewCard\\\\NewCard.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { getAllCards } from \"../../../Store/actions/EnterpriseAction\";\nimport { connect } from 'react-redux';\nimport { Input, Dimmer, Loader, Button, Icon, Modal } from 'semantic-ui-react';\nimport \"./NewCard.css\";\n\nclass NewCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      stores: [],\n      isFlipped: false,\n      index: -1,\n      value: '',\n      data: []\n    };\n\n    this.onclick = (e, card) => {\n      this.setState({\n        loading: true\n      });\n      var today = new Date();\n      var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      const data = {};\n      data['UserId'] = this.props.user['C_id'];\n      data['EnterpCardId'] = card.CardId;\n      data['BuyDate'] = date;\n      data['ExpireDate'] = today.getFullYear() + card['Duration'] + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      axios.post(`http://localhost:64430/api/ClubCards`, data).then(x => {\n        this.props.history.replace('/users/clearing');\n      }).catch(x => {\n        this.setState({\n          loading: false,\n          errorMessage: x.response.data.Message\n        });\n        alert(x.response.data.Message);\n      });\n    };\n\n    this.search = () => {\n      // this.setState({ loading: true });\n      // const data = [];\n      // for (let x in this.props.allCards) {\n      //   var  cnt=0\n      //     if (x.Name === this.state.value)\n      //     data[cnt++] = x;\n      // }\n      // this.setState({ data: data, value: '', loading: false })\n      this.setState({\n        loading: true\n      });\n      const data = [];\n      this.props.allCards.map((x, i) => {\n        if (x.Name === this.state.value) data[i] = { ...x\n        };else console.log(x);\n      });\n      this.setState({\n        data: data,\n        value: ''\n      });\n      this.setState({\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.selectAllCards();\n    this.setState({\n      data: this.props.allCards\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.data !== null && this.state.data.length === 0 && this.props.allCards.length > 0) {\n      this.setState({\n        data: this.props.allCards\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper_comp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"| New Card |\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      className: \"search\",\n      placeholder: \"Search...\",\n      value: this.state.value,\n      onChange: e => this.setState({\n        value: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 156\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      icon: \"search\",\n      onClick: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 170\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      icon: \"refresh\",\n      onClick: e => this.setState({\n        data: this.props.allCards\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 223\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrap_all_cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, this.state.data !== null && this.state.data.length !== 0 ? this.state.data.map((x, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flip-box\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flip-box-inner-new-card\",\n        onClick: e => this.onclick(e, x),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flip-box-front-new-card\",\n        style: {\n          backgroundImage: `url(${x.Img})`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flip-box-back-new-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 68\n        }\n      }, x.Name)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"card-type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 41\n        }\n      }, x.Type === \"Primium card\" ? /*#__PURE__*/React.createElement(Icon, {\n        circular: true,\n        inverted: true,\n        color: \"teal\",\n        name: \"star\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 95\n        }\n      }) : \"\", \" \" + x.Type), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"card-cost\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 41\n        }\n      }, x.Cost + \"$\"))));\n    }) : \"No Results\"), /*#__PURE__*/React.createElement(Modal // dimmer={dimmer}\n    , {\n      open: this.state.open // onClose={() => dispatch({ type: 'CLOSE_MODAL' })}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, \"Error\"), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, this.state.errorMessage), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      positive: true,\n      onClick: this.setState({\n        open: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, \"Ok\"))), /*#__PURE__*/React.createElement(Dimmer, {\n      active: this.state.loading,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, \"Loading\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    allCards: state.enterprise.allCards,\n    user: state.user.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectAllCards: () => dispatch(getAllCards())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCard);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Users/NewCard/NewCard.js"],"names":["React","Component","axios","getAllCards","connect","Input","Dimmer","Loader","Button","Icon","Modal","NewCard","state","loading","stores","isFlipped","index","value","data","onclick","e","card","setState","today","Date","date","getFullYear","getMonth","getDate","props","user","CardId","post","then","x","history","replace","catch","errorMessage","response","Message","alert","search","allCards","map","i","Name","console","log","componentDidMount","selectAllCards","componentDidUpdate","length","render","target","backgroundImage","Img","Type","Cost","open","mapStateToProps","enterprise","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { getAllCards } from \"../../../Store/actions/EnterpriseAction\";\r\nimport { connect } from 'react-redux';\r\nimport { Input, Dimmer, Loader, Button, Icon, Modal } from 'semantic-ui-react';\r\nimport \"./NewCard.css\"\r\nclass NewCard extends Component {\r\n    state = {\r\n        loading: false,\r\n        stores: [],\r\n        isFlipped: false,\r\n        index: -1,\r\n        value: '',\r\n        data: [],\r\n    }\r\n    componentDidMount() {\r\n        this.props.selectAllCards();\r\n        this.setState({ data: this.props.allCards })\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.state.data !== null && this.state.data.length === 0 && this.props.allCards.length > 0) {\r\n            this.setState({ data: this.props.allCards })\r\n        }\r\n    }\r\n    onclick = (e, card) => {\r\n        this.setState({ loading: true });\r\n        var today = new Date();\r\n        var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n        const data = {};\r\n        data['UserId'] = this.props.user['C_id']\r\n        data['EnterpCardId'] = card.CardId;\r\n        data['BuyDate'] = date;\r\n        data['ExpireDate'] = today.getFullYear() + card['Duration'] + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n        axios.post(`http://localhost:64430/api/ClubCards`, data\r\n        ).then(x => {\r\n            this.props.history.replace('/users/clearing')\r\n        }\r\n        ).catch(x => {\r\n            this.setState({ loading: false, errorMessage: x.response.data.Message });\r\n            alert(x.response.data.Message)\r\n        });\r\n    }\r\n    search = () => {\r\n        // this.setState({ loading: true });\r\n        // const data = [];\r\n        // for (let x in this.props.allCards) {\r\n        //   var  cnt=0\r\n        //     if (x.Name === this.state.value)\r\n        //     data[cnt++] = x;\r\n        // }\r\n        // this.setState({ data: data, value: '', loading: false })\r\n        this.setState({ loading: true });\r\n        const data = [];\r\n        this.props.allCards.map((x, i) => {\r\n            if (x.Name === this.state.value)\r\n                data[i] = { ...x };\r\n            else\r\n                console.log(x)\r\n        })\r\n        this.setState({ data: data, value: '' })\r\n        this.setState({ loading: false });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper_comp\">\r\n                <h1>| New Card |</h1>\r\n                <div><Input className=\"search\" placeholder='Search...' value={this.state.value} onChange={e => this.setState({ value: e.target.value })} /><Button.Group><Button icon='search' onClick={this.search}></Button><Button icon='refresh' onClick={e => this.setState({ data: this.props.allCards })}>\r\n                </Button></Button.Group></div>\r\n                <div className=\"wrap_all_cards\">\r\n                    {this.state.data !== null && this.state.data.length !== 0 ?\r\n                        this.state.data.map((x, i) => {\r\n                            return <div className=\"flip-box\" key={i} >\r\n                                <div className=\"flip-box-inner-new-card\" onClick={e => this.onclick(e, x)}>\r\n                                    <div className=\"flip-box-front-new-card\" style={{ backgroundImage: `url(${x.Img})` }}></div>\r\n                                    <div className=\"flip-box-back-new-card\">\r\n                                        <div className=\"card-name\"><h2>{x.Name}</h2></div>\r\n                                        <p className=\"card-type\">{x.Type === \"Primium card\" ? <Icon circular inverted color=\"teal\" name=\"star\"></Icon> : \"\"}{\" \" + x.Type}</p>\r\n                                        <p className=\"card-cost\">{x.Cost + \"$\"}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        })\r\n                        : \"No Results\"\r\n                    }\r\n                </div>\r\n                <Modal\r\n                    // dimmer={dimmer}\r\n                    open={this.state.open}\r\n                // onClose={() => dispatch({ type: 'CLOSE_MODAL' })}\r\n                >\r\n                    <Modal.Header>Error</Modal.Header>\r\n                    <Modal.Content>\r\n                        {this.state.errorMessage}\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button positive onClick={this.setState({open:false})}>\r\n                          Ok\r\n          </Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n                <Dimmer active={this.state.loading} inverted>\r\n                    <Loader size='large'>Loading</Loader>\r\n                </Dimmer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allCards: state.enterprise.allCards,\r\n        user: state.user.user,\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectAllCards: () => dispatch(getAllCards()),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCard);"]},"metadata":{},"sourceType":"module"}