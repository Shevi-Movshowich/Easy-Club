{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\NewPassword\\\\NewPassword.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Loader, Dimmer, Segment, Icon } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport onSubmit from \"../Service/onSubmit\";\nimport onChangeInput from \"../Service/onChangeInput\";\nimport \"../Form.css\";\n\nclass NewPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        password: {\n          value: \"\",\n          text: \"Password\",\n          validation: {\n            pattern: /^[0-9a-zA-Z]+$/,\n            required: true,\n            password: true\n          }\n        },\n        confirm_password: {\n          value: \"\",\n          text: \"Confirm Password\",\n          validation: {\n            pattern: /^[0-9a-zA-Z]+$/,\n            required: true,\n            confirm_password: true\n          }\n        }\n      },\n      trySend: \"\",\n      loading: \"\",\n      errorMessage: \"\",\n      permission: true,\n      timeIsHoverError: \"\"\n    };\n    this.search = this.props.location.search;\n    this.params = new URLSearchParams(this.search);\n    this.key = this.params.get('key');\n\n    this.onChangeHendler = (e, id) => {\n      this.setState({\n        trySend: false\n      });\n      const form = { ...this.state.form\n      };\n      const inputChanged = { ...form[id]\n      };\n      onChangeInput(e, inputChanged, form, id);\n      this.setState({\n        form: form\n      });\n    };\n\n    this.changePassword = () => {\n      const form = { ...this.state.form\n      };\n      const obj = onSubmit(form);\n\n      if (obj !== null) {\n        this.setState({\n          form: form,\n          trySend: true,\n          errorMessage: obj.error\n        });\n      } else {\n        var location = \"users\";\n        this.setState({\n          loading: true\n        });\n        if (this.props.location.pathname !== '/users/newpassword') location = \"enterprises\";\n        axios.post(`http://localhost:64430/api/${location}?key=${this.key}&password=${this.state.form.password.value}`).then(x => {\n          alert(\"Password was changed successfully\");\n          this.props.history.replace(\"/\" + location + \"/login\");\n        }).catch(x => this.setState({\n          errorMessage: x.response.data.Message,\n          loading: false\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:64430/api/SendMail?key=${this.key}`).then(x => {\n      this.setState({\n        permission: true\n      });\n    }).catch(x => this.setState({\n      timeIsHoverError: x.response.data.Message,\n      permission: false\n    }));\n  }\n\n  render() {\n    const array = [];\n\n    for (let x in this.state.form) {\n      array.push({\n        id: x,\n        config: this.state.form[x]\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, this.state.permission ? /*#__PURE__*/React.createElement(Grid, {\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      className: \"columnForm\",\n      style: {\n        maxWidth: 450,\n        height: '52%',\n        width: '37vw'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, \"New password\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Icon.Group, {\n      size: \"huge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"lock\",\n      size: \"large\",\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.changePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      stacked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, array.map((x, i) => {\n      return /*#__PURE__*/React.createElement(Form.Input, {\n        key: i,\n        iconPosition: \"left\",\n        type: \"password\",\n        onChange: event => this.onChangeHendler(event, x.id),\n        className: this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id,\n        placeholder: x.config.text + \"*\",\n        icon: \"lock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 40\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, this.state.errorMessage), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, \"submit\"))))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"msg\",\n      style: {\n        textAlign: \"center\",\n        marginTop: \"3vh\",\n        fontSize: \"40px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 23\n      }\n    }, this.state.timeIsHoverError), /*#__PURE__*/React.createElement(Dimmer, {\n      active: this.state.loading,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"Loading\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.user,\n    enterprise: state.enterprise.enterprise\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectUser: user => dispatch({\n      type: \"SELECT_USER\",\n      payload: user\n    }),\n    selectEnterprise: enterprise => dispatch({\n      type: \"SELECT_ENTERPRISE\",\n      payload: enterprise\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPassword);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/NewPassword/NewPassword.js"],"names":["React","Component","Button","Form","Grid","Header","Loader","Dimmer","Segment","Icon","axios","connect","onSubmit","onChangeInput","NewPassword","state","form","password","value","text","validation","pattern","required","confirm_password","trySend","loading","errorMessage","permission","timeIsHoverError","search","props","location","params","URLSearchParams","key","get","onChangeHendler","e","id","setState","inputChanged","changePassword","obj","error","pathname","post","then","x","alert","history","replace","catch","response","data","Message","componentDidMount","render","array","push","config","height","maxWidth","width","map","i","event","valid","textAlign","marginTop","fontSize","mapStateToProps","user","enterprise","mapDispatchToProps","dispatch","selectUser","type","payload","selectEnterprise"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Form, Grid, Header, Loader, Dimmer, Segment,Icon } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nimport onSubmit from \"../Service/onSubmit\";\r\nimport onChangeInput from \"../Service/onChangeInput\";\r\nimport \"../Form.css\"\r\nclass NewPassword extends Component {\r\n    state = {\r\n        form: {\r\n            password: {\r\n                value: \"\",\r\n                text: \"Password\",\r\n                validation: {\r\n                    pattern: /^[0-9a-zA-Z]+$/,\r\n                    required: true,\r\n                    password: true,\r\n                }\r\n            },\r\n            confirm_password: {\r\n                value: \"\",\r\n                text: \"Confirm Password\",\r\n                validation: {\r\n                    pattern: /^[0-9a-zA-Z]+$/,\r\n                    required: true,\r\n                    confirm_password: true,\r\n                }\r\n            }\r\n        },\r\n        trySend: \"\",\r\n        loading: \"\",\r\n        errorMessage: \"\",\r\n        permission: true,\r\n        timeIsHoverError: \"\",\r\n    }\r\n    search = this.props.location.search;\r\n    params = new URLSearchParams(this.search);\r\n    key = this.params.get('key');\r\n    componentDidMount() {\r\n        axios.get(`http://localhost:64430/api/SendMail?key=${this.key}`).then(x => {\r\n            this.setState({ permission: true });\r\n        }).catch(x => this.setState({ timeIsHoverError: x.response.data.Message, permission: false }));\r\n    }\r\n    onChangeHendler = (e, id) => {\r\n        this.setState({ trySend: false })\r\n        const form = { ...this.state.form };\r\n        const inputChanged = { ...form[id] };\r\n        onChangeInput(e, inputChanged, form, id);\r\n        this.setState({ form: form })\r\n    }\r\n    changePassword = () => {\r\n        const form = { ...this.state.form };\r\n        const obj = onSubmit(form)\r\n        if (obj !== null) {\r\n            this.setState({ form: form, trySend: true, errorMessage: obj.error });\r\n        }\r\n        else {\r\n            var location = \"users\";\r\n            this.setState({ loading: true });\r\n            if (this.props.location.pathname !== '/users/newpassword')\r\n                location = \"enterprises\";\r\n            axios.post(`http://localhost:64430/api/${location}?key=${this.key}&password=${this.state.form.password.value}`).then(x => {\r\n                alert(\"Password was changed successfully\");\r\n                this.props.history.replace(\"/\" + location + \"/login\");\r\n            }).catch(x => this.setState({ errorMessage: x.response.data.Message, loading: false }));\r\n        }\r\n    }\r\n    render() {\r\n        const array = [];\r\n        for (let x in this.state.form) {\r\n            array.push({ id: x, config: this.state.form[x] })\r\n        }\r\n        return (<div>\r\n            {this.state.permission ? <Grid style={{ height: '100vh' }} verticalAlign='middle' textAlign='center'>\r\n                <Grid.Column className=\"columnForm\" style={{ maxWidth: 450, height: '52%', width: '37vw' }}>\r\n                    <Header as='h2'>New password\r\n                    <br></br>\r\n                        <Icon.Group size='huge'>\r\n                            <Icon name='lock' size='large' color='black' />\r\n                        </Icon.Group>\r\n                    </Header>\r\n                    <Form size='large' onSubmit={this.changePassword}>\r\n                        <Segment stacked>\r\n                            {array.map((x, i) => {\r\n                                return <Form.Input\r\n                                    key={i} iconPosition=\"left\"\r\n                                    type=\"password\"\r\n                                    onChange={event => this.onChangeHendler(event, x.id)}\r\n                                    className={this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id}\r\n                                    placeholder={x.config.text + \"*\"}\r\n                                    icon=\"lock\">\r\n                                </Form.Input>\r\n                            })}\r\n                            <div id=\"message\">{this.state.errorMessage}</div>\r\n                            <Button type=\"submit\" color='teal' fluid size='large'>\r\n                                 submit\r\n                        </Button>\r\n                        </Segment>\r\n                    </Form>\r\n                </Grid.Column>\r\n\r\n            </Grid> : <div className=\"msg\" style={{ textAlign: \"center\", marginTop: \"3vh\", fontSize: \"40px\" }}>{this.state.timeIsHoverError}</div>}\r\n            <Dimmer active={this.state.loading} inverted>\r\n                <Loader size='large'>Loading</Loader>\r\n            </Dimmer>\r\n        </div >\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user.user,\r\n        enterprise: state.enterprise.enterprise,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectUser: (user) => dispatch({ type: \"SELECT_USER\", payload: user }),\r\n        selectEnterprise: (enterprise) => dispatch({ type: \"SELECT_ENTERPRISE\", payload: enterprise }),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPassword);"]},"metadata":{},"sourceType":"module"}