{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\NewCard\\\\CardDetails.js\";\nimport React, { Component } from 'react';\nimport Lotery from './Lotery';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Checkbox, Select, Input, Popup, Divider, Label, Icon } from 'semantic-ui-react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { InputFile } from 'semantic-ui-react-input-file';\nimport { Route, Switch, Redirect, Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { selectCard } from \"../../../Store/actions/EnterpriseAction\";\nimport axios from 'axios';\n\nclass CardDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        cost: {\n          label: \"Price For Customer\",\n          Icon: \"$\",\n          type: 'number',\n          step: 5,\n          text: \"Card Price\",\n          value: \"\"\n        },\n        points: {},\n        type: {\n          type: \"\",\n          options: [{\n            key: \"Basic\",\n            text: 'Basic card',\n            value: 'Basic card'\n          }, {\n            key: \"Primium\",\n            text: 'Primium card',\n            value: 'Primium card'\n          }],\n          label: \"Card Type\"\n        },\n        img: {\n          imgString: \"\",\n          fileName: \"\"\n        }\n      }\n    };\n\n    this.hanleSelctOnChange = (event, {\n      value\n    }) => {\n      this.setState({\n        type: value\n      });\n    };\n\n    this.convertImg = event => {\n      const file = event.target.files[0];\n\n      if (file) {\n        var name = file.name;\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        console.log(reader);\n\n        reader.onload = () => {\n          this.setState({\n            fileName: name\n          });\n          this.setState({\n            img: String(reader.result)\n          });\n        };\n      }\n    };\n\n    this.onChangeHandler = (value, id) => {\n      const form = { ...this.state.form\n      };\n      const input = { ...form[id]\n      };\n      input.value = value;\n      this.setState({\n        form: form\n      });\n    };\n  }\n\n  render() {\n    const form = this.state.form;\n    const array = [];\n\n    for (let x in this.state.form) {\n      array.push({\n        id: x,\n        config: this.state.form[x]\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"1vw\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        width: '30vw',\n        marginLeft: '35vw',\n        marginTop: '5vh',\n        textAlign: 'center',\n        fontSize: '180%',\n        color: 'rgb(40, 44, 52)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"New Card\"), /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Card Details\"), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      label: form.cost.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      label: form.cost.icon,\n      labelPosition: \"right\",\n      type: form.cost.type,\n      value: form.cost.value,\n      onChange: event => this.onChangeHandler(event.target.value, \"cost\") // // className={this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id} */}\n      ,\n      placeholder: form.cost.text + \"*\",\n      step: form.cost.step,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"Count Points\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      content: \"For example 5 point =1$\",\n      trigger: /*#__PURE__*/React.createElement(Input, {\n        type: \"number\",\n        label: \" = 1 $\",\n        labelPosition: \"right\",\n        placeholder: \"Count Points\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Select, {\n      label: \"Card Type\",\n      placeholder: \"Type\",\n      options: this.state.form.type.options,\n      onChange: this.hanleSelctOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"Enterprise Image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputFile, {\n      class: \".ui.form .field .ui.input\",\n      button: {\n        labelPosition: \"left\",\n        label: /*#__PURE__*/React.createElement(Input, {\n          placeholder: \"select Img\",\n          value: this.state.fileName !== \"\" ? this.state.fileName : \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 40\n          }\n        })\n      },\n      input: {\n        id: 'input-control-id',\n        onChange: this.convertImg\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    })))))));\n  }\n\n} // const mapStateToProps = state => {\n//     return {\n//       enterprise: state.enterprise.enterprise\n//     }\n//   }\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectCard: card => dispatch(selectCard(card))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(CardDetails);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/NewCard/CardDetails.js"],"names":["React","Component","Lotery","Button","Form","Grid","Header","Image","Message","Segment","Checkbox","Select","Input","Popup","Divider","Label","Icon","NavLink","withRouter","InputFile","Route","Switch","Redirect","Router","connect","selectCard","axios","CardDetails","state","form","cost","label","type","step","text","value","points","options","key","img","imgString","fileName","hanleSelctOnChange","event","setState","convertImg","file","target","files","name","reader","FileReader","readAsDataURL","console","log","onload","String","result","onChangeHandler","id","input","render","array","x","push","config","marginLeft","width","marginTop","textAlign","fontSize","color","onSubmitHandler","icon","labelPosition","onChange","mapDispatchToProps","dispatch","card"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Lotery from './Lotery';\r\nimport { Button, Form, Grid, Header, Image, Message, Segment, Checkbox, Select, Input, Popup, Divider, Label, Icon } from 'semantic-ui-react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { InputFile } from 'semantic-ui-react-input-file';\r\nimport { Route, Switch, Redirect, Router } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { selectCard } from \"../../../Store/actions/EnterpriseAction\"\r\nimport axios from 'axios';\r\nclass CardDetails extends Component {\r\n    state = {\r\n        form: {\r\n            cost: {\r\n                label: \"Price For Customer\",\r\n                Icon: \"$\",\r\n                type: 'number',\r\n                step: 5,\r\n                text:\"Card Price\",\r\n                value:\"\"\r\n            },\r\n            points: {\r\n\r\n            },\r\n            type: {\r\n                type: \"\",\r\n                options: [{ key: \"Basic\", text: 'Basic card', value: 'Basic card' }, { key: \"Primium\", text: 'Primium card', value: 'Primium card' }],\r\n                label: \"Card Type\",\r\n\r\n            },\r\n            img: {\r\n                imgString: \"\",\r\n                fileName: \"\",\r\n            }\r\n        },\r\n    }\r\n    hanleSelctOnChange = (event, { value }) => {\r\n        this.setState({ type: value })\r\n    }\r\n    convertImg = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            var name = file.name;\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            console.log(reader)\r\n            reader.onload = () => {\r\n                this.setState({ fileName: name })\r\n                this.setState({ img: String(reader.result) })\r\n            }\r\n        }\r\n    }\r\n    onChangeHandler=(value,id)=>{\r\n        const form={...this.state.form}\r\n        const input={...form[id]}\r\n        input.value=value;\r\n        this.setState({form:form})\r\n    }\r\n    render() {\r\n        const form=this.state.form;\r\n        const array = [];\r\n        for (let x in this.state.form) {\r\n            array.push({ id: x, config: this.state.form[x] })\r\n        }\r\n        return (<div style={{ marginLeft: \"1vw\" }}>\r\n            <h1 style={{ width: '30vw', marginLeft: '35vw', marginTop: '5vh', textAlign: 'center', fontSize: '180%', color: 'rgb(40, 44, 52)' }}>New Card</h1>\r\n            <Header as='h2' color='teal' textAlign='left'>Card Details</Header>\r\n            <Divider></Divider>\r\n            <Form onSubmit={this.onSubmitHandler}>\r\n                <Grid> <Grid.Column><Form.Group>\r\n                    <Form.Input label={form.cost.label}>\r\n                        <Input\r\n                            label={form.cost.icon}\r\n                            labelPosition=\"right\"\r\n                            type={form.cost.type}\r\n                            value={form.cost.value}\r\n                            onChange={event => this.onChangeHandler(event.target.value,\"cost\")}\r\n                            // // className={this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id} */}\r\n                            placeholder={form.cost.text + \"*\"}\r\n                            step={form.cost.step}\r\n                        />\r\n                    </Form.Input>\r\n                    <Form.Input label=\"Count Points\">\r\n                        <Popup\r\n                            content=\"For example 5 point =1$\"\r\n                            trigger={\r\n                                <Input type=\"number\" label=' = 1 $' labelPosition=\"right\" placeholder='Count Points' />\r\n                            }\r\n                        />\r\n                    </Form.Input>\r\n                    <Form.Select\r\n                        label=\"Card Type\"\r\n                        placeholder=\"Type\"\r\n                        options={this.state.form.type.options}\r\n                        onChange={this.hanleSelctOnChange}\r\n                    ></Form.Select>\r\n                    <Form.Input label=\"Enterprise Image\">\r\n                        <InputFile class=\".ui.form .field .ui.input\"\r\n                            button={{\r\n                                labelPosition: \"left\",\r\n                                label: <Input placeholder=\"select Img\" value={this.state.fileName !== \"\" ? this.state.fileName : \"\"}></Input>\r\n                            }}\r\n                            input={{\r\n                                id: 'input-control-id',\r\n                                onChange: this.convertImg,\r\n                            }}\r\n                        /></Form.Input>\r\n                </Form.Group>\r\n                </Grid.Column>\r\n                </Grid></Form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//       enterprise: state.enterprise.enterprise\r\n//     }\r\n//   }\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectCard: (card) => dispatch(selectCard(card)),\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(CardDetails);"]},"metadata":{},"sourceType":"module"}