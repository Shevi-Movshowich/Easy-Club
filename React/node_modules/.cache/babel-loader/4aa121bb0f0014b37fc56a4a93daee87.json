{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\NewCard\\\\NewCard.js\";\nimport React, { Component } from 'react';\nimport Lotery from '../Lotery/Lotery';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Checkbox, Select, Input } from 'semantic-ui-react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { InputFile } from 'semantic-ui-react-input-file';\nimport { Route, Switch, Redirect, Router } from 'react-router-dom';\n\nclass NewCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        password: {\n          icon: \"address card\",\n          text: \"Password\",\n          type: \"text\",\n          maxLength: 15\n        },\n        mail: {\n          icon: \"envelope\",\n          text: \"Email\",\n          type: \"text\",\n          maxLength: 50\n        },\n        cost: {\n          icon: 'dollar sign',\n          text: 'Card Price',\n          type: 'text',\n          maxLength: 7\n        },\n        img: {\n          icon: \"images outline\",\n          text: \"Img\",\n          type: \"text\",\n          maxLength: 50\n        },\n        type: {\n          icon: \"paper plane\",\n          text: \"Type\",\n          type: \"text\",\n          maxLength: 50\n        },\n        points: {\n          icon: \"dot circle outline\",\n          text: \"points\",\n          type: \"Number\",\n          maxLength: 5\n        },\n        money: {\n          icon: \"shekel sign\",\n          text: \"money\",\n          type: \"Number\",\n          step: \"0.1\",\n          maxLength: 5\n        }\n      },\n      new: false,\n      birthday: false\n    };\n\n    this.onSubmitHandler = () => {};\n\n    this.genderOptions = [{\n      key: '%',\n      text: '%',\n      value: '%'\n    }, {\n      key: 'Points',\n      text: 'points',\n      value: 'Points'\n    }];\n  }\n\n  render() {\n    const array = [];\n\n    for (let x in this.state.form) {\n      array.push({\n        id: x,\n        config: this.state.form[x]\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: \"/Images/logo.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }), \"New card!!!\"), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.onSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      stacked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, array.map((x, i) => {\n      console.log(x.config);\n      return /*#__PURE__*/React.createElement(Form.Input, {\n        key: i,\n        iconPosition: \"left\",\n        maxLength: x.config.maxLength,\n        type: x.config.type // onChange={event => this.onChangeHendler(event, x.id)}\n        // className={this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id}\n        ,\n        placeholder: x.config.text + \"*\",\n        icon: x.config.icon,\n        step: x.config.step,\n        checked: x.config.checked // onFocus={(e) => x.config.birthdate===true?e.target.type = 'date':\"text\"} \n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 40\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      type: \"Checkbox\",\n      icon: \"circle\",\n      iconPosition: \"left\",\n      onChange: event => this.setState({\n        new: !this.state.new\n      }),\n      label: \"new\",\n      labelPosition: \"left corner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }), this.state.new == true ? /*#__PURE__*/React.createElement(Lotery, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 55\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(Form.Input, {\n      type: \"Checkbox\",\n      icon: \"birthday cake\",\n      iconPosition: \"left\",\n      onChange: event => this.setState({\n        birthday: !this.state.birthday\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }), this.state.birthday == true ? /*#__PURE__*/React.createElement(Lotery, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 60\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(Button, {\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, \"buy new cards\"))))));\n  }\n\n}\n\nexport default NewCard;","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/NewCard/NewCard.js"],"names":["React","Component","Lotery","Button","Form","Grid","Header","Image","Message","Segment","Checkbox","Select","Input","NavLink","withRouter","InputFile","Route","Switch","Redirect","Router","NewCard","state","form","password","icon","text","type","maxLength","mail","cost","img","points","money","step","new","birthday","onSubmitHandler","genderOptions","key","value","render","array","x","push","id","config","height","maxWidth","map","i","console","log","checked","event","setState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Lotery from '../Lotery/Lotery';\r\nimport { Button, Form, Grid, Header, Image, Message, Segment, Checkbox, Select, Input } from 'semantic-ui-react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { InputFile } from 'semantic-ui-react-input-file';\r\nimport { Route, Switch, Redirect, Router } from 'react-router-dom';\r\nclass NewCard extends Component {\r\n\r\n    //         { name: 'birthday', icon: \"birthday cake\", placeholder: \"Prise for birthday\", type: \"Number\",step:\"0.1\"},\r\n    //     ],\r\n    //     status_new: false,\r\n    //     status_birthday: false,\r\n    // }\r\n    state = {\r\n        form: {\r\n            password: {\r\n                icon: \"address card\",\r\n                text: \"Password\",\r\n                type: \"text\",\r\n                maxLength: 15,\r\n\r\n            },\r\n            mail: {\r\n                icon: \"envelope\",\r\n                text: \"Email\",\r\n                type: \"text\",\r\n                maxLength: 50,\r\n\r\n            },\r\n            cost: {\r\n                icon: 'dollar sign',\r\n                text: 'Card Price',\r\n                type: 'text',\r\n                maxLength: 7,\r\n            },\r\n            img: {\r\n                icon: \"images outline\",\r\n                text: \"Img\",\r\n                type: \"text\",\r\n                maxLength: 50,\r\n            },\r\n            type: {\r\n                icon: \"paper plane\",\r\n                text: \"Type\",\r\n                type: \"text\",\r\n                maxLength: 50,\r\n\r\n            },\r\n            points: {\r\n                icon: \"dot circle outline\",\r\n                text: \"points\",\r\n                type: \"Number\",\r\n                maxLength: 5,\r\n            },\r\n            money: {\r\n                icon: \"shekel sign\",\r\n                text: \"money\",\r\n                type: \"Number\",\r\n                step: \"0.1\",\r\n                maxLength: 5,\r\n            },\r\n        },\r\n        new: false,\r\n        birthday: false\r\n\r\n\r\n    }\r\n    onSubmitHandler = () => {\r\n\r\n    }\r\n    genderOptions = [\r\n        { key: '%', text: '%', value: '%' },\r\n        { key: 'Points', text: 'points', value: 'Points' },\r\n    ]\r\n    render() {\r\n        const array = [];\r\n        for (let x in this.state.form) {\r\n            array.push({ id: x, config: this.state.form[x] })\r\n        }\r\n        return (<div>\r\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n                <Grid.Column style={{ maxWidth: 500 }}>\r\n                    <Header as='h2' color='teal' textAlign='center'>\r\n                        <Image src='/Images/logo.png' />New card!!!\r\n                  </Header>\r\n                    <Form size='large' onSubmit={this.onSubmitHandler}>\r\n                        <Segment stacked>\r\n                            {array.map((x, i) => {\r\n                                console.log(x.config)\r\n                                return <Form.Input\r\n                                    key={i} iconPosition=\"left\"\r\n                                    maxLength={x.config.maxLength}\r\n                                    type={x.config.type}\r\n                                    // onChange={event => this.onChangeHendler(event, x.id)}\r\n                                    // className={this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id}\r\n                                    placeholder={x.config.text + \"*\"}\r\n                                    icon={x.config.icon}\r\n                                    step={x.config.step}\r\n                                    checked={x.config.checked}\r\n\r\n                                // onFocus={(e) => x.config.birthdate===true?e.target.type = 'date':\"text\"} \r\n                                >\r\n                                </Form.Input>\r\n                            })}\r\n                            <Form.Input type=\"Checkbox\" icon=\"circle\" iconPosition=\"left\" onChange={event => this.setState({ new: !this.state.new })} label=\"new\" labelPosition=\"left corner\"></Form.Input>\r\n                            {this.state.new == true ? <Lotery></Lotery> : \"\"}\r\n                            <Form.Input type=\"Checkbox\" icon=\"birthday cake\" iconPosition=\"left\" onChange={event => this.setState({ birthday: !this.state.birthday })}></Form.Input>\r\n                            {this.state.birthday == true ? <Lotery></Lotery> : \"\"}\r\n                            {/* {this.state.Input.map((x, i) => {\r\n                                return <Form.Input\r\n                                    name={x.name}\r\n                                    step={x.step}\r\n                                    key={i}\r\n                                    icon={x.icon}\r\n                                    iconPosition=\"left\"\r\n                                    placeholder={x.placeholder}\r\n                                    required={true}\r\n                                    type={x.type}\r\n                                >\r\n                                </Form.Input>\r\n                            })}\r\n                            <Form.Field\r\n                                // icon='envelope'\r\n                                control={Select}\r\n                                options={this.genderOptions}\r\n                                placeholder='Count points'\r\n                                searchInput={{ id: 'form-select-control-gender' }}\r\n                            />\r\n                            <InputFile class=\".ui.form .field .ui.input\"\r\n                                // button={{ ...buttonProps }}\r\n                                input={{\r\n                                    id: 'input',\r\n                                    // onChange: handleUpload\r\n                                }}\r\n                            />\r\n                            <Form.Input>\r\n                                <label for=\"file\" class=\"ui icon button\">\r\n                                    <i class=\"file icon\"></i>\r\n                                Open File</label>\r\n                            </Form.Input>\r\n                            <input type=\"file\" id=\"file\" style={{ display: 'none' }} /> */}\r\n\r\n                            <Button color='teal' fluid size='large' type=\"submit\">\r\n                                buy new cards\r\n                            </Button>\r\n                        </Segment>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default NewCard;"]},"metadata":{},"sourceType":"module"}