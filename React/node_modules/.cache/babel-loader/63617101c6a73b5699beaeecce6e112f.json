{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\NewCard\\\\NewCard.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Checkbox, Select } from 'semantic-ui-react';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nclass NewCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Input: [{\n        name: 'password',\n        icon: \"address card\",\n        placeholder: \"Password\",\n        type: \"text\"\n      }, {\n        name: 'mail',\n        icon: \"envelope\",\n        placeholder: \"Email\",\n        type: \"text\"\n      }, {\n        name: 'cost',\n        icon: 'dollar sign',\n        placeholder: 'Cost',\n        type: 'text'\n      }, // { name: 'Count_points', icon: 'envelope', placeholder: \"Count points\", type: \"email\" },\n      {\n        name: 'new',\n        icon: \"circle\",\n        placeholder: \"Prise for new\",\n        type: \"Checkbox\"\n      }, {\n        name: 'birthday',\n        icon: \"birthday cake\",\n        placeholder: \"Prise for birthday\",\n        type: \"Checkbox\"\n      }, {\n        name: 'img',\n        icon: \"images outline\",\n        placeholder: \"Img\",\n        type: \"text\"\n      } // { name: 'type', icon: \"paper plane\", placeholder: \"Type\", type: \"text\" },            \n      ]\n    };\n    this.genderOptions = [{\n      key: '%',\n      text: '%',\n      value: '%'\n    }, {\n      key: 'Points',\n      text: 'points',\n      value: 'Points'\n    }];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: \"/Images/logo.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }), \"New card!!!\"), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      stacked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, this.state.Input.map((x, i) => {\n      return /*#__PURE__*/React.createElement(Form.Input, {\n        name: x.name,\n        key: i,\n        icon: x.icon,\n        iconPosition: \"left\",\n        placeholder: x.placeholder,\n        required: true,\n        type: x.type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 40\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Form.Field, {\n      // icon='envelope'\n      control: Select,\n      options: this.genderOptions,\n      placeholder: \"Count points\",\n      searchInput: {\n        id: 'form-select-control-gender'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      icon: \"birthday cake\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, \"Prise for birthday\"), /*#__PURE__*/React.createElement(Form.Field, {\n      label: \"30%\",\n      control: \"input\",\n      type: \"radio\",\n      name: \"htmlRadios\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Form.Field, {\n      label: \"20 points\",\n      control: \"input\",\n      type: \"radio\",\n      name: \"htmlRadios\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, \"buy new cards\"))))));\n  }\n\n}\n\nexport default NewCard;","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/NewCard/NewCard.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Message","Segment","Checkbox","Select","NavLink","withRouter","NewCard","state","Input","name","icon","placeholder","type","genderOptions","key","text","value","render","height","maxWidth","map","x","i","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Form, Grid, Header, Image, Message, Segment, Checkbox, Select } from 'semantic-ui-react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nclass NewCard extends Component {\r\n\r\n    state = {\r\n        Input: [\r\n            { name: 'password', icon: \"address card\", placeholder: \"Password\", type: \"text\" },\r\n            { name: 'mail', icon: \"envelope\", placeholder: \"Email\", type: \"text\" },\r\n            { name: 'cost', icon: 'dollar sign', placeholder: 'Cost', type: 'text' },\r\n            // { name: 'Count_points', icon: 'envelope', placeholder: \"Count points\", type: \"email\" },\r\n            { name: 'new', icon: \"circle\", placeholder: \"Prise for new\", type: \"Checkbox\" },\r\n            { name: 'birthday', icon: \"birthday cake\", placeholder: \"Prise for birthday\", type: \"Checkbox\" },\r\n            { name: 'img', icon: \"images outline\", placeholder: \"Img\", type: \"text\" },\r\n            // { name: 'type', icon: \"paper plane\", placeholder: \"Type\", type: \"text\" },            \r\n        ],\r\n    }\r\n    genderOptions = [\r\n        { key: '%', text: '%', value: '%' },\r\n        { key: 'Points', text: 'points', value: 'Points' },\r\n    ]\r\n    render() {\r\n\r\n        return (<div>\r\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Header as='h2' color='teal' textAlign='center'>\r\n                        <Image src='/Images/logo.png' />New card!!!\r\n                  </Header>\r\n                    <Form size='large'>\r\n                        <Segment stacked>\r\n                            {this.state.Input.map((x, i) => {\r\n                                return <Form.Input\r\n                                    name={x.name}\r\n                                    key={i}\r\n                                    icon={x.icon}\r\n                                    iconPosition=\"left\"\r\n                                    placeholder={x.placeholder}\r\n                                    required={true}\r\n                                    type={x.type}\r\n                                >\r\n                                </Form.Input>\r\n                            })}\r\n                            <Form.Field\r\n                                // icon='envelope'\r\n                                control={Select}\r\n                                options={this.genderOptions}\r\n                                placeholder='Count points'\r\n                                searchInput={{ id: 'form-select-control-gender' }}\r\n                            />\r\n                            <label icon=\"birthday cake\">Prise for birthday</label>\r\n                            <Form.Field\r\n                                label='30%'\r\n                                control='input'\r\n                                type='radio'\r\n                                name='htmlRadios'\r\n                            />\r\n                            <Form.Field\r\n                                label='20 points'\r\n                                control='input'\r\n                                type='radio'\r\n                                name='htmlRadios'\r\n                            />\r\n                            <Button color='teal' fluid size='large'>\r\n                                buy new cards\r\n                            </Button>\r\n                        </Segment>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default NewCard;"]},"metadata":{},"sourceType":"module"}