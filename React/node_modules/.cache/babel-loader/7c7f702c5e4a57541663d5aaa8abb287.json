{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\SignUp\\\\SignUp.js\";\nimport React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Button, Icon, Form, Grid, Header, Segment, Dimmer, Loader, Checkbox } from 'semantic-ui-react';\nimport axios from 'axios';\nimport onChangeInput from \"../../Service/onChangeInput\";\nimport onSignUp from \"../../Service/onSubmit\";\nimport validCheckbox from \"../../Service/validCheckbox\";\nimport { connect } from 'react-redux';\nimport \"../../Form.css\";\n\nclass EnterpriseSignUp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        Name: {\n          type: \"text\",\n          icon: \"user\",\n          text: \"Name\",\n          value: \"\",\n          maxLength: 40,\n          validation: {\n            required: true,\n            pattern: /^[a-zA-Z&.@ ]*$/\n          },\n          valid: false\n        },\n        Email: {\n          type: \"text\",\n          icon: \"envelope\",\n          text: \"E-mail address\",\n          value: \"\",\n          maxLength: 50,\n          validation: {\n            required: true,\n            pattern: /^[0-9a-zA-Z.+*%#!@]+$/,\n            mail: true\n          },\n          valid: false\n        },\n        Password: {\n          type: \"Password\",\n          icon: \"lock\",\n          text: \"Password\",\n          value: \"\",\n          maxLength: 15,\n          validation: {\n            required: true,\n            pattern: /^[0-9a-zA-Z]+$/,\n            password: true\n          },\n          valid: false\n        },\n        Phone: {\n          type: \"text\",\n          icon: \"phone\",\n          text: \"Phone\",\n          value: \"\",\n          maxLength: 10,\n          validation: {\n            required: true,\n            pattern: /^[0-9]*$/,\n            phone: true\n          },\n          valid: false\n        },\n        Url: {\n          type: \"text\",\n          icon: \"share\",\n          text: \"Url\",\n          value: \"\",\n          maxLength: 100,\n          validation: {\n            required: true,\n            pattern: /^/,\n            url: true\n          },\n          valid: false\n        }\n      },\n      checkbox: false,\n      trySend: false,\n      loading: false,\n      errorMessage: \"\",\n      update: false\n    };\n\n    this.onChangeHendler = (e, id) => {\n      this.setState({\n        trySend: false\n      });\n      const form = { ...this.state.form\n      };\n      const inputChanged = { ...form[id]\n      };\n      onChangeInput(e, inputChanged, form, id);\n      this.setState({\n        form: form\n      });\n    };\n\n    this.SignUp = () => {\n      const form = { ...this.state.form\n      };\n      var obj = onSignUp(form);\n      if (obj === null) obj = validCheckbox(this.state.checkbox);\n\n      if (obj !== null) {\n        this.setState({\n          form: form,\n          trySend: true,\n          errorMessage: obj.error\n        });\n      } else {\n        this.setState({\n          loading: true\n        });\n        const data = {};\n\n        for (let x in this.state.form) {\n          data[x] = this.state.form[x].value;\n        }\n\n        const path = `http://localhost:64430/api/Enterprises`;\n\n        if (this.props.location.pathname === '/enterprises/ProfileUpdate') {\n          data[\"C_id\"] = this.props.enterprise.C_id;\n          axios.put(path, data).then(x => {\n            alert(\"updated\");\n            this.props.history.replace('/enterprises/enterpCards');\n          }).catch(x => {\n            this.setState({\n              loading: false,\n              errorMessage: x.response.data.Message\n            });\n          });\n        } else {\n          axios.post(path, data).then(x => {\n            alert(\"Registered successfully\");\n            this.props.history.replace('/enterprises/login');\n          }).catch(x => {\n            this.setState({\n              loading: false,\n              errorMessage: x.response.data.Message\n            });\n          });\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.location.pathname === '/enterprises/ProfileUpdate') {\n      const form = { ...this.state.form\n      };\n      this.setState({\n        checkbox: true\n      });\n\n      for (let x in form) {\n        form[x].value = this.props.enterprise[x];\n        form[x].valid = true;\n      }\n\n      this.setState({\n        form: form\n      });\n    }\n  }\n\n  render() {\n    const array = [];\n\n    for (let x in this.state.form) {\n      array.push({\n        id: x,\n        config: this.state.form[x]\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      className: \"columnForm\",\n      style: {\n        maxWidth: 450,\n        height: '67%',\n        width: '37vw'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, this.props.location.pathname === '/enterprises/ProfileUpdate' ? \" Update profile\" : \"Sign up\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Icon.Group, {\n      size: \"huge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"user circle\",\n      size: \"large\",\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.SignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      stacked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, array.map((x, i) => {\n      return /*#__PURE__*/React.createElement(Form.Input, {\n        key: i,\n        iconPosition: \"left\",\n        maxLength: x.config.maxLength,\n        type: x.config.type,\n        onChange: event => this.onChangeHendler(event, x.id),\n        className: this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id,\n        placeholder: x.config.text + \"*\",\n        value: this.state.form[x.id].value,\n        icon: x.config.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 40\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Checkbox, {\n      style: {\n        display: this.props.location.pathname === '/enterprises/ProfileUpdate' ? 'none' : 'block',\n        marginBottom: \"2vh\"\n      },\n      checked: this.state.checkbox,\n      onChange: e => this.setState({\n        checkbox: !this.state.checkbox\n      }),\n      label: /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 136\n        }\n      }, \"I accept the \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/agreement\",\n        target: \"_blank\",\n        style: {\n          color: \"teal\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 156\n        }\n      }, \"Terms of Service\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    }, this.state.errorMessage), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    }, this.props.location.pathname === '/enterprises/ProfileUpdate' ? \"Update\" : \"Sign up\"))))), /*#__PURE__*/React.createElement(Dimmer, {\n      active: this.state.loading,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, \"Loading\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    enterprise: state.enterprise.enterprise\n  };\n};\n\nexport default connect(mapStateToProps, null)(EnterpriseSignUp);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/SignUp/SignUp.js"],"names":["React","Component","Button","Icon","Form","Grid","Header","Segment","Dimmer","Loader","Checkbox","axios","onChangeInput","onSignUp","validCheckbox","connect","EnterpriseSignUp","state","form","Name","type","icon","text","value","maxLength","validation","required","pattern","valid","Email","mail","Password","password","Phone","phone","Url","url","checkbox","trySend","loading","errorMessage","update","onChangeHendler","e","id","setState","inputChanged","SignUp","obj","error","data","x","path","props","location","pathname","enterprise","C_id","put","then","alert","history","replace","catch","response","Message","post","componentDidMount","render","array","push","config","height","maxWidth","width","map","i","event","display","marginBottom","color","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Button, Icon, Form, Grid, Header, Segment, Dimmer, Loader, Checkbox } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport onChangeInput from \"../../Service/onChangeInput\";\r\nimport onSignUp from \"../../Service/onSubmit\";\r\nimport validCheckbox from \"../../Service/validCheckbox\";\r\nimport { connect } from 'react-redux';\r\nimport \"../../Form.css\"\r\nclass EnterpriseSignUp extends Component {\r\n    state = {\r\n        form: {\r\n            Name: {\r\n                type: \"text\",\r\n                icon: \"user\",\r\n                text: \"Name\",\r\n                value: \"\",\r\n                maxLength: 40,\r\n                validation: {\r\n                    required: true,\r\n                    pattern: /^[a-zA-Z&.@ ]*$/,\r\n                },\r\n                valid: false,\r\n            },\r\n            Email: {\r\n                type: \"text\",\r\n                icon: \"envelope\",\r\n                text: \"E-mail address\",\r\n                value: \"\",\r\n                maxLength: 50,\r\n                validation: {\r\n                    required: true,\r\n                    pattern: /^[0-9a-zA-Z.+*%#!@]+$/,\r\n                    mail: true\r\n                },\r\n                valid: false,\r\n            },\r\n            Password: {\r\n                type: \"Password\",\r\n                icon: \"lock\",\r\n                text: \"Password\",\r\n                value: \"\",\r\n                maxLength: 15,\r\n                validation: {\r\n                    required: true,\r\n                    pattern: /^[0-9a-zA-Z]+$/,\r\n                    password: true\r\n                },\r\n                valid: false,\r\n            },\r\n            Phone: {\r\n                type: \"text\",\r\n                icon: \"phone\",\r\n                text: \"Phone\",\r\n                value: \"\",\r\n                maxLength: 10,\r\n                validation: {\r\n                    required: true,\r\n                    pattern: /^[0-9]*$/,\r\n                    phone: true\r\n                },\r\n                valid: false,\r\n            },\r\n            Url: {\r\n                type: \"text\",\r\n                icon: \"share\",\r\n                text: \"Url\",\r\n                value: \"\",\r\n                maxLength: 100,\r\n                validation: {\r\n                    required: true,\r\n                    pattern: /^/,\r\n                    url: true\r\n                },\r\n                valid: false,\r\n            },\r\n        },\r\n        checkbox: false,\r\n        trySend: false,\r\n        loading: false,\r\n        errorMessage: \"\",\r\n        update: false\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.location.pathname === '/enterprises/ProfileUpdate') {\r\n            const form = { ...this.state.form };\r\n            this.setState({ checkbox: true })\r\n            for (let x in form) {\r\n                form[x].value = this.props.enterprise[x]\r\n                form[x].valid = true\r\n            }\r\n            this.setState({ form: form })\r\n        }\r\n\r\n    }\r\n    onChangeHendler = (e, id) => {\r\n        this.setState({ trySend: false })\r\n        const form = { ...this.state.form };\r\n        const inputChanged = { ...form[id] };\r\n        onChangeInput(e, inputChanged, form, id);\r\n        this.setState({ form: form })\r\n    }\r\n\r\n    SignUp = () => {\r\n        const form = { ...this.state.form };\r\n        var obj = onSignUp(form)\r\n        if (obj === null)\r\n            obj = validCheckbox(this.state.checkbox)\r\n        if (obj !== null) {\r\n            this.setState({ form: form, trySend: true, errorMessage: obj.error });\r\n        }\r\n        else {\r\n            this.setState({ loading: true });\r\n            const data = {};\r\n            for (let x in this.state.form) {\r\n                data[x] = this.state.form[x].value;\r\n            }\r\n            const path = `http://localhost:64430/api/Enterprises`;\r\n            if (this.props.location.pathname === '/enterprises/ProfileUpdate') {\r\n                data[\"C_id\"] = this.props.enterprise.C_id;\r\n                axios.put(path, data).then(x => {\r\n                    alert(\"updated\")\r\n                    this.props.history.replace('/enterprises/enterpCards');\r\n                }).catch(x => {\r\n                    this.setState({ loading: false, errorMessage: x.response.data.Message });\r\n                });\r\n            }\r\n            else {\r\n                axios.post(path, data).then(x => {\r\n                    alert(\"Registered successfully\")\r\n                    this.props.history.replace('/enterprises/login');\r\n                }).catch(x => {\r\n                    this.setState({ loading: false, errorMessage: x.response.data.Message });\r\n                });\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const array = [];\r\n        for (let x in this.state.form) {\r\n            array.push({ id: x, config: this.state.form[x] })\r\n        }\r\n        return (<div>\r\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n                <Grid.Column className=\"columnForm\" style={{ maxWidth: 450, height: '67%', width: '37vw' }}>\r\n                    <Header as='h2' className=\"title\">\r\n                        {this.props.location.pathname === '/enterprises/ProfileUpdate' ? \" Update profile\" : \"Sign up\"}\r\n                        <br></br>\r\n                        <Icon.Group size='huge'>\r\n                            <Icon name='user circle' size='large' color='black' />\r\n                        </Icon.Group>\r\n                    </Header>\r\n                    <Form size='large' onSubmit={this.SignUp}>\r\n                        <Segment stacked>\r\n                            {array.map((x, i) => {\r\n                                return <Form.Input\r\n                                    key={i} iconPosition=\"left\"\r\n                                    maxLength={x.config.maxLength}\r\n                                    type={x.config.type}\r\n                                    onChange={event => this.onChangeHendler(event, x.id)}\r\n                                    className={this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id}\r\n                                    placeholder={x.config.text + \"*\"}\r\n                                    value={this.state.form[x.id].value}\r\n                                    icon={x.config.icon}>\r\n                                </Form.Input>\r\n                            })}\r\n                            <Checkbox\r\n                                style={{ display: this.props.location.pathname === '/enterprises/ProfileUpdate' ? 'none' : 'block', marginBottom: \"2vh\" }}\r\n                                checked={this.state.checkbox} onChange={e => this.setState({ checkbox: !this.state.checkbox })} label={<label>I accept the <a href=\"/agreement\" target=\"_blank\" style={{ color: \"teal\" }}>Terms of Service</a></label>} />\r\n                            <div id=\"message\">{this.state.errorMessage}</div>\r\n                            <Button type=\"submit\" color='teal' fluid size='large'>\r\n                                {this.props.location.pathname === '/enterprises/ProfileUpdate' ? \"Update\" : \"Sign up\"}\r\n                            </Button>\r\n                        </Segment>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n            <Dimmer active={this.state.loading} inverted>\r\n                <Loader size='large'>Loading</Loader>\r\n            </Dimmer>\r\n        </div >\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        enterprise: state.enterprise.enterprise\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(EnterpriseSignUp);\r\n"]},"metadata":{},"sourceType":"module"}