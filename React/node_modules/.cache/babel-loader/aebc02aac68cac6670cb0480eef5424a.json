{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\Lotery\\\\Lotery.js\";\nimport React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Input, Select, Form, Dropdown, Grid, Segment, Radio, Header, Image, TextArea, Popup, Button } from 'semantic-ui-react';\n\nclass Lotery extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      statusLotery: -1,\n      loteryName: \"\",\n      loteryTypes: [{\n        key: 'Discount',\n        text: 'Discount',\n        value: 'Discount'\n      }, {\n        key: \"Plus Free\",\n        text: \"Plus Free\",\n        value: \"Plus Free\"\n      }, {\n        key: \"X in Y\",\n        text: \"X in Y\",\n        value: \"X in Y\"\n      }],\n      sumTypes: [{\n        key: '%',\n        text: '%',\n        value: '%'\n      }, {\n        key: '$',\n        text: '$',\n        value: '$'\n      }],\n      form: {\n        loteryType: \"Discount\",\n        sum: \"\",\n        sumType: \"\",\n        num1: \"\",\n        num2: \"\",\n        addition: \"\",\n        expireDate: \"\"\n      }\n    };\n\n    this.hanleSelctOnChange = (event, value) => {\n      const form = { ...this.state.form\n      };\n      form.loteryType = value;\n      form.expireDate = \"\"; // this.setState({ loteryType: value });\n\n      this.setState({\n        form: form\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        Width: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      content: \"Select Your Lotery Type\",\n      trigger: /*#__PURE__*/React.createElement(Form.Field, {\n        control: Select,\n        options: this.state.loteryTypes,\n        defaultValue: \"Discount\",\n        onChange: (event, {\n          value\n        }) => this.hanleSelctOnChange(event, value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      inline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, this.state.form.loteryType === \"Discount\" ? /*#__PURE__*/React.createElement(Input, {\n      control: Input,\n      type: \"number\",\n      labelPosition: \"right\",\n      label: /*#__PURE__*/React.createElement(Dropdown, {\n        options: this.state.sumTypes,\n        defaultValue: \"$\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 48\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 37\n      }\n    }) : this.state.form.loteryType === \"Plus Free\" ? /*#__PURE__*/React.createElement(Form.Field, {\n      inline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 45\n      }\n    }), \" + \", /*#__PURE__*/React.createElement(Form.Input, {\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 50\n      }\n    })) : /*#__PURE__*/React.createElement(Form.Field, {\n      inline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 45\n      }\n    }), \" In \", /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 51\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Field, {\n      control: Input,\n      type: \"date\",\n      value: this.state.form.expireDate,\n      placeholder: \"expireDate\",\n      onChange: (e, {\n        value\n      }) => {\n        const form = { ...this.state.form\n        };\n        form[\"expireDate\"] = value;\n        this.setState({\n          form: form\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      control: TextArea,\n      type: \"text\",\n      placeholder: \"Addition\",\n      maxLength: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    })))))));\n  }\n\n}\n\nexport default Lotery;","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/Lotery/Lotery.js"],"names":["React","Component","Input","Select","Form","Dropdown","Grid","Segment","Radio","Header","Image","TextArea","Popup","Button","Lotery","state","statusLotery","loteryName","loteryTypes","key","text","value","sumTypes","form","loteryType","sum","sumType","num1","num2","addition","expireDate","hanleSelctOnChange","event","setState","render","Width","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Input, Select, Form, Dropdown, Grid, Segment, Radio, Header, Image, TextArea, Popup, Button } from 'semantic-ui-react';\r\nclass Lotery extends Component {\r\n    state = {\r\n        statusLotery: -1,\r\n        loteryName: \"\",\r\n        loteryTypes: [\r\n            { key: 'Discount', text: 'Discount', value: 'Discount' },\r\n            { key: \"Plus Free\", text: \"Plus Free\", value: \"Plus Free\" },\r\n            { key: \"X in Y\", text: \"X in Y\", value: \"X in Y\" }],\r\n        sumTypes: [\r\n            { key: '%', text: '%', value: '%' },\r\n            { key: '$', text: '$', value: '$' }\r\n        ],\r\n        form: {\r\n            loteryType: \"Discount\",\r\n            sum: \"\",\r\n            sumType: \"\",\r\n            num1: \"\",\r\n            num2: \"\",\r\n            addition: \"\",\r\n            expireDate: \"\",\r\n        },\r\n\r\n    }\r\n    hanleSelctOnChange = (event, value) => {\r\n        const form = { ...this.state.form }\r\n        form.loteryType = value;\r\n        form.expireDate = \"\";\r\n        // this.setState({ loteryType: value });\r\n        this.setState({ form: form });\r\n\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Segment>\r\n                <Grid>\r\n                    <Grid.Column style={{ Width: 450 }}>\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Popup content=\"Select Your Lotery Type\" trigger={\r\n                                    <Form.Field\r\n                                        control={Select}\r\n                                        options={this.state.loteryTypes}\r\n                                        defaultValue=\"Discount\"\r\n                                        onChange={(event, { value }) => this.hanleSelctOnChange(event, value)}\r\n                                    />\r\n                                }\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group inline>\r\n                                {this.state.form.loteryType === \"Discount\" ?\r\n                                    <Input\r\n                                        control={Input}\r\n                                        type=\"number\"\r\n                                        labelPosition='right'\r\n                                        label={<Dropdown options={this.state.sumTypes} defaultValue={\"$\"} />}\r\n                                    />\r\n                                    :\r\n                                    this.state.form.loteryType === \"Plus Free\" ?\r\n                                        <Form.Field inline>\r\n                                            {/* <label>fgsdvgfsdg</label> */}\r\n                                            <Form.Input \r\n                                                type=\"number\"\r\n                                            /> + <Form.Input \r\n                                                type=\"number\"\r\n                                            />\r\n                                        </Form.Field> :\r\n                                        <Form.Field inline>\r\n                                            <Input\r\n                                                type=\"number\"\r\n                                            /> In <Input\r\n                                                type=\"number\"\r\n                                            />\r\n                                        </Form.Field>}\r\n                            </Form.Group>\r\n                            <Form.Field\r\n                                control={Input}\r\n                                type=\"date\"\r\n                                value={this.state.form.expireDate}\r\n                                placeholder=\"expireDate\"\r\n                                onChange={(e, { value }) => {\r\n                                    const form = { ...this.state.form }\r\n                                    form[\"expireDate\"] = value\r\n                                    this.setState({ form: form })\r\n                                }}\r\n                            />\r\n                            <Form.Group>\r\n                                <Form.Field\r\n                                    control={TextArea}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Addition\"\r\n                                    maxLength={50}\r\n                                /></Form.Group>\r\n                        </Form>\r\n                        {/* <Form>\r\n                        <Form.Group>\r\n                            <Form.Select\r\n                                label=\"Lottery Type\"\r\n                                options={this.state.loteryTypes}\r\n                                defaultValue=\"Discount\"\r\n                                onChange={(event, { value }) => this.hanleSelctOnChange(event, value)}\r\n                            />\r\n                            <Form.Input label=\"Expire Date\" type=\"number\" value={this.state.form.expireDate} placeholder=\"expireDate\"\r\n                                onChange={(e, { value }) => {\r\n                                    const form = { ...this.state.form }\r\n                                    form[\"expireDate\"] = value\r\n                                    this.setState({ form: form })\r\n                                }}\r\n                                value={this.state.form.expireDate}\r\n                            // onFocus={(e) => e.target.type = 'date'}\r\n                            >\r\n                            </Form.Input>\r\n                            {this.state.form.loteryType === \"Discount\" ?\r\n                                <Form.Input label=\"Discount Sum\" type=\"number\"\r\n                                    action={<Form.Dropdown options={this.state.sumTypes} defaultValue={\"$\"} />} /> :\r\n                                this.state.form.loteryType === \"Plus Free\" ?\r\n                                    <Form.Input type=\"number\"></Form.Input> :\r\n                                    <div><Form.Input></Form.Input>In<Form.Input></Form.Input></div>}\r\n                            <Form.Input type=\"text\" placeholder=\"Addition\" maxLength={50}></Form.Input>\r\n                        </Form.Group>\r\n                    </Form> */}</Grid.Column>\r\n                </Grid></Segment>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Lotery;\r\n"]},"metadata":{},"sourceType":"module"}