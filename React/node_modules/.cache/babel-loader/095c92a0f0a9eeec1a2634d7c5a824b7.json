{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\NewPassword\\\\NewPassword.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { NavLink, withRouter, useLocation, Prompt } from 'react-router-dom';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass newPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      password: \"\",\n      confirm_password: \"\"\n    };\n\n    this.userPassword = () => {\n      console.log(\"this.props.location.password\");\n\n      if (this.state.password === this.state.confirm_password) {\n        console.log(this.props);\n        axios.get(`http://localhost:64430/api/Users?password=${this.state.password}`).then(x => {\n          console.log(x.data);\n          axios.post(`http://localhost:64430/api/Users?password=${this.state.password} &userId=${this.props.user.C_id}`).then(y => {\n            this.props.selectUser(y.data);\n            console.log(y.data);\n            this.props.history.replace(\"/users/login\");\n          }).catch(y => console.log(y.response.data.Message));\n        }).catch(x => document.getElementById(\"message\").innerHTML = x.response.data.Message);\n      } else document.getElementById(\"message\").innerHTML = \"Incompatible passwords\";\n    };\n\n    this.enterprisePassword = () => {\n      if (this.state.password === this.state.confirm_password) {\n        console.log(this.props);\n        axios.get(`http://localhost:64430/api/Enterprises?password=${this.state.password}`).then(x => {\n          console.log(x.data);\n          axios.post(`http://localhost:64430/api/Enterprises?password=${this.state.password} &enterpId=${this.props.enterprise.C_id}`).then(y => {\n            this.props.selectEnterprise(y.data);\n            console.log(y.data);\n            this.props.history.replace(\"/enterprises/login\");\n          }).catch(y => console.log(y.response.data.Message));\n        }).catch(x => document.getElementById(\"message\").innerHTML = x.response.data.Message);\n      } else document.getElementById(\"message\").innerHTML = \"Incompatible passwords\";\n    };\n  }\n\n  render() {\n    console.log(this.props.location.search.params);\n    return /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: \"/Images/logo.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }), \" New Password\"), /*#__PURE__*/React.createElement(Form, {\n      size: \"tiny\",\n      onSubmit: this.props.location.pathname === '/users/newpassword' ? this.userPassword : this.enterprisePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      stacked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      className: \"password\",\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"password\",\n      required: true // error\n      ,\n      type: \"password\",\n      onChange: event => this.setState({\n        password: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      className: \"confirm_password\",\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"confirm password\",\n      type: \"password\",\n      required: true,\n      onChange: event => this.setState({\n        confirm_password: event.target.value\n      }) // className={!value.valid?'error':null}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"message\",\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, \"Change Password\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.user,\n    enterprise: state.enterprise.enterprise\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectUser: user => dispatch({\n      type: \"SELECT_USER\",\n      payload: user\n    }),\n    selectEnterprise: enterprise => dispatch({\n      type: \"SELECT_ENTERPRISE\",\n      payload: enterprise\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(newPassword);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/NewPassword/NewPassword.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Message","Segment","NavLink","withRouter","useLocation","Prompt","axios","connect","newPassword","state","password","confirm_password","userPassword","console","log","props","get","then","x","data","post","user","C_id","y","selectUser","history","replace","catch","response","document","getElementById","innerHTML","enterprisePassword","enterprise","selectEnterprise","render","location","search","params","height","maxWidth","pathname","event","setState","target","value","color","mapStateToProps","mapDispatchToProps","dispatch","type","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,KAArC,EAA4CC,OAA5C,EAAqDC,OAArD,QAAoE,mBAApE;AACA,OAAO,kCAAP;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,WAA9B,EAA2CC,MAA3C,QAAyD,kBAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,WAAN,SAA0Bd,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCe,KADgC,GACxB;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,gBAAgB,EAAE;AAFd,KADwB;;AAAA,SAKhCC,YALgC,GAKjB,MAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;;AACA,UAAI,KAAKL,KAAL,CAAWC,QAAX,KAAwB,KAAKD,KAAL,CAAWE,gBAAvC,EAAyD;AACrDE,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACAT,QAAAA,KAAK,CAACU,GAAN,CAAW,6CAA4C,KAAKP,KAAL,CAAWC,QAAS,EAA3E,EAA8EO,IAA9E,CAAmFC,CAAC,IAAI;AACpFL,UAAAA,OAAO,CAACC,GAAR,CAAYI,CAAC,CAACC,IAAd;AACAb,UAAAA,KAAK,CAACc,IAAN,CAAY,6CAA4C,KAAKX,KAAL,CAAWC,QAAS,YAAW,KAAKK,KAAL,CAAWM,IAAX,CAAgBC,IAAK,EAA5G,EAA+GL,IAA/G,CAAoHM,CAAC,IAAE;AACnH,iBAAKR,KAAL,CAAWS,UAAX,CAAsBD,CAAC,CAACJ,IAAxB;AACAN,YAAAA,OAAO,CAACC,GAAR,CAAYS,CAAC,CAACJ,IAAd;AACA,iBAAKJ,KAAL,CAAWU,OAAX,CAAmBC,OAAnB,CAA2B,cAA3B;AACH,WAJD,EAIGC,KAJH,CAISJ,CAAC,IAAEV,OAAO,CAACC,GAAR,CAAYS,CAAC,CAACK,QAAF,CAAWT,IAAX,CAAgBnB,OAA5B,CAJZ;AAKH,SAPD,EAOG2B,KAPH,CAOST,CAAC,IAAEW,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,SAAnC,GAA8Cb,CAAC,CAACU,QAAF,CAAWT,IAAX,CAAgBnB,OAP1E;AAQH,OAVD,MAYI6B,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,SAAnC,GAA+C,wBAA/C;AACP,KApB+B;;AAAA,SAqBhCC,kBArBgC,GAqBX,MAAM;AACvB,UAAI,KAAKvB,KAAL,CAAWC,QAAX,KAAwB,KAAKD,KAAL,CAAWE,gBAAvC,EAAyD;AACrDE,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACAT,QAAAA,KAAK,CAACU,GAAN,CAAW,mDAAkD,KAAKP,KAAL,CAAWC,QAAS,EAAjF,EAAoFO,IAApF,CAAyFC,CAAC,IAAI;AAC1FL,UAAAA,OAAO,CAACC,GAAR,CAAYI,CAAC,CAACC,IAAd;AACAb,UAAAA,KAAK,CAACc,IAAN,CAAY,mDAAkD,KAAKX,KAAL,CAAWC,QAAS,cAAa,KAAKK,KAAL,CAAWkB,UAAX,CAAsBX,IAAK,EAA1H,EAA6HL,IAA7H,CAAkIM,CAAC,IAAE;AACjI,iBAAKR,KAAL,CAAWmB,gBAAX,CAA4BX,CAAC,CAACJ,IAA9B;AACAN,YAAAA,OAAO,CAACC,GAAR,CAAYS,CAAC,CAACJ,IAAd;AACA,iBAAKJ,KAAL,CAAWU,OAAX,CAAmBC,OAAnB,CAA2B,oBAA3B;AACH,WAJD,EAIGC,KAJH,CAISJ,CAAC,IAAEV,OAAO,CAACC,GAAR,CAAYS,CAAC,CAACK,QAAF,CAAWT,IAAX,CAAgBnB,OAA5B,CAJZ;AAKH,SAPD,EAOG2B,KAPH,CAOST,CAAC,IAAEW,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,SAAnC,GAA8Cb,CAAC,CAACU,QAAF,CAAWT,IAAX,CAAgBnB,OAP1E;AAQH,OAVD,MAYI6B,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,SAAnC,GAA+C,wBAA/C;AACP,KAnC+B;AAAA;;AAoChCI,EAAAA,MAAM,GAAG;AACLtB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWqB,QAAX,CAAoBC,MAApB,CAA2BC,MAAvC;AACA,wBAEI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAhC;AAAqD,MAAA,aAAa,EAAC,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,KAAK,EAAC,MAAtB;AAA6B,MAAA,SAAS,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,kBADJ,eAII,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,QAAQ,EAAE,KAAKzB,KAAL,CAAWqB,QAAX,CAAoBK,QAApB,KAAiC,oBAAjC,GAAyD,KAAK7B,YAA9D,GAA+E,KAAKoB,kBAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,OAAO,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,UAAtB;AACI,MAAA,KAAK,MADT;AACU,MAAA,IAAI,EAAC,MADf;AAEI,MAAA,YAAY,EAAC,MAFjB;AAGI,MAAA,WAAW,EAAC,UAHhB;AAII,MAAA,QAAQ,MAJZ,CAKI;AALJ;AAMI,MAAA,IAAI,EAAC,UANT;AAOI,MAAA,QAAQ,EAAGU,KAAD,IAAW,KAAKC,QAAL,CAAc;AAAEjC,QAAAA,QAAQ,EAAEgC,KAAK,CAACE,MAAN,CAAaC;AAAzB,OAAd,CAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAUI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,kBAAtB;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,YAAY,EAAC,MAHjB;AAII,MAAA,WAAW,EAAC,kBAJhB;AAKI,MAAA,IAAI,EAAC,UALT;AAMI,MAAA,QAAQ,MANZ;AAOI,MAAA,QAAQ,EAAGH,KAAD,IAAW,KAAKC,QAAL,CAAc;AAAEhC,QAAAA,gBAAgB,EAAE+B,KAAK,CAACE,MAAN,CAAaC;AAAjC,OAAd,CAPzB,CAQA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,eAoBI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,eAqBI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAuB,MAAA,KAAK,EAAC,MAA7B;AAAoC,MAAA,KAAK,MAAzC;AAA0C,MAAA,IAAI,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBArBJ,CADJ,CAJJ,CADJ,CAFJ;AAsCH;;AA5E+B;;AA8EpC,MAAMC,eAAe,GAAGtC,KAAK,IAAI;AAC7B,SAAO;AACLY,IAAAA,IAAI,EAAEZ,KAAK,CAACY,IAAN,CAAWA,IADZ;AAELY,IAAAA,UAAU,EAAExB,KAAK,CAACwB,UAAN,CAAiBA;AAFxB,GAAP;AAID,CALH;;AAME,MAAMe,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLzB,IAAAA,UAAU,EAAGH,IAAD,IAAU4B,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAE9B;AAAhC,KAAD,CADzB;AAELa,IAAAA,gBAAgB,EAAGD,UAAD,IAAgBgB,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,mBAAR;AAA6BC,MAAAA,OAAO,EAAElB;AAAtC,KAAD;AAFrC,GAAP;AAID,CALD;;AAOF,eAAe1B,OAAO,CAACwC,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CxC,WAA5C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { NavLink, withRouter, useLocation, Prompt } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux'\r\n\r\nclass newPassword extends Component {\r\n    state = {\r\n        password: \"\",\r\n        confirm_password: \"\"\r\n    }\r\n    userPassword = () => {\r\n        console.log(\"this.props.location.password\");\r\n        if (this.state.password === this.state.confirm_password) {\r\n            console.log(this.props);\r\n            axios.get(`http://localhost:64430/api/Users?password=${this.state.password}`).then(x => {\r\n                console.log(x.data);\r\n                axios.post(`http://localhost:64430/api/Users?password=${this.state.password} &userId=${this.props.user.C_id}`).then(y=>{\r\n                    this.props.selectUser(y.data);\r\n                    console.log(y.data);\r\n                    this.props.history.replace(\"/users/login\");\r\n                }).catch(y=>console.log(y.response.data.Message))\r\n            }).catch(x=>document.getElementById(\"message\").innerHTML= x.response.data.Message)\r\n        }\r\n        else\r\n            document.getElementById(\"message\").innerHTML = \"Incompatible passwords\";\r\n    }\r\n    enterprisePassword = () => {\r\n        if (this.state.password === this.state.confirm_password) {\r\n            console.log(this.props);\r\n            axios.get(`http://localhost:64430/api/Enterprises?password=${this.state.password}`).then(x => {\r\n                console.log(x.data);\r\n                axios.post(`http://localhost:64430/api/Enterprises?password=${this.state.password} &enterpId=${this.props.enterprise.C_id}`).then(y=>{\r\n                    this.props.selectEnterprise(y.data);\r\n                    console.log(y.data);\r\n                    this.props.history.replace(\"/enterprises/login\");\r\n                }).catch(y=>console.log(y.response.data.Message))\r\n            }).catch(x=>document.getElementById(\"message\").innerHTML= x.response.data.Message)\r\n        }\r\n        else\r\n            document.getElementById(\"message\").innerHTML = \"Incompatible passwords\";\r\n    }\r\n    render() {\r\n        console.log(this.props.location.search.params);\r\n        return (\r\n        \r\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Header as='h2' color='teal' textAlign='center'>\r\n                        <Image src='/Images/logo.png' /> New Password\r\n        </Header>\r\n                    <Form size='tiny' onSubmit={this.props.location.pathname === '/users/newpassword' ? (this.userPassword) : (this.enterprisePassword)}>\r\n                        <Segment stacked>\r\n                            <Form.Input className=\"password\"\r\n                                fluid icon='lock'\r\n                                iconPosition='left'\r\n                                placeholder='password'\r\n                                required\r\n                                // error\r\n                                type='password'\r\n                                onChange={(event) => this.setState({ password: event.target.value })}\r\n                            />\r\n                            <Form.Input className=\"confirm_password\"\r\n                                fluid\r\n                                icon='lock'\r\n                                iconPosition='left'\r\n                                placeholder='confirm password'\r\n                                type='password'\r\n                                required\r\n                                onChange={(event) => this.setState({ confirm_password: event.target.value })}\r\n                            // className={!value.valid?'error':null}\r\n                            />\r\n                            <div id=\"message\" style={{ color: \"red\" }}></div>\r\n                            <Button type=\"submit\"  color='teal' fluid size='large' >\r\n                                Change Password\r\n  </Button>\r\n\r\n                        </Segment>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n      user: state.user.user,\r\n      enterprise: state.enterprise.enterprise\r\n    }\r\n  }\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      selectUser: (user) => dispatch({ type: \"SELECT_USER\", payload: user }),\r\n      selectEnterprise: (enterprise) => dispatch({ type: \"SELECT_ENTERPRISE\", payload: enterprise }),\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(newPassword);"]},"metadata":{},"sourceType":"module"}