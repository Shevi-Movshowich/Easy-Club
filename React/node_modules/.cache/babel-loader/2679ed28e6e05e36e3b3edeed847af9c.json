{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\NewCard\\\\NewCard.js\";\nimport React, { Component } from 'react';\nimport Lotery from '../Lotery/Lotery';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Checkbox, Select, Input, Popup, Divider } from 'semantic-ui-react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { InputFile } from 'semantic-ui-react-input-file';\nimport { Route, Switch, Redirect, Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { selectCard } from \"../../../Store/actions/EnterpriseAction\";\nimport axios from 'axios'; // import convertImg from \"../../../convertImg\"\n\nclass NewCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        cost: {\n          icon: 'dollar sign',\n          text: 'Card Price',\n          type: 'text',\n          maxLength: 7\n        }\n      },\n      type: \"\",\n      img: null,\n      fileName: \"\"\n    };\n\n    this.hanleSelctOnChange = (event, {\n      value\n    }) => {\n      console.log(value); //להמיר לסטרינג\n\n      console.log(\"ghhj\");\n      this.setState({\n        type: value\n      });\n      console.log(this.state.type);\n    };\n\n    this.click = () => {};\n\n    this.convertImg = event => {\n      const file = event.target.files[0];\n      var name = file.name;\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      console.log(reader);\n\n      reader.onload = () => {\n        this.setState({\n          fileName: name\n        });\n        this.setState({\n          img: String(reader.result)\n        });\n      };\n    };\n  }\n\n  render() {\n    const array = [];\n\n    for (let x in this.state.form) {\n      array.push({\n        id: x,\n        config: this.state.form[x]\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"1vw\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        width: '30vw',\n        marginLeft: '35vw',\n        marginTop: '5vh',\n        textAlign: 'center',\n        fontSize: '180%',\n        color: 'rgb(40, 44, 52)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"New Card\"), /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Card Details\"), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, array.map((x, i) => {\n      return /*#__PURE__*/React.createElement(Form.Input, {\n        label: \"Price For Customer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 44\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        key: i,\n        label: \"$\",\n        labelPosition: \"right\",\n        maxLength: x.config.maxLength,\n        type: x.config.type // {/* // onChange={event => this.onChangeHendler(event, x.id)}\n        // // className={this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id} */}\n        ,\n        placeholder: x.config.text + \"*\",\n        step: x.config.step,\n        checked: x.config.checked // {/* // onFocus={(e) => x.config.birthdate===true?e.target.type = 'date':\"text\"}  */}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 41\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"Count Points\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      content: \"For example 5 point =1$\",\n      trigger: /*#__PURE__*/React.createElement(Input, {\n        type: \"number\",\n        label: \" = 1 $\",\n        labelPosition: \"right\",\n        placeholder: \"Count Points\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 45\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Select, {\n      label: \"Card Type\",\n      placeholder: \"Type\",\n      options: [{\n        key: \"Basic\",\n        text: 'Basic card',\n        value: 'Basic card'\n      }, {\n        key: \"Primium\",\n        text: 'Primium card',\n        value: 'Primium card'\n      }],\n      onChange: this.hanleSelctOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"Enterprise Image\",\n      style: {\n        width: \"1000px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputFile, {\n      class: \".ui.form .field .ui.input\",\n      style: {\n        width: \"100vh\"\n      },\n      button: {\n        content: this.state.fileName\n      },\n      input: {\n        id: 'input-control-id',\n        onChange: this.convertImg,\n        name: this.state.fileName,\n        style: {\n          boxSizing: \"100vh\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 37\n      }\n    })))))));\n  }\n\n} // const mapStateToProps = state => {\n//     return {\n//       enterprise: state.enterprise.enterprise\n//     }\n//   }\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectCard: card => dispatch(selectCard(card))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewCard);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/NewCard/NewCard.js"],"names":["React","Component","Lotery","Button","Form","Grid","Header","Image","Message","Segment","Checkbox","Select","Input","Popup","Divider","NavLink","withRouter","InputFile","Route","Switch","Redirect","Router","connect","selectCard","axios","NewCard","state","form","cost","icon","text","type","maxLength","img","fileName","hanleSelctOnChange","event","value","console","log","setState","click","convertImg","file","target","files","name","reader","FileReader","readAsDataURL","onload","String","result","render","array","x","push","id","config","marginLeft","width","marginTop","textAlign","fontSize","color","onSubmitHandler","map","i","step","checked","key","content","onChange","style","boxSizing","mapDispatchToProps","dispatch","card"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Lotery from '../Lotery/Lotery';\r\nimport { Button, Form, Grid, Header, Image, Message, Segment, Checkbox, Select, Input, Popup, Divider } from 'semantic-ui-react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { InputFile } from 'semantic-ui-react-input-file';\r\nimport { Route, Switch, Redirect, Router } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { selectCard } from \"../../../Store/actions/EnterpriseAction\"\r\nimport axios from 'axios';\r\n// import convertImg from \"../../../convertImg\"\r\nclass NewCard extends Component {\r\n    state = {\r\n        form: {\r\n            cost: {\r\n                icon: 'dollar sign',\r\n                text: 'Card Price',\r\n                type: 'text',\r\n                maxLength: 7,\r\n            },\r\n        },\r\n        type: \"\",\r\n        img: null,\r\n        fileName: \"\",\r\n    }\r\n    hanleSelctOnChange = (event, { value }) => {\r\n        console.log(value);\r\n        //להמיר לסטרינג\r\n        console.log(\"ghhj\")\r\n        this.setState({ type: value })\r\n        console.log(this.state.type)\r\n    }\r\n    click = () => {\r\n    }\r\n    convertImg = (event) => {\r\n        const file = event.target.files[0];\r\n        var name = file.name;\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        console.log(reader)\r\n        reader.onload = () => {\r\n            this.setState({ fileName: name })\r\n            this.setState({ img: String(reader.result) })\r\n        }\r\n    }\r\n    render() {\r\n        const array = [];\r\n        for (let x in this.state.form) {\r\n            array.push({ id: x, config: this.state.form[x] })\r\n        }\r\n        return (<div style={{ marginLeft: \"1vw\" }}>\r\n            <h1 style={{ width: '30vw', marginLeft: '35vw', marginTop: '5vh', textAlign: 'center', fontSize: '180%', color: 'rgb(40, 44, 52)' }}>New Card</h1>\r\n            <Header as='h2' color='teal' textAlign='left'>Card Details</Header>\r\n            <Divider></Divider>\r\n            <Form onSubmit={this.onSubmitHandler}>\r\n                <Grid>\r\n                    <Grid.Column>\r\n                        {/* <Grid.Row> */}\r\n                            <Form.Group widths=\"equal\">\r\n                                {array.map((x, i) => {\r\n                                    return <Form.Input label=\"Price For Customer\">\r\n                                        <Input\r\n                                            key={i}\r\n                                            label=\"$\"\r\n                                            labelPosition=\"right\"\r\n                                            maxLength={x.config.maxLength}\r\n                                            type={x.config.type}\r\n                                            // {/* // onChange={event => this.onChangeHendler(event, x.id)}\r\n                                            // // className={this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id} */}\r\n                                            placeholder={x.config.text + \"*\"}\r\n                                            step={x.config.step}\r\n                                            checked={x.config.checked}\r\n                                        // {/* // onFocus={(e) => x.config.birthdate===true?e.target.type = 'date':\"text\"}  */}\r\n                                        />\r\n                                    </Form.Input>\r\n                                })}\r\n                                <Form.Input label=\"Count Points\">\r\n                                    <Popup\r\n                                        content=\"For example 5 point =1$\"\r\n                                        trigger={\r\n                                            <Input type=\"number\" label=' = 1 $' labelPosition=\"right\" placeholder='Count Points' />\r\n                                        }\r\n                                    />\r\n                                </Form.Input>\r\n                                <Form.Select\r\n                                    label=\"Card Type\"\r\n                                    placeholder=\"Type\"\r\n                                    options={[{ key: \"Basic\", text: 'Basic card', value: 'Basic card' }, { key: \"Primium\", text: 'Primium card', value: 'Primium card' }]}\r\n                                    onChange={this.hanleSelctOnChange}\r\n                                ></Form.Select>\r\n                                <Form.Input label=\"Enterprise Image\" style={{width:\"1000px\"}}>\r\n                                    <InputFile class=\".ui.form .field .ui.input\" style={{width:\"100vh\"}} \r\n                                        button={{\r\n                                            content: this.state.fileName,\r\n                                        }}\r\n                                        input={{\r\n                                            id: 'input-control-id',\r\n                                            onChange: this.convertImg,\r\n                                            name: this.state.fileName,\r\n                                            style:{boxSizing:\"100vh\"}\r\n                                        }}\r\n                                    /></Form.Input>\r\n                            </Form.Group>\r\n                             {/* </Grid.Row> */}\r\n                             </Grid.Column>\r\n                             </Grid>\r\n            </Form>\r\n            {/* </Grid.Column>\r\n            </Grid> */}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//       enterprise: state.enterprise.enterprise\r\n//     }\r\n//   }\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectCard: (card) => dispatch(selectCard(card)),\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(NewCard);"]},"metadata":{},"sourceType":"module"}