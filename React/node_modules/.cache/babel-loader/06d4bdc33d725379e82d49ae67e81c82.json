{"ast":null,"code":"import _classCallCheck from\"D:\\\\Programming\\\\easy-club\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Programming\\\\easy-club\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Programming\\\\easy-club\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Programming\\\\easy-club\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Button,Form,Grid,Header,Image,Message,Segment}from'semantic-ui-react';import'semantic-ui-css/semantic.min.css';import{NavLink,withRouter,useLocation,Prompt}from'react-router-dom';import axios from'axios';import{connect}from'react-redux';import moment from'moment';var newPassword=/*#__PURE__*/function(_Component){_inherits(newPassword,_Component);var _super=_createSuper(newPassword);function newPassword(){var _this;_classCallCheck(this,newPassword);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={password:\"\",confirm_password:\"\"};_this.changePassword=function(){document.getElementById(\"message\").innerHTML=\"\";if(_this.state.confirm_password===_this.state.password){var search=_this.props.location.search;console.log(search);var params=new URLSearchParams(search);console.log(params);var key=params.get('key');var date=params.get('date');if(_this.props.location.pathname=='/users/newpassword'){axios.post(\"http://localhost:64430/api/Users?key=\".concat(key,\"&password=\").concat(_this.state.password)).then(function(x){console.log(x.data);document.getElementById(\"message\").innerHTML=\"the password was changed successfully\";}).catch(function(x){return document.getElementById(\"message\").innerHTML=x.response.data.Message;});}else{axios.post(\"http://localhost:64430/api/Enterprises?key=\".concat(key,\"&password=\").concat(_this.state.password)).then(function(x){console.log(x.data);document.getElementById(\"message\").innerHTML=x.data;document.getElementById(\"message\").innerHTML=\"the password was changed successfully\";}).catch(function(x){return document.getElementById(\"message\").innerHTML=x.response.data.Message;});}}else document.getElementById(\"message\").innerHTML=\"confirm password is incorrect\";};return _this;}_createClass(newPassword,[{key:\"componentWillMount\",value:function componentWillMount(){var search=this.props.location.search;console.log(search);var params=new URLSearchParams(search);var date=params.get('date');console.log(date);this.props.selectSendDate(date);// console.log(moment(date.tostring()).format(\"dd.mm.yyyy hh:MM:ss\"));\n// const today = new Date(date.toString());\n// console.log(new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(today));\n}},{key:\"render\",// onChangeHandler = (event) => {\n//     \n//     if (this.state.confirm_password!==this.state.password)\n//         event.target.style.borderColor='red'\n// }\nvalue:function render(){var _this2=this;return/*#__PURE__*/React.createElement(Grid,{textAlign:\"center\",style:{height:'100vh'},verticalAlign:\"middle\"},/*#__PURE__*/React.createElement(Grid.Column,{style:{maxWidth:450}},/*#__PURE__*/React.createElement(Header,{as:\"h2\",color:\"teal\",textAlign:\"center\"},/*#__PURE__*/React.createElement(Image,{src:\"/Images/logo.png\"}),\" New Password\"),/*#__PURE__*/React.createElement(Form,{size:\"tiny\",onSubmit:this.changePassword},/*#__PURE__*/React.createElement(Segment,{stacked:true},/*#__PURE__*/React.createElement(Form.Input,{className:\"password\",fluid:true,icon:\"lock\",iconPosition:\"left\",placeholder:\"password\",required:true// error\n,type:\"password\",onChange:function onChange(event){return _this2.setState({password:event.target.value});}}),/*#__PURE__*/React.createElement(Form.Input,{className:\"confirm_password\",fluid:true,icon:\"lock\",iconPosition:\"left\",placeholder:\"confirm password\",type:\"password\",required:true,onChange:function onChange(event){return _this2.setState({confirm_password:event.target.value});}// className={!value.valid?'error':null}\n}),/*#__PURE__*/React.createElement(\"div\",{id:\"message\",style:{color:\"red\"}}),/*#__PURE__*/React.createElement(Button,{type:\"submit\",color:\"teal\",fluid:true,size:\"large\"},\"Change Password\")))));}}]);return newPassword;}(Component);var mapStateToProps=function mapStateToProps(state){return{user:state.user.user,enterprise:state.enterprise.enterprise,date:state.user.user.SendDate};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{selectSendDate:function selectSendDate(date){return dispatch({type:\"SELECT_SEND_DATE\",payload:date});},selectUser:function selectUser(user){return dispatch({type:\"SELECT_USER\",payload:user});},selectEnterprise:function selectEnterprise(enterprise){return dispatch({type:\"SELECT_ENTERPRISE\",payload:enterprise});}};};export default connect(mapStateToProps,mapDispatchToProps)(newPassword);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/NewPassword/NewPassword.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Message","Segment","NavLink","withRouter","useLocation","Prompt","axios","connect","moment","newPassword","state","password","confirm_password","changePassword","document","getElementById","innerHTML","search","props","location","console","log","params","URLSearchParams","key","get","date","pathname","post","then","x","data","catch","response","selectSendDate","height","maxWidth","event","setState","target","value","color","mapStateToProps","user","enterprise","SendDate","mapDispatchToProps","dispatch","type","payload","selectUser","selectEnterprise"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { NavLink, withRouter, useLocation, Prompt } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nimport moment from 'moment';\r\n\r\nclass newPassword extends Component {\r\n    state = {\r\n        password: \"\",\r\n        confirm_password: \"\",\r\n    }\r\n    componentWillMount() {\r\n        let search = this.props.location.search;\r\n        console.log(search);\r\n        let params = new URLSearchParams(search);\r\n        let date = params.get('date');\r\n        console.log(date);\r\n        this.props.selectSendDate(date);\r\n        // console.log(moment(date.tostring()).format(\"dd.mm.yyyy hh:MM:ss\"));\r\n        // const today = new Date(date.toString());\r\n        // console.log(new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(today));\r\n    }\r\n    changePassword = () => {\r\n        document.getElementById(\"message\").innerHTML = \"\";\r\n        if (this.state.confirm_password === this.state.password) {\r\n            let search = this.props.location.search;\r\n            console.log(search);\r\n            let params = new URLSearchParams(search);\r\n            console.log(params);\r\n            let key = params.get('key');\r\n            let date=params.get('date');\r\n            if (this.props.location.pathname == '/users/newpassword') {\r\n                axios.post(`http://localhost:64430/api/Users?key=${key}&password=${this.state.password}`).then(x => {\r\n                    console.log(x.data);\r\n                    document.getElementById(\"message\").innerHTML = \"the password was changed successfully\";\r\n                }).catch(x => document.getElementById(\"message\").innerHTML = x.response.data.Message);\r\n            }\r\n            else {\r\n                axios.post(`http://localhost:64430/api/Enterprises?key=${key}&password=${this.state.password}`).then(x => {\r\n                    console.log(x.data);\r\n                    document.getElementById(\"message\").innerHTML = x.data;\r\n                    document.getElementById(\"message\").innerHTML = \"the password was changed successfully\";\r\n                }).catch(x => document.getElementById(\"message\").innerHTML = x.response.data.Message);\r\n            }\r\n        }\r\n        else\r\n            document.getElementById(\"message\").innerHTML = \"confirm password is incorrect\";\r\n    }\r\n    // onChangeHandler = (event) => {\r\n    //     \r\n    //     if (this.state.confirm_password!==this.state.password)\r\n    //         event.target.style.borderColor='red'\r\n    // }\r\n    render() {\r\n        return (\r\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Header as='h2' color='teal' textAlign='center'>\r\n                        <Image src='/Images/logo.png' /> New Password</Header>\r\n                    <Form size='tiny' onSubmit={this.changePassword}>\r\n                        <Segment stacked>\r\n                            <Form.Input className=\"password\"\r\n                                fluid icon='lock'\r\n                                iconPosition='left'\r\n                                placeholder='password'\r\n                                required\r\n                                // error\r\n                                type='password'\r\n                                onChange={(event) => this.setState({ password: event.target.value })}\r\n                            />\r\n                            <Form.Input className=\"confirm_password\"\r\n                                fluid\r\n                                icon='lock'\r\n                                iconPosition='left'\r\n                                placeholder='confirm password'\r\n                                type='password'\r\n                                required\r\n                                onChange={(event) => this.setState({ confirm_password: event.target.value })}\r\n                            // className={!value.valid?'error':null}\r\n                            />\r\n                            <div id=\"message\" style={{ color: \"red\" }}></div>\r\n                            <Button type=\"submit\" color='teal' fluid size='large' >\r\n                                Change Password\r\n  </Button>\r\n\r\n                        </Segment>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user.user,\r\n        enterprise: state.enterprise.enterprise,\r\n        date: state.user.user.SendDate\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectSendDate: (date) => dispatch({ type: \"SELECT_SEND_DATE\", payload: date }),\r\n        selectUser: (user) => dispatch({ type: \"SELECT_USER\", payload: user }),\r\n        selectEnterprise: (enterprise) => dispatch({ type: \"SELECT_ENTERPRISE\", payload: enterprise }),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(newPassword);"]},"metadata":{},"sourceType":"module"}