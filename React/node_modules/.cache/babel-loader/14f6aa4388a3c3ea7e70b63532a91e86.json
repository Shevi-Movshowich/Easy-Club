{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\SignUp\\\\SignUp.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport axios from 'axios';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Checkbox, LabelDetail } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nclass EnterpriseSignUp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        name: {\n          type: \"text\",\n          icon: \"user\",\n          text: \"Name\",\n          value: \"\",\n          maxLength: 40,\n          validition: {\n            required: true,\n            pattern: \"^[a-zA-Z ]*$\"\n          },\n          error: \"The name is incorrect\",\n          valid: false,\n          toched: false\n        },\n        mail: {\n          type: \"text\",\n          icon: \"envelope\",\n          text: \"E-mail address\",\n          value: \"\",\n          maxLength: 50,\n          validition: {\n            required: true,\n            pattern: \"/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/^[0-9]*$\"\n          },\n          error: \"The email is incorrect\",\n          valid: false,\n          toched: false\n        },\n        code: {\n          type: \"Password\",\n          icon: \"lock\",\n          text: \"Password\",\n          value: \"\",\n          maxLength: 15,\n          validition: {\n            required: true // pattern:\"^[0-9]*$\"\n\n          },\n          error: \"The password is incorrect\",\n          valid: false,\n          toched: false\n        },\n        phone: {\n          type: \"text\",\n          icon: \"phone\",\n          text: \"Password\",\n          value: \"\",\n          maxLength: 10,\n          validition: {\n            required: true,\n            pattern: \"^[0-9]*$\"\n          },\n          error: \"The phone is incorrect\",\n          valid: false,\n          toched: false\n        },\n        //     <Form.Input\n        //     Name='Url' icon=\"paper plane\" iconPosition=\"left\" placeholder='Url' required={true} type='text' maxLength={100} onChange={(event) => this.setState({ url: event.target.value })} value={this.state.url}>\n        //  </Form.Input>\n        url: {\n          type: \"text\",\n          icon: \"paper\",\n          text: \"Url\",\n          value: \"\",\n          maxLength: 100,\n          validition: {\n            required: true\n          },\n          error: \"The url is incorrect\",\n          valid: false,\n          toched: false\n        },\n        birthday: {\n          type: \"date\",\n          icon: \"paper\",\n          text: \"BirthDay\",\n          value: \"\",\n          validition: {\n            required: true\n          },\n          error: \"The url is incorrect\",\n          valid: false,\n          toched: false\n        }\n      },\n      agreement: /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/agreement\",\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 20\n        }\n      }, \"Service\")\n    };\n\n    this.onChangeHendler = (e, id) => {\n      const form = { ...this.state.form\n      };\n      const inputChanged = { ...form[id]\n      }; // const value = inputChanged.value;\n      // if (!inputChanged.validation[\"pattern\"].test(e.target.value)) {\n      //     console.log(inputChanged.value)\n      //     e.target.value = inputChanged.value\n      // }\n      // else\n\n      inputChanged.value = e.target.value;\n      console.log(inputChanged);\n      form[id] = inputChanged;\n      this.setState({\n        form: form\n      });\n    };\n\n    this.SignUp = () => {\n      axios.post(`http://localhost:64430/api/Enterprises`, {\n        Name: this.state.form[\"name\"].value,\n        Email: this.state.form[\"mail\"].value,\n        Code: this.state.form[\"code\"].value,\n        Phone: this.state.form[\"phone\"].value,\n        BirthDay: this.state.form[\"birthday\"].value\n      }).then(x => {\n        this.props.history.replace('/users/login');\n        console.log(x);\n      }).catch(x => {\n        document.getElementById(\"message\").innerHTML = x.response.data.Message;\n      });\n    };\n  }\n\n  render() {\n    const array = [];\n\n    for (let x in this.state.form) {\n      array.push({\n        id: x,\n        config: this.state.form[x]\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: \"/Images/logo.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }), \" Sign-Up to your account\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.SignUp,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, array.map((x, i) => {\n      return /*#__PURE__*/React.createElement(Form.Input, {\n        onChange: event => this.onChangeHendler(event, x.id),\n        key: i,\n        iconPosition: \"left\",\n        maxLength: x.config.maxLength,\n        type: x.config.type,\n        placeholder: x.config.text,\n        icon: x.config.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 36\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Segment, {\n      stacked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"Checkbox\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    }, \"I agree to the Terms of \", this.state.agreement), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"message\",\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    }, \"Sign Up\"))))));\n  }\n\n}\n\nexport default EnterpriseSignUp;","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/SignUp/SignUp.js"],"names":["React","Component","NavLink","axios","Button","Form","Grid","Header","Image","Message","Segment","Checkbox","LabelDetail","EnterpriseSignUp","state","form","name","type","icon","text","value","maxLength","validition","required","pattern","error","valid","toched","mail","code","phone","url","birthday","agreement","onChangeHendler","e","id","inputChanged","target","console","log","setState","SignUp","post","Name","Email","Code","Phone","BirthDay","then","x","props","history","replace","catch","document","getElementById","innerHTML","response","data","render","array","push","config","height","maxWidth","map","i","event","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { Button, Form, Grid, Header, Image, Message, Segment, Checkbox, LabelDetail } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nclass EnterpriseSignUp extends Component {\r\n    state = {\r\n        form: {\r\n            name: {\r\n                type: \"text\",\r\n                icon: \"user\",\r\n                text: \"Name\",\r\n                value: \"\",\r\n                maxLength: 40,\r\n                validition: {\r\n                    required: true,\r\n                    pattern: \"^[a-zA-Z ]*$\"\r\n                },\r\n                error: \"The name is incorrect\",\r\n                valid: false,\r\n                toched: false\r\n            },\r\n            mail: {\r\n                type: \"text\",\r\n                icon: \"envelope\",\r\n                text: \"E-mail address\",\r\n                value: \"\",\r\n                maxLength: 50,\r\n                validition: {\r\n                    required: true,\r\n                    pattern: \"/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/^[0-9]*$\"\r\n                },\r\n                error: \"The email is incorrect\",\r\n                valid: false,\r\n                toched: false\r\n            },\r\n            code: {\r\n                type: \"Password\",\r\n                icon: \"lock\",\r\n                text: \"Password\",\r\n                value: \"\",\r\n                maxLength: 15,\r\n                validition: {\r\n                    required: true,\r\n\r\n                    // pattern:\"^[0-9]*$\"\r\n                },\r\n                error: \"The password is incorrect\",\r\n                valid: false,\r\n                toched: false\r\n            },\r\n            phone: {\r\n                type: \"text\",\r\n                icon: \"phone\",\r\n                text: \"Password\",\r\n                value: \"\",\r\n                maxLength: 10,\r\n                validition: {\r\n                    required: true,\r\n\r\n                    pattern: \"^[0-9]*$\"\r\n                },\r\n                error: \"The phone is incorrect\",\r\n                valid: false,\r\n                toched: false\r\n            },\r\n            //     <Form.Input\r\n            //     Name='Url' icon=\"paper plane\" iconPosition=\"left\" placeholder='Url' required={true} type='text' maxLength={100} onChange={(event) => this.setState({ url: event.target.value })} value={this.state.url}>\r\n            //  </Form.Input>\r\n            url: {\r\n                type: \"text\",\r\n                icon: \"paper\",\r\n                text: \"Url\",\r\n                value: \"\",\r\n                maxLength: 100,\r\n                validition: {\r\n                    required: true,\r\n                },\r\n                error: \"The url is incorrect\",\r\n                valid: false,\r\n                toched: false\r\n            },\r\n            birthday: {\r\n                type: \"date\",\r\n                icon: \"paper\",\r\n                text: \"BirthDay\",\r\n                value: \"\",\r\n                validition: {\r\n                    required: true,\r\n                },\r\n                error: \"The url is incorrect\",\r\n                valid: false,\r\n                toched: false\r\n            },\r\n        },\r\n        agreement: <a href=\"/agreement\" target=\"_blank\">Service</a>\r\n    }\r\n    // SignUp = () => {\r\n    //     const enterprise = {};\r\n    //     enterprise[\"Name\"] = document.getElementsByName(\"Name\")[0].value;\r\n    //     enterprise[\"Email\"] = document.getElementsByName(\"Email\")[0].value;\r\n    //     enterprise[\"Code\"] = document.getElementsByName(\"Code\")[0].value;\r\n    //     enterprise[\"Password\"] = document.getElementsByName(\"Password\")[0].value;\r\n    //     enterprise[\"Url\"] = document.getElementsByName(\"Url\")[0].value;\r\n    //     console.log(enterprise)\r\n    //     axios.post(`http://localhost:64430/api/Enterprises`, enterprise).then(x => {\r\n    //         this.props.history.replace('/enterprises/login');\r\n    //         console.log(x);\r\n    //     }\r\n    //     ).catch(x => {\r\n    //         document.getElementById(\"message\").innerHTML = x.response.data.Message;\r\n    //     });\r\n    // }\r\n    onChangeHendler = (e, id) => {\r\n        const form = { ...this.state.form };\r\n        const inputChanged = { ...form[id] };\r\n        // const value = inputChanged.value;\r\n        // if (!inputChanged.validation[\"pattern\"].test(e.target.value)) {\r\n        //     console.log(inputChanged.value)\r\n        //     e.target.value = inputChanged.value\r\n        // }\r\n        // else\r\n        inputChanged.value = e.target.value;\r\n        console.log(inputChanged)\r\n        form[id] = inputChanged;\r\n        this.setState({ form: form })\r\n    }\r\n    SignUp = () => {\r\n        axios.post(`http://localhost:64430/api/Enterprises`, {\r\n            Name: this.state.form[\"name\"].value,\r\n            Email: this.state.form[\"mail\"].value,\r\n            Code: this.state.form[\"code\"].value,\r\n            Phone: this.state.form[\"phone\"].value,\r\n            BirthDay: this.state.form[\"birthday\"].value,\r\n        })\r\n            .then(x => {\r\n                this.props.history.replace('/users/login');\r\n                console.log(x);\r\n            }\r\n            ).catch(x => {\r\n                document.getElementById(\"message\").innerHTML = x.response.data.Message;\r\n            });\r\n    }\r\n    render() {\r\n        const array = [];\r\n        for (let x in this.state.form) {\r\n            array.push({ id: x, config: this.state.form[x] })\r\n        }\r\n        return (<div>\r\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Header as='h2' color='teal' textAlign='center'>\r\n                        <Image src='/Images/logo.png' /> Sign-Up to your account\r\n                  </Header>\r\n                    <Form onSubmit={this.SignUp} size='large'>\r\n                        {array.map((x, i) => {\r\n                            return <Form.Input\r\n                                onChange={event => this.onChangeHendler(event, x.id)}\r\n                                key={i} iconPosition=\"left\"\r\n                                maxLength={x.config.maxLength}\r\n                                type={x.config.type}\r\n                                placeholder={x.config.text}\r\n                                icon={x.config.icon}>\r\n\r\n                            </Form.Input>\r\n                        })}\r\n                        <Segment stacked>\r\n                            <input type=\"Checkbox\" required></input>\r\n                            <label>I agree to the Terms of {this.state.agreement}</label>\r\n                            <div id=\"message\" style={{ color: \"red\" }}></div>\r\n                            <Button type=\"submit\" color='teal' fluid size='large'>\r\n                                Sign Up\r\n                            </Button>\r\n                        </Segment>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </div >\r\n        )\r\n    }\r\n}\r\nexport default EnterpriseSignUp;\r\n"]},"metadata":{},"sourceType":"module"}