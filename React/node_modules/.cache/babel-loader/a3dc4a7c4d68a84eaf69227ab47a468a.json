{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\NewCard\\\\NewCard.js\";\nimport React, { Component } from 'react';\nimport Lotery from './Lotery';\nimport \"../../Public.css\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { connect } from 'react-redux';\nimport { Button, Form, Header, Divider, Dimmer, Loader, Message } from 'semantic-ui-react';\nimport CardDetails from \"./CardDetails\";\nimport { postNewCard } from \"../../../Store/actions/EnterpriseAction\";\nimport axios from 'axios';\nimport validForm from \"../../Service/ValidStateForm\";\n\nclass NewCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lotery: {\n        new: {\n          header: \"Lottery For Newers\",\n          active: false,\n          LoteryType: \"Discount\",\n          Sum: \"\",\n          SumType: \"$\",\n          Num1: \"\",\n          Num2: \"\",\n          Addition: \"\",\n          ExpireDate: \"\"\n        },\n        birthday: {\n          header: \"Lottery For Birthday\",\n          active: false,\n          LoteryType: \"Discount\",\n          Sum: \"\",\n          SumType: \"$\",\n          Num1: \"\",\n          Num2: \"\",\n          Addition: \"\",\n          ExpireDate: \"\"\n        },\n        club_members: {\n          header: \"Lottery For Club Members\",\n          active: false,\n          LoteryType: \"Discount\",\n          Sum: \"\",\n          SumType: \"$\",\n          Num1: \"\",\n          Num2: \"\",\n          Addition: \"\",\n          ExpireDate: \"\"\n        }\n      },\n      card: {},\n      cardError: false,\n      cardForm: {\n        Cost: {\n          label: \"Price For Customer\",\n          icon: \"$\",\n          type: 'number',\n          step: 5,\n          text: \"Card Price *\",\n          value: \"\",\n          validation: {\n            required: true\n          }\n        },\n        CountPoints: {\n          label: \"Count CountPoints\",\n          icon: \" = 1 $\",\n          type: 'number',\n          text: \"Count CountPoints *\",\n          value: \"\",\n          validation: {\n            required: true\n          }\n        },\n        Type: {\n          options: [{\n            key: \"Basic\",\n            text: 'Basic card',\n            value: 'Basic card'\n          }, {\n            key: \"Primium\",\n            text: 'Primium card',\n            value: 'Primium card'\n          }],\n          label: \"Card Type\",\n          text: \"Type *\",\n          value: \"\",\n          validation: {\n            required: true\n          }\n        },\n        Img: {\n          label: 'Enterprise Image',\n          value: \"\",\n          text: \"select Img\",\n          validation: {\n            required: false,\n            img: true\n          }\n        }\n      },\n      fileName: \"\"\n    };\n\n    this.onSelectCard = (event, {\n      value\n    }) => {\n      const form = { ...this.state.cardForm\n      };\n      const input = { ...form[\"Type\"]\n      };\n      input.value = value;\n      form[\"Type\"] = input;\n      this.setState({\n        cardForm: form\n      });\n    };\n\n    this.convertImg = event => {\n      const file = event.target.files[0];\n\n      if (file) {\n        var name = file.name;\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        console.log(reader);\n\n        reader.onload = () => {\n          this.onChangeCard(String(reader.result), \"Img\");\n          this.setState({\n            fileName: name\n          });\n        };\n      }\n    };\n\n    this.onChangeCard = (value, id) => {\n      const form = { ...this.state.cardForm\n      };\n      const input = { ...form[id]\n      };\n\n      if (input.type === \"number\") {\n        input.value = parseInt(value);\n      } else {\n        input.value = value;\n      }\n\n      form[id] = input;\n      this.setState({\n        cardForm: form\n      });\n      const card = {};\n\n      for (let x in this.state.cardForm) {\n        card[x] = this.state.cardForm[x].value;\n      }\n\n      this.setState({\n        card: card\n      });\n    };\n\n    this.onClick = (event, x) => {\n      event.preventDefault();\n      const lotteries = { ...this.state.lotteries\n      };\n      const lotery = { ...lotteries[x.id]\n      };\n      lotery.active = !lotery.active;\n      lotteries[x.id] = lotery;\n      this.setState({\n        lotteries: lotteries\n      });\n    };\n\n    this.onChangeLottery = (value, id, index) => {\n      const form = [...this.state.lotery];\n      const loterySelected = { ...form[index]\n      };\n      loterySelected[id] = value;\n      form[index] = loterySelected;\n      this.setState({\n        lotery: form\n      });\n    };\n\n    this.onSelectLottery = (event, {\n      value\n    }, index) => {\n      console.log(event, value, index);\n      const form = [...this.state.lotery];\n      const loterySelected = { ...form[index]\n      };\n\n      if (value.length > 1) {\n        for (let x in form) {\n          form[x] = \"\";\n        }\n\n        loterySelected.LoteryType = value;\n        loterySelected.SumType = \"$\";\n      } else loterySelected.SumType = value;\n\n      form[index] = loterySelected;\n      this.setState({\n        lotery: form\n      });\n    };\n\n    this.onSubmit = () => {\n      const data = { ...this.state.card\n      };\n      data['Lotery'] = [...this.state.lotery];\n      data['EnterpId'] = this.props.enterprise.C_id;\n      this.props.loadingNewCard();\n      console.log(data);\n      postNewCard(data).then(x => {\n        this.props.history.replace('clearing');\n      }).catch(x => {\n        this.props.errorFiled(x.response.data.Message);\n      });\n    };\n  }\n\n  render() {\n    const array = [];\n\n    for (let x in this.state.lotery) {\n      array.push({\n        id: x,\n        config: this.state.lotery[x]\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        width: '30vw',\n        marginLeft: '35vw',\n        marginTop: '5vh',\n        textAlign: 'center',\n        fontSize: '180%',\n        color: 'rgb(40, 44, 52)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, \"New Card\"), /*#__PURE__*/React.createElement(CardDetails, {\n      error: this.state.cardError,\n      fileName: this.state.fileName,\n      convertImg: this.convertImg,\n      onSelect: this.onSelectCard,\n      onChange: this.onChangeCard,\n      form: { ...this.state.cardForm\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"left\",\n      style: {\n        marginLeft: \"1vw\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, \" Lotteries \"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, array.map((x, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Header, {\n        as: \"h4\",\n        color: \"teal\",\n        textAlign: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        style: {\n          marginRight: \"3vw\",\n          marginLeft: \"1vw\"\n        },\n        onClick: event => this.onClick(event, x),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 33\n        }\n      }, x.config.active ? \"Delete\" : \"Insert\"), x.config.header), x.config.active == true ? /*#__PURE__*/React.createElement(Lotery, {\n        index: i,\n        onSelect: this.onSelectLottery,\n        onChange: this.onChangeLottery,\n        form: x.config,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 56\n        }\n      }) : \"\");\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"teal\",\n      style: {\n        fontSize: \"18px\",\n        marginTop: \"9vh\",\n        padding: \"2vh\",\n        width: \"25%\",\n        backgroundColor: \"#282c34\",\n        marginLeft: \"38%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, \"Submit And Pay\")), /*#__PURE__*/React.createElement(Dimmer, {\n      id: \"dimmer\",\n      active: this.props.enterp_loading,\n      inverted: \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, this.props.error));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    enterprise: state.enterprise.enterprise,\n    enterp_loading: state.enterprise.loading,\n    error: state.enterprise.error,\n    cards: state.enterprise.cards,\n    indexedCard: state.enterprise.indexedCard\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadingNewCard: () => dispatch({\n      type: \"LOADING\",\n      payload: true\n    }),\n    errorFiled: errorMsg => dispatch({\n      type: \"ERROR\",\n      payload: errorMsg\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCard);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/NewCard/NewCard.js"],"names":["React","Component","Lotery","connect","Button","Form","Header","Divider","Dimmer","Loader","Message","CardDetails","postNewCard","axios","validForm","NewCard","state","lotery","new","header","active","LoteryType","Sum","SumType","Num1","Num2","Addition","ExpireDate","birthday","club_members","card","cardError","cardForm","Cost","label","icon","type","step","text","value","validation","required","CountPoints","Type","options","key","Img","img","fileName","onSelectCard","event","form","input","setState","convertImg","file","target","files","name","reader","FileReader","readAsDataURL","console","log","onload","onChangeCard","String","result","id","parseInt","x","onClick","preventDefault","lotteries","onChangeLottery","index","loterySelected","onSelectLottery","length","onSubmit","data","props","enterprise","C_id","loadingNewCard","then","history","replace","catch","errorFiled","response","render","array","push","config","width","marginLeft","marginTop","textAlign","fontSize","color","map","i","marginRight","padding","backgroundColor","enterp_loading","error","mapStateToProps","loading","cards","indexedCard","mapDispatchToProps","dispatch","payload","errorMsg"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Lotery from './Lotery';\r\nimport \"../../Public.css\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { connect } from 'react-redux'\r\nimport { Button, Form, Header, Divider, Dimmer, Loader, Message } from 'semantic-ui-react';\r\nimport CardDetails from \"./CardDetails\"\r\nimport { postNewCard } from \"../../../Store/actions/EnterpriseAction\"\r\nimport axios from 'axios';\r\nimport validForm from \"../../Service/ValidStateForm\"\r\nclass NewCard extends Component {\r\n    state = {\r\n        lotery: { new:{\r\n                header: \"Lottery For Newers\",\r\n                active: false,\r\n                LoteryType: \"Discount\",\r\n                Sum: \"\",\r\n                SumType: \"$\",\r\n                Num1: \"\",\r\n                Num2: \"\",\r\n                Addition: \"\",\r\n                ExpireDate: \"\",\r\n            }, \r\n           birthday:   {      \r\n                header: \"Lottery For Birthday\",\r\n                active: false,\r\n                LoteryType: \"Discount\",\r\n                Sum: \"\",\r\n                SumType: \"$\",\r\n                Num1: \"\",\r\n                Num2: \"\",\r\n                Addition: \"\",\r\n                ExpireDate: \"\",\r\n            },\r\n            club_members: {\r\n                header: \"Lottery For Club Members\",\r\n                active: false,\r\n                LoteryType: \"Discount\",\r\n                Sum: \"\",\r\n                SumType: \"$\",\r\n                Num1: \"\",\r\n                Num2: \"\",\r\n                Addition: \"\",\r\n                ExpireDate: \"\",\r\n            },\r\n        },\r\n        card: {},\r\n        cardError: false,\r\n        cardForm: {\r\n            Cost: {\r\n                label: \"Price For Customer\",\r\n                icon: \"$\",\r\n                type: 'number',\r\n                step: 5,\r\n                text: \"Card Price *\",\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                }\r\n            },\r\n            CountPoints: {\r\n                label: \"Count CountPoints\",\r\n                icon: \" = 1 $\",\r\n                type: 'number',\r\n                text: \"Count CountPoints *\",\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                }\r\n            },\r\n            Type: {\r\n                options: [{ key: \"Basic\", text: 'Basic card', value: 'Basic card' },\r\n                { key: \"Primium\", text: 'Primium card', value: 'Primium card' }],\r\n                label: \"Card Type\",\r\n                text: \"Type *\",\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                }\r\n            },\r\n            Img: {\r\n                label: 'Enterprise Image',\r\n                value: \"\",\r\n                text: \"select Img\",\r\n                validation: {\r\n                    required: false,\r\n                    img: true,\r\n                }\r\n            }\r\n        },\r\n        fileName: \"\",\r\n    }\r\n    //card\r\n    onSelectCard = (event, { value }) => {\r\n        const form = { ...this.state.cardForm }\r\n        const input = { ...form[\"Type\"] }\r\n        input.value = value;\r\n        form[\"Type\"] = input\r\n        this.setState({ cardForm: form })\r\n    }\r\n    convertImg = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            var name = file.name;\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            console.log(reader)\r\n            reader.onload = () => {\r\n                this.onChangeCard(String(reader.result), \"Img\")\r\n                this.setState({ fileName: name })\r\n            }\r\n        }\r\n    }\r\n    onChangeCard = (value, id) => {\r\n        const form = { ...this.state.cardForm }\r\n        const input = { ...form[id] }\r\n        if (input.type === \"number\") {\r\n            input.value = parseInt(value);\r\n        }\r\n        else {\r\n            input.value = value;\r\n        }\r\n        form[id] = input\r\n        this.setState({ cardForm: form })\r\n        const card = {}\r\n        for (let x in this.state.cardForm) {\r\n            card[x] = this.state.cardForm[x].value;\r\n        }\r\n        this.setState({ card: card })\r\n    }\r\n    onClick = (event, x) => {\r\n        event.preventDefault();\r\n        const lotteries = { ...this.state.lotteries };\r\n        const lotery = { ...lotteries[x.id] };\r\n        lotery.active = !lotery.active;\r\n        lotteries[x.id] = lotery;\r\n        this.setState({ lotteries: lotteries })\r\n    }\r\n    //lottery\r\n    onChangeLottery = (value, id, index) => {\r\n        const form = [...this.state.lotery];\r\n        const loterySelected = { ...form[index] };\r\n        loterySelected[id] = value;\r\n        form[index] = loterySelected;\r\n        this.setState({ lotery: form });\r\n    }\r\n    onSelectLottery = (event, { value }, index) => {\r\n        console.log(event, value, index)\r\n        const form = [...this.state.lotery];\r\n        const loterySelected = { ...form[index] };\r\n        if (value.length > 1) {\r\n            for (let x in form) {\r\n                form[x] = \"\";\r\n            }\r\n            loterySelected.LoteryType = value;\r\n            loterySelected.SumType = \"$\"\r\n        }\r\n        else\r\n            loterySelected.SumType = value;\r\n        form[index] = loterySelected;\r\n        this.setState({ lotery: form });\r\n    }\r\n    //main form\r\n    onSubmit = () => {\r\n        const data = { ...this.state.card };\r\n        data['Lotery'] = [...this.state.lotery];\r\n        data['EnterpId'] = this.props.enterprise.C_id;\r\n        this.props.loadingNewCard();\r\n        console.log(data)\r\n        postNewCard(data).then(x => {\r\n            this.props.history.replace('clearing');\r\n        }).catch(x => { this.props.errorFiled(x.response.data.Message) })\r\n    }\r\n    render() {\r\n        const array = [];\r\n        for (let x in this.state.lotery) {\r\n            array.push({ id: x, config: this.state.lotery[x] })\r\n        }\r\n        return (\r\n            <div>\r\n                <h1 style={{ width: '30vw', marginLeft: '35vw', marginTop: '5vh', textAlign: 'center', fontSize: '180%', color: 'rgb(40, 44, 52)' }}>New Card</h1>\r\n                <CardDetails error={this.state.cardError} fileName={this.state.fileName} convertImg={this.convertImg} onSelect={this.onSelectCard} onChange={this.onChangeCard} form={{ ...this.state.cardForm }}></CardDetails>\r\n                <Header as='h2' color='teal' textAlign='left' style={{ marginLeft: \"1vw\" }}> Lotteries </Header>\r\n                <Form onSubmit={this.onSubmit}>\r\n                    {array.map((x, i) => {\r\n                        return <div>\r\n                            <Divider></Divider>\r\n                            <Header as='h4' color='teal' textAlign='left'>\r\n                                <Button style={{ marginRight: \"3vw\", marginLeft: \"1vw\" }} onClick={event => this.onClick(event, x)}>{x.config.active ? \"Delete\" : \"Insert\"}</Button>\r\n                                {x.config.header}\r\n                            </Header>\r\n                            {x.config.active == true ? <Lotery index={i} onSelect={this.onSelectLottery} onChange={this.onChangeLottery} form={x.config}></Lotery> : \"\"}\r\n                        </div>\r\n                    })}\r\n                    <Button type=\"submit\" color='teal' style={{ fontSize: \"18px\", marginTop: \"9vh\", padding: \"2vh\", width: \"25%\", backgroundColor: \"#282c34\", marginLeft: \"38%\" }}>Submit And Pay</Button>\r\n                </Form>\r\n                <Dimmer id='dimmer' active={this.props.enterp_loading} inverted='false'>\r\n                    <Loader size='large'>Loading</Loader>\r\n                </Dimmer>\r\n                <div style={{ color: \"red\", textAlign: \"center\" }}>{this.props.error}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        enterprise: state.enterprise.enterprise,\r\n        enterp_loading: state.enterprise.loading,\r\n        error: state.enterprise.error,\r\n        cards: state.enterprise.cards,\r\n        indexedCard: state.enterprise.indexedCard,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadingNewCard: () => dispatch({ type: \"LOADING\", payload: true }),\r\n        errorFiled: (errorMsg) => dispatch({ type: \"ERROR\", payload: errorMsg }),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCard);\r\n"]},"metadata":{},"sourceType":"module"}