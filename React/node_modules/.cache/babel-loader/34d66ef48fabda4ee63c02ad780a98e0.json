{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\NewCard\\\\NewCard.js\";\nimport React, { Component } from 'react';\nimport Lotery from '../Lotery/Lotery';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Checkbox, Select, Input, Popup } from 'semantic-ui-react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { InputFile } from 'semantic-ui-react-input-file';\nimport { Route, Switch, Redirect, Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { selectCard } from \"../../../Store/actions/EnterpriseAction\";\nimport convertImg from \"../../../convertImg\";\n\nclass NewCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        password: {\n          icon: \"address card\",\n          text: \"Password\",\n          type: \"text\",\n          maxLength: 15\n        },\n        mail: {\n          icon: \"envelope\",\n          text: \"Email\",\n          type: \"text\",\n          maxLength: 50\n        },\n        cost: {\n          icon: 'dollar sign',\n          text: 'Card Price',\n          type: 'text',\n          maxLength: 7\n        }\n      },\n      type: \"\",\n      new: false,\n      birthday: false,\n      club_members: false,\n      img: \"\"\n    };\n\n    this.hanleSelctOnChange = (event, {\n      value\n    }) => {\n      console.log(value); //להמיר לסטרינג\n\n      console.log(\"ghhj\");\n      this.setState({\n        type: value\n      });\n      console.log(this.state.type);\n    };\n\n    this.click = () => {};\n\n    this.onChangeImg = event => {\n      console.log(event);\n      var img = convertImg(event);\n      this.setState({\n        img: img\n      });\n      console.log(this.state.img);\n    };\n  }\n\n  render() {\n    const array = [];\n\n    for (let x in this.state.form) {\n      array.push({\n        id: x,\n        config: this.state.form[x]\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        width: '30vw',\n        marginLeft: '35vw',\n        marginTop: '5vh',\n        textAlign: 'center',\n        fontSize: '180%',\n        color: 'rgb(40, 44, 52)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"New Card\"), /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '75vh',\n        marginTop: '10vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450,\n        boxShadow: '5px 2px 1px -1px rgba(0, 0, 0, 0.2), 5px 5px 5px 5px rgba(0, 0, 0, 0.14), 5px 1px 7px 4px rgba(0, 0, 0, 0.12)',\n        borderRadius: '10%',\n        height: '67%',\n        width: '37vw'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.onSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      stacked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, array.map((x, i) => {\n      console.log(x.config);\n      return /*#__PURE__*/React.createElement(Form.Input, {\n        key: i,\n        iconPosition: \"left\",\n        maxLength: x.config.maxLength,\n        type: x.config.type // onChange={event => this.onChangeHendler(event, x.id)}\n        // className={this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id}\n        ,\n        placeholder: x.config.text + \"*\",\n        icon: x.config.icon,\n        step: x.config.step,\n        checked: x.config.checked // onFocus={(e) => x.config.birthdate===true?e.target.type = 'date':\"text\"} \n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 40\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Form.Group, {\n      inline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      content: \"For example 100 point =3$\",\n      trigger: /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"points\",\n        type: \"Number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 41\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }), \"=\", /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"moneys\",\n      icon: \"dollar sign\",\n      type: \"Number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Form.Select, {\n      placeholder: \"Type\",\n      options: [{\n        key: \"Basic\",\n        text: 'Basic card',\n        value: 'Basic card'\n      }, {\n        key: \"Primium\",\n        text: 'Primium card',\n        value: 'Primium card'\n      }],\n      onChange: this.hanleSelctOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(InputFile, {\n      class: \".ui.form .field .ui.input\",\n      input: {\n        id: 'input-control-id',\n        onChange: this.onChangeImg\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      type: \"submit\",\n      onClick: this.click,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, \"next\"))))));\n  }\n\n} // const mapStateToProps = state => {\n//     return {\n//       enterprise: state.enterprise.enterprise\n//     }\n//   }\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectCard: card => dispatch(selectCard(card))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewCard);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/NewCard/NewCard.js"],"names":["React","Component","Lotery","Button","Form","Grid","Header","Image","Message","Segment","Checkbox","Select","Input","Popup","NavLink","withRouter","InputFile","Route","Switch","Redirect","Router","connect","selectCard","convertImg","NewCard","state","form","password","icon","text","type","maxLength","mail","cost","new","birthday","club_members","img","hanleSelctOnChange","event","value","console","log","setState","click","onChangeImg","render","array","x","push","id","config","width","marginLeft","marginTop","textAlign","fontSize","color","height","maxWidth","boxShadow","borderRadius","onSubmitHandler","map","i","step","checked","key","onChange","mapDispatchToProps","dispatch","card"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Lotery from '../Lotery/Lotery';\r\nimport { Button, Form, Grid, Header, Image, Message, Segment, Checkbox, Select, Input, Popup } from 'semantic-ui-react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { InputFile } from 'semantic-ui-react-input-file';\r\nimport { Route, Switch, Redirect, Router } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { selectCard } from \"../../../Store/actions/EnterpriseAction\"\r\nimport convertImg from \"../../../convertImg\"\r\nclass NewCard extends Component {\r\n\r\n    state = {\r\n        form: {\r\n            password: {\r\n                icon: \"address card\",\r\n                text: \"Password\",\r\n                type: \"text\",\r\n                maxLength: 15,\r\n\r\n            },\r\n            mail: {\r\n                icon: \"envelope\",\r\n                text: \"Email\",\r\n                type: \"text\",\r\n                maxLength: 50,\r\n            },\r\n            cost: {\r\n                icon: 'dollar sign',\r\n                text: 'Card Price',\r\n                type: 'text',\r\n                maxLength: 7,\r\n            },\r\n        },\r\n        type: \"\",\r\n        new: false,\r\n        birthday: false,\r\n        club_members: false,\r\n        img: \"\",\r\n    }\r\n    hanleSelctOnChange = (event, { value }) => {\r\n        console.log(value);\r\n        //להמיר לסטרינג\r\n        console.log(\"ghhj\")\r\n        this.setState({ type: value })\r\n        console.log(this.state.type)\r\n\r\n\r\n    }\r\n    click = () => {\r\n\r\n\r\n    }\r\n    onChangeImg = (event) => {\r\n        console.log(event)\r\n        var img = convertImg(event);\r\n        this.setState({ img: img });\r\n        console.log(this.state.img)\r\n    }\r\n    render() {\r\n        const array = [];\r\n        for (let x in this.state.form) {\r\n            array.push({ id: x, config: this.state.form[x] })\r\n        }\r\n        return (<div>\r\n\r\n            <h1 style={{ width: '30vw', marginLeft: '35vw', marginTop: '5vh', textAlign: 'center', fontSize: '180%', color: 'rgb(40, 44, 52)' }}>New Card</h1>\r\n            <Grid textAlign='center' style={{ height: '75vh', marginTop: '10vh' }} verticalAlign='middle'>\r\n                <Grid.Column style={{ maxWidth: 450, boxShadow: '5px 2px 1px -1px rgba(0, 0, 0, 0.2), 5px 5px 5px 5px rgba(0, 0, 0, 0.14), 5px 1px 7px 4px rgba(0, 0, 0, 0.12)', borderRadius: '10%', height: '67%', width: '37vw' }}>\r\n                    <Header as='h2' color='teal' textAlign='center'>\r\n                    </Header>\r\n                    <Form size='large' onSubmit={this.onSubmitHandler}>\r\n                        <Segment stacked>\r\n                            {array.map((x, i) => {\r\n                                console.log(x.config)\r\n                                return <Form.Input\r\n                                    key={i} iconPosition=\"left\"\r\n                                    maxLength={x.config.maxLength}\r\n                                    type={x.config.type}\r\n                                    // onChange={event => this.onChangeHendler(event, x.id)}\r\n                                    // className={this.state.trySend && !this.state.form[x.id].valid ? \"error\" : x.id}\r\n                                    placeholder={x.config.text + \"*\"}\r\n                                    icon={x.config.icon}\r\n                                    step={x.config.step}\r\n                                    checked={x.config.checked}\r\n                                // onFocus={(e) => x.config.birthdate===true?e.target.type = 'date':\"text\"} \r\n                                >\r\n                                </Form.Input>\r\n                            })}\r\n                            <Form.Group inline>\r\n                                <Popup\r\n                                    content=\"For example 100 point =3$\"\r\n                                    trigger={\r\n                                        <Input placeholder=\"points\" type='Number'></Input>\r\n                                    }\r\n                                />\r\n                         =<Input placeholder=\"moneys\" icon=\"dollar sign\" type='Number'></Input></Form.Group>\r\n                            <Form.Select\r\n                                placeholder=\"Type\"\r\n                                options={[{ key: \"Basic\", text: 'Basic card', value: 'Basic card' }, { key: \"Primium\", text: 'Primium card', value: 'Primium card' }]}\r\n                                onChange={this.hanleSelctOnChange}\r\n\r\n                            ></Form.Select>\r\n                            <br></br>\r\n                            <InputFile class=\".ui.form .field .ui.input\"\r\n                              \r\n                                input={{\r\n                                    id: 'input-control-id',\r\n                                    onChange: this.onChangeImg\r\n                                }}\r\n                            />\r\n                            {/* <input type=\"file\" id=\"file\" style={{ display: 'none' }} /> */}\r\n\r\n                            <Button color='teal' fluid size='large' type=\"submit\" onClick={this.click}>\r\n                                next\r\n                            </Button>\r\n                        </Segment>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//       enterprise: state.enterprise.enterprise\r\n//     }\r\n//   }\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectCard: (card) => dispatch(selectCard(card)),\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(NewCard);"]},"metadata":{},"sourceType":"module"}