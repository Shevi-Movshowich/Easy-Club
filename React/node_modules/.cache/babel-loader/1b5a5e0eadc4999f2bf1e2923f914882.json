{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\Lotery\\\\Lotery.js\";\nimport React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Input, Select, Form, Dropdown, Grid, Segment, Radio, Header, Image, TextArea, Popup, Button, Icon } from 'semantic-ui-react';\n\nclass Lotery extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      statusLotery: -1,\n      loteryName: \"\",\n      loteryTypes: [{\n        key: 'Discount',\n        text: 'Discount',\n        value: 'Discount'\n      }, {\n        key: \"Plus Free\",\n        text: \"Plus Free\",\n        value: \"Plus Free\"\n      }, {\n        key: \"X in Y\",\n        text: \"X in Y\",\n        value: \"X in Y\"\n      }],\n      sumTypes: [{\n        key: '%',\n        text: '%',\n        value: '%'\n      }, {\n        key: '$',\n        text: '$',\n        value: '$'\n      }],\n      form: {\n        loteryType: \"Discount\",\n        sum: \"\",\n        sumType: \"\",\n        num1: \"\",\n        num2: \"\",\n        addition: \"\",\n        expireDate: \"\"\n      }\n    };\n\n    this.hanleSelctOnChange = (event, value) => {\n      const form = { ...this.state.form\n      };\n      form.loteryType = value;\n      form.expireDate = \"\"; // this.setState({ loteryType: value });\n\n      this.setState({\n        form: form\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Select, {\n      label: \"Lottery Types\",\n      options: this.state.loteryTypes,\n      defaultValue: \"Discount\",\n      onChange: (event, {\n        value\n      }) => this.hanleSelctOnChange(event, value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"Details\",\n      type: \"number\",\n      labelPosition: \"right\",\n      action: /*#__PURE__*/React.createElement(Dropdown, {\n        button: true,\n        basic: true,\n        floating: true,\n        options: this.state.sumTypes,\n        defaultValue: \"$\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Group, {\n      inline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"Number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      inline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 65\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"Number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 88\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      inline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 50\n      }\n    }, \"In\"), /*#__PURE__*/React.createElement(Form.Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 74\n      }\n    }))));\n  }\n\n}\n\nexport default Lotery;","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/Lotery/Lotery.js"],"names":["React","Component","Input","Select","Form","Dropdown","Grid","Segment","Radio","Header","Image","TextArea","Popup","Button","Icon","Lotery","state","statusLotery","loteryName","loteryTypes","key","text","value","sumTypes","form","loteryType","sum","sumType","num1","num2","addition","expireDate","hanleSelctOnChange","event","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Input, Select, Form, Dropdown, Grid, Segment, Radio, Header, Image, TextArea, Popup, Button, Icon } from 'semantic-ui-react';\r\nclass Lotery extends Component {\r\n    state = {\r\n        statusLotery: -1,\r\n        loteryName: \"\",\r\n        loteryTypes: [\r\n            { key: 'Discount', text: 'Discount', value: 'Discount' },\r\n            { key: \"Plus Free\", text: \"Plus Free\", value: \"Plus Free\" },\r\n            { key: \"X in Y\", text: \"X in Y\", value: \"X in Y\" }],\r\n        sumTypes: [\r\n            { key: '%', text: '%', value: '%' },\r\n            { key: '$', text: '$', value: '$' }\r\n        ],\r\n        form: {\r\n            loteryType: \"Discount\",\r\n            sum: \"\",\r\n            sumType: \"\",\r\n            num1: \"\",\r\n            num2: \"\",\r\n            addition: \"\",\r\n            expireDate: \"\",\r\n        },\r\n\r\n    }\r\n    hanleSelctOnChange = (event, value) => {\r\n        const form = { ...this.state.form }\r\n        form.loteryType = value;\r\n        form.expireDate = \"\";\r\n        // this.setState({ loteryType: value });\r\n        this.setState({ form: form });\r\n\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form>\r\n                    <Form.Select label=\"Lottery Types\" options={this.state.loteryTypes}\r\n                        defaultValue=\"Discount\"\r\n                        onChange={(event, { value }) => this.hanleSelctOnChange(event, value)}></Form.Select>\r\n                    <Form.Input\r\n                        label=\"Details\"\r\n                        type=\"number\"\r\n                        labelPosition='right'\r\n                        action={\r\n                            <Dropdown button basic floating options={this.state.sumTypes} defaultValue='$' />}></Form.Input>\r\n                    <Form.Group inline>\r\n                        <Form.Input label=\"Number\"></Form.Input><label inline>+</label><Form.Input label=\"Number\"></Form.Input>\r\n                        <Form.Input></Form.Input><label inline>In</label><Form.Input></Form.Input></Form.Group>\r\n                </Form>\r\n                {/* <Segment>\r\n                    <Form size=\"large\">\r\n                        <Form.Group widths={4}>\r\n                            <Popup content=\"Select Your Lotery Type\" trigger={\r\n                                <Form.Field\r\n                                    control={Select}\r\n                                    options={this.state.loteryTypes}\r\n                                    defaultValue=\"Discount\"\r\n                                    onChange={(event, { value }) => this.hanleSelctOnChange(event, value)}\r\n                                />\r\n                            }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group inline widths={1}>\r\n                            {this.state.form.loteryType === \"Discount\" ?\r\n                                <Form.Field>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        labelPosition='right'\r\n                                        label={<Dropdown options={this.state.sumTypes} defaultValue={\"$\"} />}\r\n                                    />\r\n                                </Form.Field>\r\n                                :\r\n                                this.state.form.loteryType === \"Plus Free\" ?\r\n                                    <Form.Field inline>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                        /> <Icon size=\"small\" name=\"plus\"></Icon> <Input\r\n                                            type=\"number\"\r\n                                        />\r\n                                    </Form.Field>\r\n                                    :\r\n                                    <Form.Field inline>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                        /> In <Input\r\n                                            type=\"number\"\r\n                                        />\r\n                                    </Form.Field>}\r\n                        </Form.Group>\r\n                        <Form.Group widths={8}>\r\n                            <Form.Input\r\n                                type=\"date\"\r\n                                value={this.state.form.expireDate}\r\n                                placeholder=\"expireDate\"\r\n                                onChange={(e, { value }) => {\r\n                                    const form = { ...this.state.form }\r\n                                    form[\"expireDate\"] = value\r\n                                    this.setState({ form: form })\r\n                                }}\r\n                            />\r\n                            <Form.Input\r\n                                type=\"text\"\r\n                                placeholder=\"Addition\"\r\n                                maxLength={50}\r\n                            /></Form.Group>\r\n                    </Form>\r\n                </Segment> */}\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Lotery;\r\n"]},"metadata":{},"sourceType":"module"}