{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Users\\\\SignUp\\\\SignUp.js\";\nimport React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Button, Form, Grid, Header, Image, Segment, FormInput, Input } from 'semantic-ui-react';\nimport axios from 'axios';\nimport validForm from '../../Service/ValidStateForm';\n\nclass UsersSignUp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        name: {\n          type: \"text\",\n          icon: \"user\",\n          text: \"Name\",\n          value: \"\",\n          maxLength: 40,\n          validition: {\n            required: true,\n            pattern: /^[a-zA-Z ]*$/\n          },\n          error: \"The name is incorrect\",\n          valid: false\n        },\n        tz: {\n          type: \"text\",\n          icon: \"tag\",\n          text: \"Identity\",\n          value: \"\",\n          maxLength: 9,\n          validition: {\n            required: true,\n            pattern: /^[0-9]*$/,\n            tz: true\n          },\n          error: \"The tz is incorrect\",\n          valid: false\n        },\n        mail: {\n          type: \"text\",\n          icon: \"envelope\",\n          text: \"E-mail address\",\n          value: \"\",\n          maxLength: 50,\n          validition: {\n            required: true,\n            pattern: /^/,\n            mail: true // pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n\n          },\n          error: \"The email is incorrect\",\n          valid: false\n        },\n        password: {\n          type: \"password\",\n          icon: \"lock\",\n          text: \"Password\",\n          value: \"\",\n          maxLength: 15,\n          validition: {\n            required: true,\n            pattern: /^[0-9a-zA-Z]+$/,\n            password: true\n          },\n          error: \"The password is incorrect\",\n          valid: false\n        },\n        phone: {\n          type: \"text\",\n          icon: \"phone\",\n          text: \"Phone\",\n          value: \"\",\n          maxLength: 10,\n          validition: {\n            required: true,\n            pattern: /^[0-9]*$/,\n            phone: true\n          },\n          error: \"The phone is incorrect\",\n          valid: false\n        },\n        birthdate: {\n          type: \"date\",\n          icon: \"birthday cake\",\n          text: \"BirthDate\",\n          value: \"\",\n          maxLength: 10,\n          validition: {\n            required: true,\n            pattern: /^/\n          },\n          error: \"The birthday is incorrect\",\n          valid: false\n        }\n      },\n      validForm: false,\n      errorForm: \"\",\n      trySend: false\n    };\n\n    this.onChangeHendler = (e, id) => {\n      const form = { ...this.state.form\n      }; // const inputChange = { ...form[id] };\n\n      const value = e.target.value;\n\n      if (!this.state.form[id].validition[\"pattern\"].test(value)) {\n        console.log(form[id].value);\n        e.target.value = form[id].value;\n      } else form[id].value = value;\n\n      form.errorForm = validForm(form);\n      console.log(form.errorForm);\n\n      if (this.state.errorForm === \"\") {\n        form[id].valid = true;\n        form.validForm = true;\n      } else form[id].valid = false; // const valid = validValue(value, inputChange.validition)\n      // form[id].valid=valid;\n      //     const validForm = validForm(form);\n      //     form[id] = inputChange;\n      //     this.setState({ form: form, validForm: validForm })\n\n\n      this.setState({\n        form: form\n      }); //     // //if form valid?\n      // }\n    };\n\n    this.SignUp = () => {\n      // const form = { ...this.state.form };\n      // form.errorForm = validForm(form, id);\n      // console.log(form.errorForm)\n      // if (form.errorForm === \"\")\n      //     form[id].valid = true;\n      // else\n      //     form[id].valid = false;\n      // form.trySend = true\n      // this.setState({ form: form })\n      this.setState({\n        trySend: true\n      });\n\n      if (this.state.form.validForm === false) {\n        document.getElementById(\"message\").innerHTML = this.state.errorForm;\n      } else {\n        axios.post(`http://localhost:64430/api/Users`, {\n          Name: this.state.form[\"name\"].value,\n          Tz: this.state.form[\"tz\"].value,\n          Email: this.state.form[\"mail\"].value,\n          Password: this.state.form[\"password\"].value,\n          Phone: this.state.form[\"phone\"].value,\n          BirthDate: this.state.form[\"birthdate\"].value\n        }).then(x => {\n          this.props.history.replace('/users/login');\n          console.log(x);\n        }).catch(x => {\n          document.getElementById(\"message\").innerHTML = x.response.data.Message;\n        });\n      }\n    };\n\n    this._onFocus = e => {\n      e.currentTarget.type = \"date\";\n    };\n  }\n\n  render() {\n    const array = [];\n    console.log(this.state.form);\n\n    for (let x in this.state.form) {\n      array.push({\n        id: x,\n        config: this.state.form[x]\n      });\n    }\n\n    console.log(array);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: \"/Images/logo.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }), \" Sign-Up to your account\"), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.SignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      stacked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, array.map((x, i) => {\n      return /*#__PURE__*/React.createElement(Form.Input, {\n        key: i,\n        iconPosition: \"left\" // maxLength={x.config.maxLength}\n        ,\n        type: x.config.type,\n        onChange: event => this.onChangeHendler(event, x.id),\n        className: this.state.form.trySend && !this.state.form[x.id].valid ? \"error\" : x.id // error={this.state.trySend && !x.config.valid ? x.config.error : null}\n        ,\n        placeholder: x.config.text,\n        icon: x.config.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 40\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"message\",\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    }, \"Sign-Up\"))))));\n  }\n\n}\n\nexport default UsersSignUp;","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Users/SignUp/SignUp.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Segment","FormInput","Input","axios","validForm","UsersSignUp","state","form","name","type","icon","text","value","maxLength","validition","required","pattern","error","valid","tz","mail","password","phone","birthdate","errorForm","trySend","onChangeHendler","e","id","target","test","console","log","setState","SignUp","document","getElementById","innerHTML","post","Name","Tz","Email","Password","Phone","BirthDate","then","x","props","history","replace","catch","response","data","Message","_onFocus","currentTarget","render","array","push","config","height","maxWidth","map","i","event","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Button, Form, Grid, Header, Image, Segment, FormInput, Input } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport validForm from '../../Service/ValidStateForm'\r\nclass UsersSignUp extends Component {\r\n    state = {\r\n        form: {\r\n            name: {\r\n                type: \"text\",\r\n                icon: \"user\",\r\n                text: \"Name\",\r\n                value: \"\",\r\n                maxLength: 40,\r\n                validition: {\r\n                    required: true,\r\n                    pattern: /^[a-zA-Z ]*$/,\r\n                },\r\n                error: \"The name is incorrect\",\r\n                valid: false,\r\n            },\r\n            tz: {\r\n                type: \"text\",\r\n                icon: \"tag\",\r\n                text: \"Identity\",\r\n                value: \"\",\r\n                maxLength: 9,\r\n                validition: {\r\n                    required: true,\r\n                    pattern: /^[0-9]*$/,\r\n                    tz: true\r\n                },\r\n                error: \"The tz is incorrect\",\r\n                valid: false,\r\n            },\r\n            mail: {\r\n                type: \"text\",\r\n                icon: \"envelope\",\r\n                text: \"E-mail address\",\r\n                value: \"\",\r\n                maxLength: 50,\r\n                validition: {\r\n                    required: true,\r\n                    pattern: /^/,\r\n                    mail: true\r\n                    // pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                },\r\n                error: \"The email is incorrect\",\r\n                valid: false,\r\n            },\r\n            password: {\r\n                type: \"password\",\r\n                icon: \"lock\",\r\n                text: \"Password\",\r\n                value: \"\",\r\n                maxLength: 15,\r\n                validition: {\r\n                    required: true,\r\n                    pattern: /^[0-9a-zA-Z]+$/,\r\n                    password: true\r\n                },\r\n                error: \"The password is incorrect\",\r\n                valid: false,\r\n            },\r\n            phone: {\r\n                type: \"text\",\r\n                icon: \"phone\",\r\n                text: \"Phone\",\r\n                value: \"\",\r\n                maxLength: 10,\r\n                validition: {\r\n                    required: true,\r\n                    pattern: /^[0-9]*$/,\r\n                    phone: true\r\n                },\r\n                error: \"The phone is incorrect\",\r\n                valid: false,\r\n            },\r\n            birthdate: {\r\n                type: \"date\",\r\n                icon: \"birthday cake\",\r\n                text: \"BirthDate\",\r\n                value: \"\",\r\n                maxLength: 10,\r\n                validition: {\r\n                    required: true,\r\n                    pattern: /^/\r\n                },\r\n                error: \"The birthday is incorrect\",\r\n                valid: false,\r\n            },\r\n        },\r\n        validForm: false,\r\n        errorForm: \"\",\r\n        trySend: false\r\n    }\r\n    onChangeHendler = (e, id) => {\r\n        const form = { ...this.state.form };\r\n        // const inputChange = { ...form[id] };\r\n        const value = e.target.value;\r\n        if (!this.state.form[id].validition[\"pattern\"].test(value)){\r\n            console.log(form[id].value)\r\n            e.target.value = form[id].value\r\n        }\r\n        else\r\n            form[id].value = value;\r\n        form.errorForm = validForm(form);\r\n        console.log(form.errorForm)\r\n        if (this.state.errorForm === \"\") {\r\n            form[id].valid = true;\r\n            form.validForm = true;\r\n        }\r\n        else\r\n            form[id].valid = false;\r\n        // const valid = validValue(value, inputChange.validition)\r\n        // form[id].valid=valid;\r\n        //     const validForm = validForm(form);\r\n        //     form[id] = inputChange;\r\n        //     this.setState({ form: form, validForm: validForm })\r\n        this.setState({ form: form })\r\n        //     // //if form valid?\r\n        // }\r\n    }\r\n    SignUp = () => {\r\n        // const form = { ...this.state.form };\r\n        // form.errorForm = validForm(form, id);\r\n        // console.log(form.errorForm)\r\n        // if (form.errorForm === \"\")\r\n        //     form[id].valid = true;\r\n        // else\r\n        //     form[id].valid = false;\r\n        // form.trySend = true\r\n        // this.setState({ form: form })\r\n        this.setState({ trySend: true })\r\n        if (this.state.form.validForm === false) {\r\n            document.getElementById(\"message\").innerHTML = this.state.errorForm;\r\n        }\r\n        else {\r\n            axios.post(`http://localhost:64430/api/Users`, {\r\n                Name: this.state.form[\"name\"].value,\r\n                Tz: this.state.form[\"tz\"].value,\r\n                Email: this.state.form[\"mail\"].value,\r\n                Password: this.state.form[\"password\"].value,\r\n                Phone: this.state.form[\"phone\"].value,\r\n                BirthDate: this.state.form[\"birthdate\"].value,\r\n            })\r\n                .then(x => {\r\n                    this.props.history.replace('/users/login');\r\n                    console.log(x);\r\n                }\r\n                ).catch(x => {\r\n                    document.getElementById(\"message\").innerHTML = x.response.data.Message;\r\n                });\r\n        }\r\n    }\r\n    _onFocus = (e) => {\r\n        e.currentTarget.type = \"date\";\r\n    }\r\n    render() {\r\n        const array = [];\r\n        console.log(this.state.form)\r\n        for (let x in this.state.form) {\r\n            array.push({ id:x,config:this.state.form[x] })\r\n        }\r\n        console.log(array)\r\n        return (<div>\r\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Header as='h2' color='teal' textAlign='center'>\r\n                        <Image src='/Images/logo.png' /> Sign-Up to your account\r\n                  </Header>\r\n                    <Form size='large' onSubmit={this.SignUp}>\r\n                        <Segment stacked>\r\n                            {array.map((x, i) => {\r\n                                return <Form.Input\r\n                                    key={i} iconPosition=\"left\"\r\n                                    // maxLength={x.config.maxLength}\r\n                                    type={x.config.type}\r\n                                    onChange={event => this.onChangeHendler(event,x.id)}\r\n                                    className={this.state.form.trySend&&!this.state.form[x.id].valid?\"error\":x.id}\r\n                                    // error={this.state.trySend && !x.config.valid ? x.config.error : null}\r\n                                    placeholder={x.config.text} icon={x.config.icon}>\r\n                                </Form.Input>\r\n                            })}\r\n                            <div id=\"message\" style={{ color: \"red\" }}></div>\r\n                            <Button type=\"submit\" color='teal' fluid size='large'>\r\n                                Sign-Up\r\n                            </Button>\r\n                        </Segment>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default UsersSignUp;"]},"metadata":{},"sourceType":"module"}