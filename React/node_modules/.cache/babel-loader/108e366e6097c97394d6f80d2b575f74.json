{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\NewCard\\\\Lotery.js\";\nimport React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { connect } from 'react-redux';\nimport { Input, Select, Form, Dropdown, Grid, Segment, Radio, Header, Image, TextArea, Popup, Button, Icon, Label } from 'semantic-ui-react';\n\nclass Lotery extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      LoteryTypes: [{\n        key: 'Discount',\n        text: 'Discount',\n        value: 'Discount'\n      }, {\n        key: \"Plus Free\",\n        text: \"Plus Free\",\n        value: \"Plus Free\"\n      }, {\n        key: \"X in Y\",\n        text: \"X in Y\",\n        value: \"X in Y\"\n      }],\n      SumTypes: [{\n        key: '%',\n        text: '%',\n        value: '%'\n      }, {\n        key: '$',\n        text: '$',\n        value: '$'\n      }],\n      form: {\n        LoteryType: \"Discount\",\n        Sum: \"\",\n        SumType: \"$\",\n        Num1: \"\",\n        Num2: \"\",\n        Addition: \"\",\n        ExpireDate: \"\"\n      }\n    };\n\n    this.OnChangeSelect = (event, {\n      value\n    }) => {\n      const form = { ...this.state.form\n      };\n\n      if (event.target.id === \"loteryTypes\") {\n        for (let x in form) {\n          form[x] = \"\";\n        }\n\n        form.LoteryType = value;\n        form.SumType = \"$\";\n      } else {\n        form.SumType = value;\n      }\n\n      this.setState({\n        form: form\n      });\n      this.props.changed(this.props.index, form);\n    };\n\n    this.onChange = (value, id) => {\n      console.log(value, id);\n      const form = { ...this.state.form\n      };\n      form[id] = value;\n      this.setState({\n        form: form\n      });\n      this.props.changed(this.props.index, form);\n    };\n  }\n\n  render() {\n    console.log(this.props.lottery);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      style: {\n        marginLeft: \"9%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        width: 950\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Select, {\n      id: \"loteryTypes\",\n      label: \"Lottery Types\",\n      options: this.state.LoteryTypes,\n      defaultValue: this.state.form.LoteryType,\n      onChange: this.OnChangeSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }\n    }), this.state.form.LoteryType === \"Discount\" ? /*#__PURE__*/React.createElement(Popup, {\n      content: \"for example:30% or 30$\",\n      trigger: /*#__PURE__*/React.createElement(Form.Input, {\n        onChange: e => this.onChange(e.target.value, \"Sum\"),\n        value: this.state.form.Sum,\n        min: 1,\n        label: \"Details\",\n        type: \"number\",\n        labelPosition: \"right\",\n        action: /*#__PURE__*/React.createElement(Dropdown, {\n          id: \"sumType\",\n          button: true,\n          basic: true,\n          floating: true,\n          options: this.state.SumTypes,\n          defaultValue: this.state.form.SumType,\n          onChange: this.OnChangeSelect,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 53\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 54\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 41\n      }\n    }) : this.state.form.LoteryType === \"Plus Free\" ? /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"Details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      content: \"for example:1+1\",\n      trigger: /*#__PURE__*/React.createElement(Input, {\n        type: \"number\",\n        min: 1,\n        max: 10,\n        value: this.state.form.Num1,\n        onChange: e => this.onChange(e.target.value, \"Num1\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 91\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 49\n      }\n    }), \"+\", /*#__PURE__*/React.createElement(Popup, {\n      content: \"for example:1+1\",\n      trigger: /*#__PURE__*/React.createElement(Input, {\n        type: \"number\",\n        min: 1,\n        max: 10,\n        value: this.state.form.Num2,\n        onChange: e => this.onChange(e.target.value, \"Num2\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 90\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 48\n      }\n    })) : /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"Details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      content: \"for example:3 In 100$\",\n      trigger: /*#__PURE__*/React.createElement(Input, {\n        type: \"number\",\n        min: 1,\n        max: 10,\n        value: this.state.form.Num1,\n        onChange: e => this.onChange(e.target.value, \"Num1\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 97\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 49\n      }\n    }), \"In\", /*#__PURE__*/React.createElement(Popup, {\n      content: \"for example:3 In 100$\",\n      trigger: /*#__PURE__*/React.createElement(Input, {\n        type: \"number\",\n        min: 1,\n        max: 1000000,\n        value: this.state.form.Num2,\n        onChange: e => this.onChange(e.target.value, \"Num2\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 93\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Form.Input, {\n      type: \"date\",\n      label: \"Expire Date\",\n      value: this.state.form.ExpireDate,\n      onChange: e => this.onChange(e.target.value, \"ExpireDate\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.TextArea, {\n      label: \"Addition\",\n      type: \"text\",\n      placeholder: \"Addition\",\n      maxLength: 50,\n      value: this.state.form.Addition,\n      onChange: e => this.onChange(e.target.value, \"Addition\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lottery: state.enterprise.lottery\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectLottery: lottery => dispatch({\n      type: \"SELECT_LOTTERY\",\n      payload: lottery\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lotery);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/NewCard/Lotery.js"],"names":["React","Component","connect","Input","Select","Form","Dropdown","Grid","Segment","Radio","Header","Image","TextArea","Popup","Button","Icon","Label","Lotery","state","LoteryTypes","key","text","value","SumTypes","form","LoteryType","Sum","SumType","Num1","Num2","Addition","ExpireDate","OnChangeSelect","event","target","id","x","setState","props","changed","index","onChange","console","log","render","lottery","textAlign","marginLeft","width","e","mapStateToProps","enterprise","mapDispatchToProps","dispatch","selectLottery","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { connect } from 'react-redux'\r\nimport { Input, Select, Form, Dropdown, Grid, Segment, Radio, Header, Image, TextArea, Popup, Button, Icon, Label } from 'semantic-ui-react';\r\nclass Lotery extends Component {\r\n    state = {\r\n        LoteryTypes: [\r\n            { key: 'Discount', text: 'Discount', value: 'Discount' },\r\n            { key: \"Plus Free\", text: \"Plus Free\", value: \"Plus Free\" },\r\n            { key: \"X in Y\", text: \"X in Y\", value: \"X in Y\" }],\r\n        SumTypes: [\r\n            { key: '%', text: '%', value: '%' },\r\n            { key: '$', text: '$', value: '$' }\r\n        ],\r\n        form: {\r\n            LoteryType: \"Discount\",\r\n            Sum: \"\",\r\n            SumType: \"$\",\r\n            Num1: \"\",\r\n            Num2: \"\",\r\n            Addition: \"\",\r\n            ExpireDate: \"\",\r\n        },\r\n\r\n    }\r\n    OnChangeSelect = (event, { value }) => {\r\n        const form = { ...this.state.form }\r\n        if (event.target.id === \"loteryTypes\") {\r\n            for (let x in form) {\r\n                form[x] = \"\";\r\n            }\r\n            form.LoteryType = value;\r\n            form.SumType = \"$\"\r\n        }\r\n        else {\r\n            form.SumType = value;\r\n        }\r\n        this.setState({ form: form });\r\n        this.props.changed(this.props.index, form)\r\n    }\r\n    onChange = (value, id) => {\r\n        console.log(value, id)\r\n        const form = { ...this.state.form }\r\n        form[id] = value;\r\n        this.setState({ form: form });\r\n        this.props.changed(this.props.index, form)\r\n\r\n    }\r\n    render() {\r\n        console.log(this.props.lottery)\r\n        return (\r\n            <div style={{ textAlign: \"left\" }}>\r\n                <Form style={{ marginLeft: \"9%\" }}>\r\n                    <Grid >\r\n                        <Grid.Column style={{ width: 950 }}>\r\n                            <Grid.Row>\r\n                                <Form.Group widths=\"equal\">\r\n                                    <Form.Select id=\"loteryTypes\" label=\"Lottery Types\" options={this.state.LoteryTypes}\r\n                                        defaultValue={this.state.form.LoteryType}\r\n                                        onChange={this.OnChangeSelect}></Form.Select>\r\n                                    {this.state.form.LoteryType === \"Discount\" ?\r\n                                        <Popup\r\n                                            content=\"for example:30% or 30$\"\r\n                                            trigger={<Form.Input\r\n                                                onChange={(e) => this.onChange(e.target.value, \"Sum\")}\r\n                                                value={this.state.form.Sum}\r\n                                                min={1}\r\n                                                label=\"Details\"\r\n                                                type=\"number\"\r\n                                                labelPosition='right'\r\n                                                action={\r\n                                                    <Dropdown id=\"sumType\" button basic floating options={this.state.SumTypes} defaultValue={this.state.form.SumType}  onChange={this.OnChangeSelect}\r\n                                                    />}></Form.Input>} /> : this.state.form.LoteryType === \"Plus Free\" ?\r\n                                            <Form.Input label=\"Details\">\r\n                                                <Popup content=\"for example:1+1\" trigger={<Input type=\"number\" min={1} max={10} value={this.state.form.Num1} onChange={(e) => this.onChange(e.target.value, \"Num1\")}></Input>} />\r\n                                             +\r\n                                               <Popup content=\"for example:1+1\" trigger={<Input type=\"number\" min={1} max={10} value={this.state.form.Num2} onChange={(e) => this.onChange(e.target.value, \"Num2\")}></Input>} /></Form.Input> :\r\n                                            <Form.Input label=\"Details\">\r\n                                                <Popup content=\"for example:3 In 100$\" trigger={<Input type=\"number\" min={1} max={10} value={this.state.form.Num1} onChange={(e) => this.onChange(e.target.value, \"Num1\")}></Input>} />\r\n                                                In\r\n                                            <Popup content=\"for example:3 In 100$\" trigger={<Input type=\"number\" min={1} max={1000000} value={this.state.form.Num2} onChange={(e) => this.onChange(e.target.value, \"Num2\")}></Input>} /></Form.Input>}\r\n                                    <Form.Input type=\"date\" label=\"Expire Date\" value={this.state.form.ExpireDate} onChange={(e) => this.onChange(e.target.value, \"ExpireDate\")}>\r\n                                    </Form.Input>\r\n                                </Form.Group>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                <Form.TextArea label=\"Addition\" type=\"text\" placeholder=\"Addition\" maxLength={50} value={this.state.form.Addition} onChange={(e) => this.onChange(e.target.value, \"Addition\")}></Form.TextArea></Grid.Row></Grid.Column></Grid>\r\n                </Form>\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lottery: state.enterprise.lottery,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        selectLottery: (lottery) => dispatch({ type: \"SELECT_LOTTERY\", payload: lottery }),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Lotery);\r\n"]},"metadata":{},"sourceType":"module"}