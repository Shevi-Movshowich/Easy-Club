{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\NewCard\\\\NewCard.js\";\nimport React, { Component } from 'react';\nimport Lotery from './Lotery';\nimport \"../../Public.css\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { connect } from 'react-redux';\nimport { Button, Form, Header, Divider, Dimmer, Loader, Message } from 'semantic-ui-react';\nimport CardDetails from \"./CardDetails\";\nimport { postNewCard } from \"../../../Store/actions/EnterpriseAction\";\nimport axios from 'axios';\nimport validForm from \"../../Service/ValidStateForm\";\n\nclass NewCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lotteries: {\n        new: {\n          header: \"Lottery For Newers\",\n          active: false\n        },\n        birthday: {\n          header: \"Lottery For Birthday\",\n          active: false\n        },\n        club_members: {\n          header: \"Lottery For Club Members\",\n          active: false\n        }\n      },\n      lotery: [],\n      card: {},\n      cardError: false,\n      lotteryForm: {\n        LoteryType: \"Discount\",\n        Sum: \"\",\n        SumType: \"$\",\n        Num1: \"\",\n        Num2: \"\",\n        Addition: \"\",\n        ExpireDate: \"\"\n      },\n      cardForm: {\n        Cost: {\n          label: \"Price For Customer\",\n          icon: \"$\",\n          type: 'number',\n          step: 5,\n          text: \"Card Price *\",\n          value: \"\",\n          validation: {\n            required: true\n          }\n        },\n        CountPoints: {\n          label: \"Count CountPoints\",\n          icon: \" = 1 $\",\n          type: 'number',\n          text: \"Count CountPoints *\",\n          value: \"\",\n          validation: {\n            required: true\n          }\n        },\n        Type: {\n          options: [{\n            key: \"Basic\",\n            text: 'Basic card',\n            value: 'Basic card'\n          }, {\n            key: \"Primium\",\n            text: 'Primium card',\n            value: 'Primium card'\n          }],\n          label: \"Card Type\",\n          text: \"Type *\",\n          value: \"\",\n          validation: {\n            required: true\n          }\n        },\n        Img: {\n          label: 'Enterprise Image',\n          value: \"\",\n          text: \"select Img\",\n          validation: {\n            required: false,\n            img: true\n          }\n        }\n      },\n      fileName: \"\"\n    };\n\n    this.hanleSelectOnChange = (event, {\n      value\n    }) => {\n      const form = { ...this.state.form\n      };\n      const input = { ...form[\"Type\"]\n      };\n      input.value = value;\n      form[\"Type\"] = input;\n      this.setState({\n        form: form\n      });\n    };\n\n    this.convertImg = event => {\n      const file = event.target.files[0];\n\n      if (file) {\n        var name = file.name;\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        console.log(reader);\n\n        reader.onload = () => {\n          this.onChangeHandler(String(reader.result), \"Img\");\n          this.setState({\n            fileName: name\n          });\n        };\n      }\n    };\n\n    this.onClick = (event, x) => {\n      event.preventDefault();\n      const lotteries = { ...this.state.lotteries\n      };\n      const lotery = { ...lotteries[x.id]\n      };\n      lotery.active = !lotery.active;\n      lotteries[x.id] = lotery;\n      this.setState({\n        lotteries: lotteries\n      });\n    };\n\n    this.onChangeHandler = (value, id) => {\n      const form = { ...this.state.cardForm\n      };\n      const input = { ...form[id]\n      };\n\n      if (input.type === \"number\") {\n        input.value = parseInt(value);\n      } else {\n        input.value = value;\n      }\n\n      form[id] = input;\n      this.setState({\n        cardForm: form\n      });\n      const card = {};\n\n      for (let x in this.state.cardForm) {\n        card[x] = this.state.cardForm[x].value;\n      }\n\n      this.changeCard(card);\n    };\n\n    this.changeLotery = (index, value) => {\n      const lotery = [...this.state.lotery];\n      lotery[index] = value;\n      this.setState({\n        lotery: lotery\n      });\n    };\n\n    this.changeCard = card => {\n      this.setState({\n        card: card\n      });\n    };\n\n    this.onChange = (value, id, index) => {\n      const form = { ...this.state.lotteryForm\n      };\n      form[id] = value;\n      this.setState({\n        lotteryForm: form\n      });\n      this.changeLotery(index, form);\n    };\n\n    this.OnChangeSelect = (event, {\n      value\n    }, index) => {\n      const form = { ...this.state.lotteryForm\n      };\n\n      if (value.length > 1) {\n        for (let x in form) {\n          form[x] = \"\";\n        }\n\n        form.LoteryType = value;\n        form.SumType = \"$\";\n      } else form.SumType = value;\n\n      this.setState({\n        lotteryForm: form\n      });\n      this.changeLotery(index, form);\n    };\n\n    this.onSubmit = () => {\n      // const obj=validForm({...this.state.card});\n      console.log(this.state.lotery[0]);\n      const data = { ...this.state.card\n      };\n      data['Lotery'] = [...this.state.lotery];\n      data['EnterpId'] = this.props.enterprise.C_id;\n      this.props.loadingNewCard();\n      console.log(data);\n      postNewCard(data).then(x => {\n        this.props.history.replace('clearing');\n      }).catch(x => {\n        this.props.errorFiled(x.response.data.Message);\n      });\n    };\n  }\n\n  render() {\n    // console.log(this.props.indexedCard)\n    const array = [];\n\n    for (let x in this.state.lotteries) {\n      array.push({\n        id: x,\n        config: this.state.lotteries[x]\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        width: '30vw',\n        marginLeft: '35vw',\n        marginTop: '5vh',\n        textAlign: 'center',\n        fontSize: '180%',\n        color: 'rgb(40, 44, 52)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, \"New Card\"), /*#__PURE__*/React.createElement(CardDetails, {\n      error: this.state.cardError,\n      convertImg: this.convertImg,\n      onSelect: this.hanleSelectOnChange,\n      onChange: this.onChangeHandler,\n      changed: this.changeCard,\n      form: this.state.cardForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"left\",\n      style: {\n        marginLeft: \"1vw\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, \" Lotteries \"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, array.map((x, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Header, {\n        as: \"h4\",\n        color: \"teal\",\n        textAlign: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        style: {\n          marginRight: \"3vw\",\n          marginLeft: \"1vw\"\n        },\n        onClick: event => this.onClick(event, x),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 33\n        }\n      }, x.config.active ? \"Delete\" : \"Insert\"), x.config.header), x.config.active == true ? /*#__PURE__*/React.createElement(Lotery, {\n        index: i,\n        onSelect: this.OnChangeSelect,\n        onChange: this.onChange,\n        form: this.state.lotteryForm,\n        changed: this.changeLotery,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 56\n        }\n      }) : \"\");\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"teal\",\n      style: {\n        fontSize: \"18px\",\n        marginTop: \"9vh\",\n        padding: \"2vh\",\n        width: \"25%\",\n        backgroundColor: \"#282c34\",\n        marginLeft: \"38%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, \"Submit And Pay\")), /*#__PURE__*/React.createElement(Dimmer, {\n      id: \"dimmer\",\n      active: this.props.enterp_loading,\n      inverted: \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, this.props.error));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    enterprise: state.enterprise.enterprise,\n    enterp_loading: state.enterprise.loading,\n    error: state.enterprise.error,\n    cards: state.enterprise.cards,\n    indexedCard: state.enterprise.indexedCard\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadingNewCard: () => dispatch({\n      type: \"LOADING\",\n      payload: true\n    }),\n    errorFiled: errorMsg => dispatch({\n      type: \"ERROR\",\n      payload: errorMsg\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCard);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/NewCard/NewCard.js"],"names":["React","Component","Lotery","connect","Button","Form","Header","Divider","Dimmer","Loader","Message","CardDetails","postNewCard","axios","validForm","NewCard","state","lotteries","new","header","active","birthday","club_members","lotery","card","cardError","lotteryForm","LoteryType","Sum","SumType","Num1","Num2","Addition","ExpireDate","cardForm","Cost","label","icon","type","step","text","value","validation","required","CountPoints","Type","options","key","Img","img","fileName","hanleSelectOnChange","event","form","input","setState","convertImg","file","target","files","name","reader","FileReader","readAsDataURL","console","log","onload","onChangeHandler","String","result","onClick","x","preventDefault","id","parseInt","changeCard","changeLotery","index","onChange","OnChangeSelect","length","onSubmit","data","props","enterprise","C_id","loadingNewCard","then","history","replace","catch","errorFiled","response","render","array","push","config","width","marginLeft","marginTop","textAlign","fontSize","color","map","i","marginRight","padding","backgroundColor","enterp_loading","error","mapStateToProps","loading","cards","indexedCard","mapDispatchToProps","dispatch","payload","errorMsg"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Lotery from './Lotery';\r\nimport \"../../Public.css\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { connect } from 'react-redux'\r\nimport { Button, Form, Header, Divider, Dimmer, Loader, Message } from 'semantic-ui-react';\r\nimport CardDetails from \"./CardDetails\"\r\nimport { postNewCard } from \"../../../Store/actions/EnterpriseAction\"\r\nimport axios from 'axios';\r\nimport validForm from \"../../Service/ValidStateForm\"\r\nclass NewCard extends Component {\r\n    state = {\r\n        lotteries: {\r\n            new: {\r\n                header: \"Lottery For Newers\",\r\n                active: false,\r\n            },\r\n            birthday: {\r\n                header: \"Lottery For Birthday\",\r\n                active: false,\r\n            },\r\n            club_members: {\r\n                header: \"Lottery For Club Members\",\r\n                active: false,\r\n            }\r\n        },\r\n        lotery: [],\r\n        card: {},\r\n        cardError:false,\r\n        lotteryForm: {\r\n            LoteryType: \"Discount\",\r\n            Sum: \"\",\r\n            SumType: \"$\",\r\n            Num1: \"\",\r\n            Num2: \"\",\r\n            Addition: \"\",\r\n            ExpireDate: \"\",\r\n        },\r\n        cardForm: {\r\n            Cost: {\r\n                label: \"Price For Customer\",\r\n                icon: \"$\",\r\n                type: 'number',\r\n                step: 5,\r\n                text: \"Card Price *\",\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                }\r\n            },\r\n            CountPoints: {\r\n                label: \"Count CountPoints\",\r\n                icon: \" = 1 $\",\r\n                type: 'number',\r\n                text: \"Count CountPoints *\",\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                }\r\n            },\r\n            Type: {\r\n                options: [{ key: \"Basic\", text: 'Basic card', value: 'Basic card'},\r\n                { key: \"Primium\", text: 'Primium card', value: 'Primium card' }],\r\n                label: \"Card Type\",\r\n                text: \"Type *\",\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                }\r\n            },\r\n            Img: {\r\n                label: 'Enterprise Image',\r\n                value: \"\",\r\n                text: \"select Img\",\r\n                validation: {\r\n                    required: false,\r\n                    img: true,\r\n                }\r\n            }\r\n        },\r\n        fileName: \"\",\r\n    }\r\n    hanleSelectOnChange = (event, { value }) => {\r\n        const form = { ...this.state.form }\r\n        const input = { ...form[\"Type\"] }\r\n        input.value = value;\r\n        form[\"Type\"] = input\r\n        this.setState({ form: form })\r\n    }\r\n    convertImg = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            var name = file.name;\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            console.log(reader)\r\n            reader.onload = () => {\r\n                this.onChangeHandler(String(reader.result), \"Img\")\r\n                this.setState({ fileName: name })\r\n            }\r\n        }\r\n    }\r\n    onClick = (event, x) => {\r\n        event.preventDefault();\r\n        const lotteries = { ...this.state.lotteries };\r\n        const lotery = { ...lotteries[x.id] };\r\n        lotery.active = !lotery.active;\r\n        lotteries[x.id] = lotery;\r\n        this.setState({ lotteries: lotteries })\r\n    }\r\n    onChangeHandler = (value, id) => {\r\n        const form = { ...this.state.cardForm }\r\n        const input = { ...form[id] }\r\n        if (input.type === \"number\") {\r\n            input.value = parseInt(value);\r\n        }\r\n        else {\r\n            input.value = value;\r\n        }\r\n        form[id] = input\r\n        this.setState({ cardForm: form })\r\n        const card = {}\r\n        for (let x in this.state.cardForm) {\r\n            card[x] = this.state.cardForm[x].value;\r\n        }\r\n        this.changeCard(card);\r\n    }\r\n    changeLotery = (index, value) => {\r\n        const lotery = [...this.state.lotery];\r\n        lotery[index] = value;\r\n        this.setState({ lotery: lotery })\r\n    }\r\n    changeCard = (card) => {\r\n        this.setState({ card: card })\r\n    }\r\n    onChange = (value,id,index) => {\r\n        const form = { ...this.state.lotteryForm }\r\n        form[id] = value;\r\n        this.setState({ lotteryForm: form });\r\n        this.changeLotery(index, form)\r\n    }\r\n    OnChangeSelect = (event, { value },index) => {\r\n        const form = { ...this.state.lotteryForm }\r\n        if (value.length > 1) {\r\n            for (let x in form) {\r\n                form[x] = \"\";\r\n            }\r\n            form.LoteryType = value;\r\n            form.SumType = \"$\"\r\n        }\r\n        else\r\n            form.SumType = value;\r\n        this.setState({ lotteryForm: form });\r\n        this.changeLotery(index, form)\r\n    }\r\n    onSubmit = () => {\r\n// const obj=validForm({...this.state.card});\r\n        console.log(this.state.lotery[0])\r\n        const data = { ...this.state.card };\r\n    data['Lotery'] = [...this.state.lotery];\r\n    data['EnterpId'] = this.props.enterprise.C_id;\r\n        this.props.loadingNewCard();\r\n        console.log(data)\r\n        postNewCard(data).then(x => {\r\n            this.props.history.replace('clearing');\r\n        })\r\n            .catch(x => { this.props.errorFiled(x.response.data.Message) })\r\n    }\r\n    render() {\r\n        // console.log(this.props.indexedCard)\r\n        const array = [];\r\n        for (let x in this.state.lotteries) {\r\n            array.push({ id: x, config: this.state.lotteries[x] })\r\n        }\r\n        return (\r\n            <div>\r\n                <h1 style={{ width: '30vw', marginLeft: '35vw', marginTop: '5vh', textAlign: 'center', fontSize: '180%', color: 'rgb(40, 44, 52)' }}>New Card</h1>\r\n                <CardDetails error={this.state.cardError} convertImg={this.convertImg} onSelect={this.hanleSelectOnChange} onChange={this.onChangeHandler} changed={this.changeCard} form={this.state.cardForm}></CardDetails>\r\n                <Header as='h2' color='teal' textAlign='left' style={{ marginLeft: \"1vw\" }}> Lotteries </Header>\r\n                <Form onSubmit={this.onSubmit}>\r\n                    {array.map((x, i) => {\r\n                        return <div>\r\n                            <Divider></Divider>\r\n                            <Header as='h4' color='teal' textAlign='left'>\r\n                                <Button style={{ marginRight: \"3vw\", marginLeft: \"1vw\" }} onClick={event => this.onClick(event, x)}>{x.config.active ? \"Delete\" : \"Insert\"}</Button>\r\n                                {x.config.header}\r\n                            </Header>\r\n                            {x.config.active == true ? <Lotery index={i} onSelect={this.OnChangeSelect} onChange={this.onChange} form={this.state.lotteryForm} changed={this.changeLotery}></Lotery> : \"\"}\r\n                            {/* {x.id===\"club_members\"?<Button>Insert</Button>:\"\"} */}\r\n                        </div>\r\n                    })}\r\n                    <Button type=\"submit\" color='teal' style={{ fontSize: \"18px\", marginTop: \"9vh\", padding: \"2vh\", width: \"25%\", backgroundColor: \"#282c34\", marginLeft: \"38%\" }}>Submit And Pay</Button>\r\n                </Form>\r\n                <Dimmer id='dimmer' active={this.props.enterp_loading} inverted='false'>\r\n                    <Loader size='large'>Loading</Loader>\r\n                </Dimmer>\r\n                <div style={{ color: \"red\", textAlign: \"center\" }}>{this.props.error}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        enterprise: state.enterprise.enterprise,\r\n        enterp_loading: state.enterprise.loading,\r\n        error: state.enterprise.error,\r\n        cards:state.enterprise.cards,\r\n        indexedCard:state.enterprise.indexedCard,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadingNewCard: () => dispatch({ type: \"LOADING\", payload: true }),\r\n        errorFiled: (errorMsg) => dispatch({ type: \"ERROR\", payload: errorMsg }),\r\n        \r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCard);\r\n"]},"metadata":{},"sourceType":"module"}