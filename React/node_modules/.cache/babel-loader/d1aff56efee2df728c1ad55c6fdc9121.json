{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\easy-club\\\\React\\\\src\\\\Components\\\\Enterprise\\\\NewCard\\\\NewCard.js\";\nimport React, { Component } from 'react';\nimport Lotery from './Lotery';\nimport \"../../Public.css\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { connect } from 'react-redux';\nimport { Button, Form, Header, Divider, Dimmer, Loader, Message } from 'semantic-ui-react';\nimport CardDetails from \"./CardDetails\";\nimport { postNewCard } from \"../../../Store/actions/EnterpriseAction\";\nimport axios from 'axios';\nimport validForm from \"../../Service/ValidStateForm\";\n\nclass NewCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lotery: {\n        new: {\n          header: \"Lottery For Newers\",\n          active: false,\n          LoteryType: \"Discount\",\n          Sum: \"\",\n          SumType: \"$\",\n          Num1: \"\",\n          Num2: \"\",\n          Addition: \"\",\n          ExpireDate: \"\",\n          Type: 1,\n          Expiration: \"\"\n        },\n        birthday: {\n          header: \"Lottery For Birthday\",\n          active: false,\n          LoteryType: \"Discount\",\n          Sum: \"\",\n          SumType: \"$\",\n          Num1: \"\",\n          Num2: \"\",\n          Addition: \"\",\n          ExpireDate: \"\",\n          Type: 2,\n          Expiration: \"\"\n        },\n        club_members: {\n          header: \"Lottery For Club Members\",\n          active: false,\n          LoteryType: \"Discount\",\n          Sum: \"\",\n          SumType: \"$\",\n          Num1: \"\",\n          Num2: \"\",\n          Addition: \"\",\n          ExpireDate: \"\",\n          Type: 3,\n          Expiration: \"\"\n        }\n      },\n      card: {},\n      cardError: false,\n      cardForm: {\n        Cost: {\n          label: \"Price For Customer\",\n          icon: \"$\",\n          type: 'number',\n          step: 5,\n          text: \"Card Price *\",\n          value: \"\",\n          validation: {\n            required: true\n          }\n        },\n        CountPoints: {\n          label: \"Count CountPoints\",\n          icon: \" = 1 $\",\n          type: 'number',\n          text: \"Count CountPoints *\",\n          value: \"\",\n          validation: {\n            required: true\n          }\n        },\n        Type: {\n          options: [{\n            key: \"Basic\",\n            text: 'Basic card',\n            value: 'Basic card'\n          }, {\n            key: \"Primium\",\n            text: 'Primium card',\n            value: 'Primium card'\n          }],\n          label: \"Card Type\",\n          text: \"Type *\",\n          value: \"\",\n          validation: {\n            required: true\n          }\n        },\n        Img: {\n          label: 'Enterprise Image',\n          value: \"\",\n          text: \"select Img *\",\n          validation: {\n            required: false,\n            img: true\n          }\n        },\n        Duration: {\n          label: 'Valid Time',\n          value: \"\",\n          step: 1,\n          type: \"number\",\n          text: \"Valid Time *\",\n          validation: {\n            required: false\n          }\n        }\n      },\n      fileName: \"\"\n    };\n\n    this.onSelectCard = (event, {\n      value\n    }) => {\n      const form = { ...this.state.cardForm\n      };\n      const input = { ...form[\"Type\"]\n      };\n      input.value = value;\n      form[\"Type\"] = input;\n      this.setState({\n        cardForm: form\n      });\n      const card = {};\n\n      for (let x in this.state.cardForm) {\n        card[x] = this.state.cardForm[x].value;\n      }\n\n      this.setState({\n        card: card\n      });\n    };\n\n    this.convertImg = event => {\n      const file = event.target.files[0];\n\n      if (file) {\n        var name = file.name;\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        console.log(reader);\n\n        reader.onload = () => {\n          this.onChangeCard(String(reader.result), \"Img\");\n          this.setState({\n            fileName: name\n          });\n        };\n      }\n    };\n\n    this.onChangeCard = (value, id) => {\n      const form = { ...this.state.cardForm\n      };\n      const input = { ...form[id]\n      };\n\n      if (input.type === \"number\") {\n        input.value = parseInt(value);\n      } else {\n        input.value = value;\n      }\n\n      form[id] = input;\n      this.setState({\n        cardForm: form\n      });\n      const card = {};\n\n      for (let x in this.state.cardForm) {\n        card[x] = this.state.cardForm[x].value;\n      }\n\n      this.setState({\n        card: card\n      });\n    };\n\n    this.onClick = (event, type) => {\n      event.preventDefault();\n      const lotery = { ...this.state.lotery\n      };\n      const loterySelected = { ...lotery[type]\n      };\n      loterySelected.active = !loterySelected.active;\n      lotery[type] = loterySelected;\n      this.setState({\n        lotery: lotery\n      });\n    };\n\n    this.onChangeLottery = (value, id, type) => {\n      const form = { ...this.state.lotery\n      };\n      const loterySelected = { ...form[type]\n      };\n      loterySelected[id] = value;\n      form[type] = loterySelected;\n      this.setState({\n        lotery: form\n      });\n    };\n\n    this.onSelectLottery = (event, {\n      value\n    }, type) => {\n      const form = { ...this.state.lotery\n      };\n      const loterySelected = { ...form[type]\n      };\n\n      if (value.length > 1) {\n        for (let x in loterySelected) {\n          if (x !== \"active\" && x !== \"header\" && x !== \"Type\" && x !== \"SumType\") {\n            loterySelected[x] = \"\";\n          }\n        }\n\n        loterySelected.LoteryType = value;\n      } else loterySelected.SumType = value;\n\n      form[type] = loterySelected;\n      this.setState({\n        lotery: form\n      });\n    };\n\n    this.onSubmit = () => {\n      const data = { ...this.state.card\n      };\n      const lottery = [];\n      var cnt = 0;\n\n      for (let x in this.state.lotery) {\n        if (this.state.lotery[x].active === true) lottery[cnt++] = { ...this.state.lotery[x]\n        };\n      }\n\n      data['Lotery'] = [...lottery];\n      data['EnterpId'] = this.props.enterprise.C_id;\n      this.props.loadingNewCard();\n      postNewCard(data).then(x => {\n        this.props.history.replace('clearing');\n      }).catch(x => {\n        this.props.errorFiled(x.response.data.Message);\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.location.pathname === '/enetrprises/UpdateEnterpCard') {\n      const form = { ...this.state.form\n      };\n      form['BirthDate'].value = this.props.user['BirthDate'];\n      form['Email'].value = this.props.user['Email'];\n      form['Name'].value = this.props.user['Name'];\n      form['Password'].value = this.props.user['Password'];\n      form['Phone'].value = this.props.user['Phone'];\n      form['Tz'].value = this.props.user['Tz'];\n      console.log(form);\n      this.setState({\n        form: form\n      });\n    }\n  } //card\n\n\n  render() {\n    const array = [];\n\n    for (let x in this.state.lotery) {\n      array.push({\n        id: x,\n        config: this.state.lotery[x]\n      });\n    }\n\n    console.log(this.props.indexedCard);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        width: '30vw',\n        marginLeft: '35vw',\n        marginTop: '5vh',\n        textAlign: 'center',\n        fontSize: '180%',\n        color: 'rgb(40, 44, 52)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }, \"New Card\"), /*#__PURE__*/React.createElement(CardDetails, {\n      error: this.state.cardError,\n      fileName: this.state.fileName,\n      convertImg: this.convertImg,\n      onSelect: this.onSelectCard,\n      onChange: this.onChangeCard,\n      form: { ...this.state.cardForm\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"left\",\n      style: {\n        marginLeft: \"1vw\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, \" Lotteries \"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, array.map(x => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: x.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Header, {\n        as: \"h4\",\n        color: \"teal\",\n        textAlign: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        style: {\n          marginRight: \"3vw\",\n          marginLeft: \"1vw\"\n        },\n        onClick: event => this.onClick(event, x.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 33\n        }\n      }, x.config.active ? \"Delete\" : \"Insert\"), x.config.header), console.log(x.id), x.config.active == true ? /*#__PURE__*/React.createElement(Lotery, {\n        index: x.id,\n        onSelect: this.onSelectLottery,\n        onChange: this.onChangeLottery,\n        form: x.config,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 56\n        }\n      }) : \"\");\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"teal\",\n      style: {\n        fontSize: \"18px\",\n        marginTop: \"9vh\",\n        padding: \"2vh\",\n        width: \"25%\",\n        backgroundColor: \"#282c34\",\n        marginLeft: \"38%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, \"Submit And Pay\")), /*#__PURE__*/React.createElement(Dimmer, {\n      id: \"dimmer\",\n      active: this.props.enterp_loading,\n      inverted: \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, this.props.error));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    enterprise: state.enterprise.enterprise,\n    enterp_loading: state.enterprise.loading,\n    error: state.enterprise.error,\n    cards: state.enterprise.cards,\n    indexedCard: state.enterprise.indexedCard\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadingNewCard: () => dispatch({\n      type: \"LOADING\",\n      payload: true\n    }),\n    errorFiled: errorMsg => dispatch({\n      type: \"ERROR\",\n      payload: errorMsg\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCard);","map":{"version":3,"sources":["D:/Programming/easy-club/React/src/Components/Enterprise/NewCard/NewCard.js"],"names":["React","Component","Lotery","connect","Button","Form","Header","Divider","Dimmer","Loader","Message","CardDetails","postNewCard","axios","validForm","NewCard","state","lotery","new","header","active","LoteryType","Sum","SumType","Num1","Num2","Addition","ExpireDate","Type","Expiration","birthday","club_members","card","cardError","cardForm","Cost","label","icon","type","step","text","value","validation","required","CountPoints","options","key","Img","img","Duration","fileName","onSelectCard","event","form","input","setState","x","convertImg","file","target","files","name","reader","FileReader","readAsDataURL","console","log","onload","onChangeCard","String","result","id","parseInt","onClick","preventDefault","loterySelected","onChangeLottery","onSelectLottery","length","onSubmit","data","lottery","cnt","props","enterprise","C_id","loadingNewCard","then","history","replace","catch","errorFiled","response","componentDidMount","location","pathname","user","render","array","push","config","indexedCard","width","marginLeft","marginTop","textAlign","fontSize","color","map","marginRight","padding","backgroundColor","enterp_loading","error","mapStateToProps","loading","cards","mapDispatchToProps","dispatch","payload","errorMsg"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Lotery from './Lotery';\r\nimport \"../../Public.css\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { connect } from 'react-redux'\r\nimport { Button, Form, Header, Divider, Dimmer, Loader, Message } from 'semantic-ui-react';\r\nimport CardDetails from \"./CardDetails\"\r\nimport { postNewCard } from \"../../../Store/actions/EnterpriseAction\"\r\nimport axios from 'axios';\r\nimport validForm from \"../../Service/ValidStateForm\"\r\nclass NewCard extends Component {\r\n    state = {\r\n        lotery: {\r\n            new: {\r\n                header: \"Lottery For Newers\",\r\n                active: false,\r\n                LoteryType: \"Discount\",\r\n                Sum: \"\",\r\n                SumType: \"$\",\r\n                Num1: \"\",\r\n                Num2: \"\",\r\n                Addition: \"\",\r\n                ExpireDate: \"\",\r\n                Type:1,\r\n                Expiration:\"\"\r\n            },\r\n            birthday: {\r\n                header: \"Lottery For Birthday\",\r\n                active: false,\r\n                LoteryType: \"Discount\",\r\n                Sum: \"\",\r\n                SumType: \"$\",\r\n                Num1: \"\",\r\n                Num2: \"\",\r\n                Addition: \"\",\r\n                ExpireDate: \"\",\r\n                Type:2,\r\n                Expiration:\"\",\r\n            },\r\n            club_members: {\r\n                header: \"Lottery For Club Members\",\r\n                active: false,\r\n                LoteryType: \"Discount\",\r\n                Sum: \"\",\r\n                SumType: \"$\",\r\n                Num1: \"\",\r\n                Num2: \"\",\r\n                Addition: \"\",\r\n                ExpireDate: \"\",\r\n                Type:3,\r\n                Expiration:\"\",\r\n            },\r\n        },\r\n        card: {},\r\n        cardError: false,\r\n        cardForm: {\r\n            Cost: {\r\n                label: \"Price For Customer\",\r\n                icon: \"$\",\r\n                type: 'number',\r\n                step: 5,\r\n                text: \"Card Price *\",\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                }\r\n            },\r\n            CountPoints: {\r\n                label: \"Count CountPoints\",\r\n                icon: \" = 1 $\",\r\n                type: 'number',\r\n                text: \"Count CountPoints *\",\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                }\r\n            },\r\n            Type: {\r\n                options: [{ key: \"Basic\", text: 'Basic card', value: 'Basic card' },\r\n                { key: \"Primium\", text: 'Primium card', value: 'Primium card' }],\r\n                label: \"Card Type\",\r\n                text: \"Type *\",\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                }\r\n            },\r\n            Img: {\r\n                label: 'Enterprise Image',\r\n                value: \"\",\r\n                text: \"select Img *\",\r\n                validation: {\r\n                    required: false,\r\n                    img: true,\r\n                }\r\n            },\r\n            Duration: {\r\n                label: 'Valid Time',\r\n                value: \"\",\r\n                step: 1,\r\n                type: \"number\",\r\n                text: \"Valid Time *\",\r\n                validation: {\r\n                    required: false,\r\n                }\r\n            }\r\n        },\r\n        fileName: \"\",\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.location.pathname === '/enetrprises/UpdateEnterpCard') {\r\n            const form = { ...this.state.form };\r\n            form['BirthDate'].value = this.props.user['BirthDate']\r\n            form['Email'].value = this.props.user['Email']\r\n            form['Name'].value = this.props.user['Name']\r\n            form['Password'].value = this.props.user['Password']\r\n            form['Phone'].value = this.props.user['Phone']\r\n            form['Tz'].value = this.props.user['Tz']\r\n            console.log(form)\r\n            this.setState({ form: form })\r\n        }\r\n\r\n    }\r\n    //card\r\n    onSelectCard = (event, { value }) => {\r\n        const form = { ...this.state.cardForm }\r\n        const input = { ...form[\"Type\"] }\r\n        input.value = value;\r\n        form[\"Type\"] = input\r\n        this.setState({ cardForm: form })\r\n        const card = {}\r\n        for (let x in this.state.cardForm) {\r\n            card[x] = this.state.cardForm[x].value;\r\n        }\r\n        this.setState({ card: card })\r\n    }\r\n    convertImg = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            var name = file.name;\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            console.log(reader)\r\n            reader.onload = () => {\r\n                this.onChangeCard(String(reader.result), \"Img\")\r\n                this.setState({ fileName: name })\r\n            }\r\n        }\r\n    }\r\n    onChangeCard = (value, id) => {\r\n        const form = { ...this.state.cardForm }\r\n        const input = { ...form[id] }\r\n        if (input.type === \"number\") {\r\n            input.value = parseInt(value);\r\n        }\r\n        else {\r\n            input.value = value;\r\n        }\r\n        form[id] = input\r\n        this.setState({ cardForm: form })\r\n        const card = {}\r\n        for (let x in this.state.cardForm) {\r\n            card[x] = this.state.cardForm[x].value;\r\n        }\r\n        this.setState({ card: card })\r\n    }\r\n    onClick = (event, type) => {\r\n        event.preventDefault();\r\n        const lotery = { ...this.state.lotery };\r\n        const loterySelected = { ...lotery[type] };\r\n        loterySelected.active = !loterySelected.active;\r\n        lotery[type] = loterySelected;\r\n        this.setState({ lotery: lotery })\r\n    }\r\n    //lottery\r\n    onChangeLottery = (value, id, type) => {\r\n        const form = { ...this.state.lotery };\r\n        const loterySelected = { ...form[type] };\r\n        loterySelected[id] = value;\r\n        form[type] = loterySelected;\r\n        this.setState({ lotery: form });\r\n    }\r\n    onSelectLottery = (event, { value }, type) => {\r\n        const form = { ...this.state.lotery };\r\n        const loterySelected = { ...form[type] };\r\n        if (value.length > 1) {\r\n            for (let x in loterySelected) {\r\n                if (x !== \"active\" && x !== \"header\" && x!==\"Type\" && x!==\"SumType\") {\r\n                    loterySelected[x] = \"\";\r\n                }\r\n            }\r\n            loterySelected.LoteryType = value;\r\n        }\r\n        else\r\n            loterySelected.SumType = value;\r\n        form[type] = loterySelected;\r\n        this.setState({ lotery: form });\r\n    }\r\n    //main form\r\n    onSubmit = () => {\r\n        const data = { ...this.state.card };\r\n        const lottery = []\r\n        var cnt = 0;\r\n        for (let x in this.state.lotery) {\r\n            if (this.state.lotery[x].active === true)\r\n                lottery[cnt++] = { ...this.state.lotery[x] };\r\n        }\r\n        data['Lotery'] = [...lottery];\r\n        data['EnterpId'] = this.props.enterprise.C_id;\r\n        this.props.loadingNewCard();\r\n        postNewCard(data).then(x => {\r\n            this.props.history.replace('clearing');\r\n        }).catch(x => { this.props.errorFiled(x.response.data.Message) })\r\n    }\r\n    render() {\r\n        const array = [];\r\n        for (let x in this.state.lotery) {\r\n            array.push({ id: x, config: this.state.lotery[x] })\r\n        }\r\n        console.log(this.props.indexedCard)\r\n        return (\r\n            <div>\r\n                <h1 style={{ width: '30vw', marginLeft: '35vw', marginTop: '5vh', textAlign: 'center', fontSize: '180%', color: 'rgb(40, 44, 52)' }}>New Card</h1>\r\n                <CardDetails error={this.state.cardError} fileName={this.state.fileName} convertImg={this.convertImg} onSelect={this.onSelectCard} onChange={this.onChangeCard} form={{ ...this.state.cardForm }}></CardDetails>\r\n                <Header as='h2' color='teal' textAlign='left' style={{ marginLeft: \"1vw\" }}> Lotteries </Header>\r\n                <Form onSubmit={this.onSubmit}>\r\n                    {array.map((x) => {\r\n                        return <div key={x.id}>\r\n                            <Divider></Divider>\r\n                            <Header as='h4' color='teal' textAlign='left'>\r\n                                <Button style={{ marginRight: \"3vw\", marginLeft: \"1vw\" }} onClick={event => this.onClick(event, x.id)}>{x.config.active ? \"Delete\" : \"Insert\"}</Button>\r\n                                {x.config.header}\r\n                            </Header>\r\n                            {console.log(x.id)}\r\n                            {x.config.active == true ? <Lotery index={x.id} onSelect={this.onSelectLottery} onChange={this.onChangeLottery} form={x.config}></Lotery> : \"\"}\r\n                        </div>\r\n                    })}\r\n                    <Button type=\"submit\" color='teal' style={{ fontSize: \"18px\", marginTop: \"9vh\", padding: \"2vh\", width: \"25%\", backgroundColor: \"#282c34\", marginLeft: \"38%\" }}>Submit And Pay</Button>\r\n                </Form>\r\n                <Dimmer id='dimmer' active={this.props.enterp_loading} inverted='false'>\r\n                    <Loader size='large'>Loading</Loader>\r\n                </Dimmer>\r\n                <div style={{ color: \"red\", textAlign: \"center\" }}>{this.props.error}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        enterprise: state.enterprise.enterprise,\r\n        enterp_loading: state.enterprise.loading,\r\n        error: state.enterprise.error,\r\n        cards: state.enterprise.cards,\r\n        indexedCard: state.enterprise.indexedCard,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadingNewCard: () => dispatch({ type: \"LOADING\", payload: true }),\r\n        errorFiled: (errorMsg) => dispatch({ type: \"ERROR\", payload: errorMsg }),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCard);\r\n"]},"metadata":{},"sourceType":"module"}